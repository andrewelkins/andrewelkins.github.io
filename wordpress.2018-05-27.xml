<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/4.9.1" created="2018-05-27 21:05" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title></title>
	<link>http://andrewelkins.com</link>
	<description></description>
	<pubDate>Sun, 27 May 2018 21:05:04 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://andrewelkins.com/</wp:base_site_url>
	<wp:base_blog_url>http://andrewelkins.com</wp:base_blog_url>

	<wp:author><wp:author_id>2</wp:author_id><wp:author_login><![CDATA[ae]]></wp:author_login><wp:author_email><![CDATA[accounts@andrewelkins.com]]></wp:author_email><wp:author_display_name><![CDATA[Andrew]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>


	<generator>https://wordpress.org/?v=4.9.1</generator>

	<item>
		<title>HTML5 WebSockets - Presented by Scott Mattocks</title>
		<link>http://andrewelkins.com/2011/11/09/html5-websockets-presented-by-scott-mattocks/</link>
		<pubDate>Wed, 09 Nov 2011 06:19:51 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://localhost/andrewelkins/?p=50</guid>
		<description></description>
		<content:encoded><![CDATA[This was the first talk I went to at ZendCon. The provided description:
<blockquote>The emergence of HTML 5 and related technologies opens up a new world of possibilities for web applications. Among those new technologies are WebSockets, which allow for bi-directional communication between the browser and the server. This session will introduce WebSockets by exploring a few practical applications before diving into the JavaScript API and the WebSocket communication protocol.</blockquote>
What I gained most from the talk was when he talked about websockets. In a gross generalization, they can be used to replace some common applications of ajax communication between the server and the client. Instead of using long polling in a web application, which has unnecessary overhead when sending small bits of data, using a web socket connection for the communication is a better solution.

Web socket communication requires work on both the server side and client side to enable the two way communication.

On the client side, like ajax, it relies heavily on javascript. Processes information in a similar fashion to AJAX. Web sockets at it's heart is about the communication of data between the server and client. There's some work on the client side to allow the setting up and maintaining of the connection, but really less than with a long polling ajax setup.

On the server side it's a little bit more work. The original request for a connection is sent over the standard http port for the site. Then the web socket server will respond with the port to set the connection up with the web socket server.

&nbsp;

More Information:
<ul>
	<li><a href="http://websocket.org/echo.html" target="_blank">Web Socket Browser Test</a></li>
	<li><a href="http://net.tutsplus.com/tutorials/javascript-ajax/start-using-html5-websockets-today/" target="_blank">Web Socket Tutorial </a></li>
	<li><a href="https://github.com/remy/html5demos/tree/master/server/" target="_blank">Nodejs Websocket Server Test</a></li>
	<li><a href="http://spoutserver.com/talks/websockets.html#slide1" target="_blank">Slides</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>50</wp:post_id>
		<wp:post_date><![CDATA[2011-11-09 06:19:51]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-11-09 06:19:51]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[html5-websockets-presented-by-scott-mattocks]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="events"><![CDATA[Events]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[onswipe_thumb]]></wp:meta_key>
			<wp:meta_value><![CDATA[SKIP]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2</wp:comment_id>
			<wp:comment_author><![CDATA[Aeron]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[109.230.216.20]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-11-12 22:20:36]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-11-13 06:20:36]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great! thanks for the share!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1321461186.1529";s:7:"message";s:41:"ae changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:2:"ae";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Overview of Zend Framework 2</title>
		<link>http://andrewelkins.com/2011/11/07/overview-of-zend-framework-2/</link>
		<pubDate>Mon, 07 Nov 2011 06:20:39 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://localhost/andrewelkins/?p=58</guid>
		<description></description>
		<content:encoded><![CDATA[The second talk that I attended of the conference was on an overview of Zend Framework 2 (ZF2). Although I thought it was going to go over the Event Driven Actions in ZF2, they changed it due to popular demand.

The ZendCon website gave this description:
<blockquote>One of the most anticipated topics of this year's ZendCon is what is new in ZF2. Learn about the core features now available, the development approaches they enable, and get a preview of the new MVC layer of Zend Framework 2 in action</blockquote>
<h6>Since it was an overview there wasn't a ton of information presented that I hadn't read already. What was reinforced for me was the use of namespaces. ZF2 relies heavily on namespaces which is a good thing.</h6>
Another key item that was brought up was dependency injection which is a key addition to ZF2. It allows the OO code to reduce the amount of coupling and reliance on other code to function. See this very good <a href="http://www.slideshare.net/fabpot/dependency-injection-with-php-and-php-53" target="_blank">slideshare</a> on the advantages on dependency injection if you're not quite sure what it is.

In general, this was an overview of the ZF2 functionality. It was really nothing more than a brief summary of the topics on the <a href="http://framework.zend.com/wiki/pages/viewpage.action?pageId=42303506" target="_blank">"How to start"</a> page.

Overall it was a good overall presentation if you wanted an overview. If you were looking for a more in depth presentation, like I was, it wouldn't fit your needs.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>58</wp:post_id>
		<wp:post_date><![CDATA[2011-11-07 06:20:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-11-07 06:20:39]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[overview-of-zend-framework-2]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="events"><![CDATA[Events]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[onswipe_thumb]]></wp:meta_key>
			<wp:meta_value><![CDATA[SKIP]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Scaling PHP Applications with Redis</title>
		<link>http://andrewelkins.com/2011/11/24/scaling-php-applications-with-redis/</link>
		<pubDate>Thu, 24 Nov 2011 20:00:35 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://localhost/andrewelkins/?p=62</guid>
		<description></description>
		<content:encoded><![CDATA[Redis is an important technology when dealing with caching. This was one of the talks that I really wanted to attend at ZendCon. It was given by <a href="http://twitter.com/#!/jimbojsb" target="_blank">Josh Butts</a> of Vertive LLC.
<blockquote>Redis is a NoSQL technology that rides a fine line between database and in-memory cache. Redis also offers "remote data structures", which gives it a significant advantage over other in-memory databases. This session will cover several PHP clients for Redis, and how to use them for caching, data modeling and generally improving application throughput.</blockquote>
<a href="http://redis.io/" target="_blank">Redis</a> is an open source in memory key value store with optional persistance. The current version is 2.4.2 as of this writing. The latest stable version is 2.2.15 which what Josh recommended as the minimum version you would want to use. He noted that 2.4 was pretty stable in it's own right. Hoever, I have notice that since 2.4.0 release 10 days ago they have already release 2 patches (now at 2.4.2). Thus, personally, unless a feature of 2.4 is necessary I'd say go with 2.2 latest or 2.3 latest.

Once Redis is installed how to connect to it becomes an issue. According to Josh, there's not a good GUI tool to use with Redis. Instead it's best to use the command line interface.

On the actual functioning of Redis, it functions on hash keys. Think of it like associative arrays in PHP. However, there's a huge difference. There is NO nesting. The array is only one level deep.

As far as connecting PHP to Redis there's two options that Josh mentioned. Rediska and Predis.

<a href="http://rediska.geometria-lab.net/" target="_blank">Rediska</a> is compatible with PHP 5.2+ and Zend Framework 1.x. A huge feature is the profiler. It allows you to understand how your application is using Redis and optimize it from there. Another positive is Rediska has native session handling.

<a href="https://github.com/nrk/predis/wiki" target="_blank">Predis</a> is built for PHP 5.3+ giving it  the ability to being developed for the future and not being locked in to older technology. It has profiling and lazy connections to the redis server.

Josh's recommendation between the two was use Predis if you have 5.3 available to you, but Rediska was okay too. It seemed that one of his main reason behind this was Predis has been seeing more recent activity and was thus more likely to be maintained in the future.

My take, at the moment, is also to go with Predis since it seems like a more active project. It also looks as if it is looking forward and being developed for feature redis improvements. I haven't had an opportunity to actively  test between the two, so my decision is temporary until I have the opportunity to factually compare instead of going on hunches.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>62</wp:post_id>
		<wp:post_date><![CDATA[2011-11-24 12:00:35]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-11-24 20:00:35]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[scaling-php-applications-with-redis]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="events"><![CDATA[Events]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[onswipe_thumb]]></wp:meta_key>
			<wp:meta_value><![CDATA[SKIP]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>MySQL 5.5+</title>
		<link>http://andrewelkins.com/2011/11/03/mysql-5-5/</link>
		<pubDate>Fri, 04 Nov 2011 06:27:28 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://localhost/andrewelkins/?p=67</guid>
		<description></description>
		<content:encoded><![CDATA[The MySQL talk was given by Dave Stokes of Oracle. He's the MySQL community manager. The ZendCon summary:
<blockquote>MySQL had been evolving since the Oracle take over in 2010. This session will cover how new features like multi-threaded replication, InnoDB-Memcached plugin for NoSQL data access, or having InnoDB as the default storage engine will change life for PHP developers. Learn how partitioning and new performance metrics will allow allow better access speed and more control over your MySQL instances.</blockquote>
This talk was about the improvements with MySQL since the take over by Oracle. Many in the community feared the Oracle take over, but in reality it has been good for MySQL.

They are adding huge features to MySQL
<ul>
	<li>Massive improvements for MySQL on Windows</li>
	<li>RTMF method to setup replication</li>
	<li>More secure</li>
	<li>Innodb improvements</li>
</ul>
<div>The key feature I was concern/interested in was the InnoDB improvements. Something I ws unaware of since Oracle bought MySQL they brought together the InnoDB team and MySQL Team leading to much tighter integration and quicker bug fixes. It's also leading to adding features to speed it up.</div>
<div></div>
<div>The new feature I was unaware of was the creation of nosql-style memcached api access of the data. I haven't had a chance to use it in practice but in theory this seems like an awesome step for MySQL.</div>
<div></div>
<div>On security, MySQL is doing more to protect/ensure data durability. Meaning that the data will store correctly and be retrived each time. Hoever, this does not replace developers escaping input. He restated again and again, "Escape your data", "Escape your data", "Escape your data". As a developer, do not trust users. Simple as that.</div>
I was able to connect with Dave and get the slides. You can download them below.

Download slides -&gt; <a href="http://localhost/andrewelkins/wp-content/uploads/2011/11/MySQLupdateZendcon.ppt">MySQL update Zendcon</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>67</wp:post_id>
		<wp:post_date><![CDATA[2011-11-03 22:27:28]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-11-04 06:27:28]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[mysql-5-5]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="events"><![CDATA[Events]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[onswipe_thumb]]></wp:meta_key>
			<wp:meta_value><![CDATA[SKIP]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The Contextual Experience of the Mobile Web</title>
		<link>http://andrewelkins.com/2011/10/29/the-contextual-experience-of-the-mobile-web/</link>
		<pubDate>Sun, 30 Oct 2011 06:29:30 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://localhost/andrewelkins/?p=72</guid>
		<description></description>
		<content:encoded><![CDATA[The contextual experience on the web was a talk by Jeff Carouth of Texas A&amp;M University. The ZendCon summary:
<blockquote>The great native apps vs mobile web debate will live on for a little while longer, but more and more we are realizing that we can get the best of both worlds with mobile web apps. However, there is an expectation of context on mobile devices, and ignoring that experience expectation is a mistake. Let's look at the contextual experience of the mobile web.</blockquote>
My summary would be history of developing for a mobile client and the emergence of adaptive design as a solution.

One of the interesting points that he brought up was something that had been going around my office lately as well.
<blockquote>What determines a mobile client?</blockquote>
Meaning an iPad and netbook have the same resolution, which one is mobile? Both? iPad only?

Within CSS3 theres specification for media queries. One of these queries that we use is to base the design on resolution. In doing so you are basing the display on the size of screen. At the outset this seems like a great idea. However, there is a drawback. The design to fit the size doesn't account for data size. You could design a photo heavy site to fit in a 600 wide window but if you don't compensate for data size performance on a 3G network user experience will still suck. So while media queries are part of the answer they are not all of the answer.

To fix the second part, one option discussed was image compression or replacement. For compression there's JS resizing. It works but it is ugly. You look at that code and the processing overhead and cringe.

Then there's responsive images, downloading a small image and replacing it with a higher quality one. This adds overhead and bandwidth. You're download two images for every image on your page. Not ideal.

Ideally this should be done on the server side. The technology and/or programs haven't been written for this yet. You'd need to inspect the client agent and then respond with the appropriate image size and resolution. According to him, there's not a good implementation of this at the moment. However, I think there's vast opportunity for someone to develop such a tool.

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>72</wp:post_id>
		<wp:post_date><![CDATA[2011-10-29 22:29:30]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-10-30 06:29:30]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[the-contextual-experience-of-the-mobile-web]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="events"><![CDATA[Events]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[onswipe_thumb]]></wp:meta_key>
			<wp:meta_value><![CDATA[SKIP]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Character sets suck</title>
		<link>http://andrewelkins.com/?p=74</link>
		<pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://localhost/andrewelkins/?p=74</guid>
		<description></description>
		<content:encoded><![CDATA[This talk was supposed to be given by two people but one Ligaya Turmella was unavailable. So Raymond DeRoo carried the talk along by himself.
<blockquote>Anyone who has ever had to work with multiple languages has at one point or another found themselves cursing character sets. They do not display properly, data going into or out of the database is not as expected, or they do not order themselves as they should. We will discuss a little bit of their history, the basics of handling character sets and how MySQL works with and handles them.</blockquote>
cccc]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>74</wp:post_id>
		<wp:post_date><![CDATA[2011-11-01 05:17:22]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="events"><![CDATA[Events]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Display phpinfo from the command line</title>
		<link>http://andrewelkins.com/2011/12/02/display-phpinfo-from-the-command-line/</link>
		<pubDate>Fri, 02 Dec 2011 19:37:41 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=93</guid>
		<description></description>
		<content:encoded><![CDATA[This afternoon I was wanting to get a couple things from phpinfo but didn't want to do the typical make a php file, put phpinfo, run it from a browser or command prompt. There's a better, quicker way if you know what you want. One will output it to a file for review:
<blockquote>echo "&lt;?php phpinfo(); ?&gt;" | php &gt; phpinfo.txt</blockquote>
Second is the quickest. It output the info and the grep for the information you need:
<blockquote>php -i | grep 'version'</blockquote>
Replace version with your own search query.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>93</wp:post_id>
		<wp:post_date><![CDATA[2011-12-02 11:37:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-12-02 19:37:41]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[display-phpinfo-from-the-command-line]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[onswipe_thumb]]></wp:meta_key>
			<wp:meta_value><![CDATA[SKIP]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Displaying phpinfo from the command line</title>
		<link>http://andrewelkins.com/?p=100</link>
		<pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=100</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>100</wp:post_id>
		<wp:post_date><![CDATA[2011-12-20 15:29:48]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Python revival</title>
		<link>http://andrewelkins.com/?p=110</link>
		<pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=110</guid>
		<description></description>
		<content:encoded><![CDATA[For years I've been a PHP developer, and frankly haven't had a solid reason to seriously explore elsewhere. I still really don't except curiosity. This same curiosity has lead me to explore other languages before: Ruby and Python. So again, why now? Well I can use Python skills to develop projects at work and also as I become aware of the limits/inconveniences of working in PHP I began to look for a more elegant language.  Then I revisited the same code I had worked with in python years ago. I quickly realized that python was the language that made more sense.

https://www.djangoproject.com/]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>110</wp:post_id>
		<wp:post_date><![CDATA[2012-01-29 03:04:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Setting up a LAMP server</title>
		<link>http://andrewelkins.com/?p=132</link>
		<pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=132</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>132</wp:post_id>
		<wp:post_date><![CDATA[2012-05-15 16:56:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How to set up a server with linux, nginx, mysql, and python</title>
		<link>http://andrewelkins.com/?p=135</link>
		<pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=135</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>135</wp:post_id>
		<wp:post_date><![CDATA[2012-05-23 10:12:51]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-to-set-up-a-server-linux-nginx-mysql-python]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Is MVC dead?</title>
		<link>http://andrewelkins.com/?p=138</link>
		<pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=138</guid>
		<description></description>
		<content:encoded><![CDATA[After reading a great article by <a title="List of posts" href="http://cirw.in/">Conrad Irwin</a> titled <a href="http://cirw.in/blog/time-to-move-on" target="_blank">"MVC is Dead, Time to MOVE on."</a> I began to think about how I use MVC in architecting technical solutions and began to realize that I had been doing some of what he mentions already.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>138</wp:post_id>
		<wp:post_date><![CDATA[2012-07-17 11:26:28]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Software versioning</title>
		<link>http://andrewelkins.com/?p=140</link>
		<pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=140</guid>
		<description></description>
		<content:encoded><![CDATA[What is right, wrong, and dumb.

First, I don't claim to know the best way to version your particular software. However, what I do know is from doing it with various projects I've settled on a standard.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>140</wp:post_id>
		<wp:post_date><![CDATA[2012-07-17 11:27:56]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Install nginx, php-fpm, and mysql on CentOS myhosting.com VPS</title>
		<link>http://andrewelkins.com/?p=143</link>
		<pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=143</guid>
		<description></description>
		<content:encoded><![CDATA[<h6>Warning note: This is how I performed this, use the instructions at your own risk.</h6>
<h1>Basics</h1>
Things you'll need for this:
<ul>
	<li><a href="http://myhosting.com/virtual-server-hosting/custom-vps.aspx" target="_blank">myhosting VPS</a> Centos</li>
	<li>myhosting parallels control panel access</li>
	<li>terminal / ssh access</li>
</ul>
<h1>How to</h1>
The default install of Centos from MyHosting includes Apache as the web server. The first thing you'll want to do is remove it.
<blockquote>Login to the VPS panel <a href="https://manage.myhosting.com/" target="_blank">https://manage.myhosting.com/</a></blockquote>
Then go to the VPS Management tab
<p style="text-align: center;"><a href="http://andrewelkins.com/wp-content/uploads/2012/09/vps-management.png"><img class="size-medium wp-image-145 aligncenter" title="vps-management" src="http://andrewelkins.com/wp-content/uploads/2012/09/vps-management-300x223.png" alt="" width="300" height="223" /></a></p>
Login  to the VZPP either by "Login to VZPP via VPS IP address" or "Login to VZPP via VPS host name". This will take you to the Parallels Power Panel.

<a href="http://andrewelkins.com/wp-content/uploads/2012/09/parallels-home-screen.png"><img class="aligncenter size-medium wp-image-146" title="parallels-home-screen" src="http://andrewelkins.com/wp-content/uploads/2012/09/parallels-home-screen-300x179.png" alt="" width="300" height="179" /></a>

From there choose "Software Packages",Where going to remove apache. In order to do this we need to remove a few modules first. mod_ssl and mod_perl otherwise removing apache will error out.

<a href="http://andrewelkins.com/wp-content/uploads/2012/09/mod-ssl-package.png"><img class="aligncenter size-medium wp-image-147" title="mod-ssl-package" src="http://andrewelkins.com/wp-content/uploads/2012/09/mod-ssl-package-300x127.png" alt="" width="300" height="127" /></a>

<a href="http://andrewelkins.com/wp-content/uploads/2012/09/mod-perl.png"><img class="aligncenter size-medium wp-image-148" title="mod-perl" src="http://andrewelkins.com/wp-content/uploads/2012/09/mod-perl-300x126.png" alt="" width="300" height="126" /></a>

With each of those search, then select the module and uninstall. With those uninstalled we'll uninstall Apache which in CentOS terms is http.

<a href="http://andrewelkins.com/wp-content/uploads/2012/09/software-packages.png"><img class="aligncenter size-medium wp-image-149" title="software-packages" src="http://andrewelkins.com/wp-content/uploads/2012/09/software-packages-300x95.png" alt="" width="300" height="95" /></a>

So procedure here, search, check http and choose uninstall.

Now that we have apache removed, time to install nginx/php-fpm/mysql via commandline.
<h1>INSTALL NGINX / PHP_FPM</h1>
I decided to go with Remi's packages for this. You'll need to set those up.
<blockquote>rpm -Uvh http://download.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-7.noarch.rpm

rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-6.rpm</blockquote>
Now we'll add nginx to the config so it knows about the different repo:
<blockquote>vim /etc/yum.repos.d/nginx.repo</blockquote>
Input and save
<blockquote>[nginx]
name=nginx repo
baseurl=http://nginx.org/packages/centos/$releasever/$basearch/
gpgcheck=0
enabled=1</blockquote>
Install the modules. When it asks to download new modules accept by typing "y"
<blockquote>yum --enablerepo=remi,remi-test install nginx php php-fpm php-common php-pear php-pdo php-mysql php-pgsql php-pecl-memcache php-gd php-mbstring php-mcrypt php-xml</blockquote>
It might not work with php-mcrypt and say that it cannot download it. If that's the case remove it from the previous statement.
<blockquote>yum --enablerepo=remi,remi-test install nginx php php-fpm php-common php-pear php-pdo php-mysql php-pgsql php-pecl-memcache php-gd php-mbstring php-mcrypt php-xml</blockquote>
Then run this:

wget http://dl.fedoraproject.org/pub/epel/5/x86_64/libmcrypt-2.5.7-5.el5.x86_64.rpm]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>143</wp:post_id>
		<wp:post_date><![CDATA[2012-09-21 13:45:09]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[install-nginx-on-myhosting-vps]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Getting started with Laravel 4</title>
		<link>http://andrewelkins.com/?p=160</link>
		<pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=160</guid>
		<description></description>
		<content:encoded><![CDATA[https://github.com/andrew13/Laravel4-Bootstrap

&nbsp;

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>160</wp:post_id>
		<wp:post_date><![CDATA[2013-01-06 18:28:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[getting-started-with-laravel-4]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>perceived load time </title>
		<link>http://andrewelkins.com/?p=167</link>
		<pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=167</guid>
		<description></description>
		<content:encoded><![CDATA[doc ready under 1 sec. shows that the user can interact with the page in under a sec.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>167</wp:post_id>
		<wp:post_date><![CDATA[2013-01-17 12:02:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[perceived-load-time]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Command line</title>
		<link>http://andrewelkins.com/?p=268</link>
		<pubDate>Mon, 25 Feb 2013 07:55:27 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=268</guid>
		<description></description>
		<content:encoded><![CDATA[http://laravel.com/docs/artisan/commands]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>268</wp:post_id>
		<wp:post_date><![CDATA[2013-02-24 23:55:27]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-02-25 07:55:27]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[command-line]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="l4"><![CDATA[l4]]></category>
		<category domain="post_tag" nicename="laravel"><![CDATA[laravel]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Checking for php shell scripts</title>
		<link>http://andrewelkins.com/?p=311</link>
		<pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=311</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>A quick way to check for a php shell within a directory.
[ps]
grep -RPnDskip &quot;(passthru|shell_exec|system|phpinfo|base64_decode|chmod|mkdir|fopen|fclose|readfile) *\(&quot; *
[/ps]
<a href="http://25yearsofprogramming.com/blog/2010/20100315.htm" target="_blank">Source</a></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>311</wp:post_id>
		<wp:post_date><![CDATA[2013-03-07 17:13:18]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[checking-for-php-shell-scripts]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Setting up NFS on AWS</title>
		<link>http://andrewelkins.com/?p=333</link>
		<pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=333</guid>
		<description></description>
		<content:encoded><![CDATA[In order for NFS to work the UID and GIU need to match on the server using the mount and the NFS.

On my server I]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>333</wp:post_id>
		<wp:post_date><![CDATA[2013-03-22 09:49:31]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Issues installing Ghost on digitialocean</title>
		<link>http://andrewelkins.com/?p=491</link>
		<pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=491</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>491</wp:post_id>
		<wp:post_date><![CDATA[2014-03-29 22:20:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Find loaded modules in Apache 2.x</title>
		<link>http://andrewelkins.com/2012/01/05/find-loaded-modules-in-apache-2-x/</link>
		<pubDate>Fri, 06 Jan 2012 06:07:50 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=102</guid>
		<description></description>
		<content:encoded><![CDATA[I was trying to figure out how to find the loaded modules in Apache and came across this nice command.
<blockquote>httpd -M</blockquote>
Used like:
<blockquote>$ httpd -M
Loaded Modules:
core_module (static)
mpm_prefork_module (static)
http_module (static)
so_module (static)
authn_file_module (shared)
authn_default_module (shared)

......

rewrite_module (shared)
php5_module (shared)
extract_forwarded_module (shared)
geoip_module (shared)
Syntax OK</blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>102</wp:post_id>
		<wp:post_date><![CDATA[2012-01-05 22:07:50]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-01-06 06:07:50]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[find-loaded-modules-in-apache-2-x]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[onswipe_thumb]]></wp:meta_key>
			<wp:meta_value><![CDATA[SKIP]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How to add git to an amazon ami ec2 instance</title>
		<link>http://andrewelkins.com/2012/01/08/how-to-add-git-to-an-amazon-ami-ec2-instance/</link>
		<pubDate>Sun, 08 Jan 2012 19:58:06 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=104</guid>
		<description></description>
		<content:encoded><![CDATA[To install git on amazon ami is really simple. Make sure you have sudo and then run yum to install it.
<blockquote>sudo yum install git</blockquote>
That's it. The output should be something like:
<blockquote>$ sudo yum install git
Loaded plugins: fastestmirror, priorities, security
Determining fastest mirrors
amzn-main | 2.1 kB 00:00
amzn-main/primary_db | 1.6 MB 00:00
amzn-updates | 2.3 kB 00:00
amzn-updates/primary_db | 233 kB 00:00
Setting up Install Process
Resolving Dependencies
--&gt; Running transaction check
--&gt; Processing Dependency: git = 1.7.2.5-1.16.amzn1 for package: perl-Git-1.7.2.5-1.16.amzn1.i686
---&gt; Package git.i686 0:1.7.4.5-1.21.amzn1 set to be updated
--&gt; Running transaction check
---&gt; Package perl-Git.i686 0:1.7.4.5-1.21.amzn1 set to be updated
--&gt; Finished Dependency Resolution

Dependencies Resolved

==============================================================================================================================
Package Arch Version Repository Size
==============================================================================================================================
Updating:
git i686 1.7.4.5-1.21.amzn1 amzn-main 4.4 M
Updating for dependencies:
perl-Git i686 1.7.4.5-1.21.amzn1 amzn-main 16 k

Transaction Summary
==============================================================================================================================
Install 0 Package(s)
Upgrade 2 Package(s)

Total download size: 4.4 M
Is this ok [y/N]: y
Downloading Packages:
(1/2): git-1.7.4.5-1.21.amzn1.i686.rpm | 4.4 MB 00:00
(2/2): perl-Git-1.7.4.5-1.21.amzn1.i686.rpm | 16 kB 00:00
------------------------------------------------------------------------------------------------------------------------------
Total 7.9 MB/s | 4.4 MB 00:00
Running rpm_check_debug
Running Transaction Test
Transaction Test Succeeded
Running Transaction
Updating : git-1.7.4.5-1.21.amzn1.i686 1/4
Updating : perl-Git-1.7.4.5-1.21.amzn1.i686 2/4
Cleanup : git-1.7.2.5-1.16.amzn1.i686 3/4
Cleanup : perl-Git-1.7.2.5-1.16.amzn1.i686 4/4

Updated:
git.i686 0:1.7.4.5-1.21.amzn1

Dependency Updated:
perl-Git.i686 0:1.7.4.5-1.21.amzn1

Complete!</blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>104</wp:post_id>
		<wp:post_date><![CDATA[2012-01-08 11:58:06]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-01-08 19:58:06]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-to-add-git-to-an-amazon-ami-ec2-instance]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[onswipe_thumb]]></wp:meta_key>
			<wp:meta_value><![CDATA[SKIP]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Recursively remove svn directories from a directory</title>
		<link>http://andrewelkins.com/2012/01/13/recursively-remove-svn-directories-from-a-directory/</link>
		<pubDate>Fri, 13 Jan 2012 19:47:27 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=106</guid>
		<description></description>
		<content:encoded><![CDATA[Removing all .svn directories from a file structure in linux is as simple as running a one liner.
<blockquote>find . -name .svn -print0 | xargs -0 rm -rf</blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>106</wp:post_id>
		<wp:post_date><![CDATA[2012-01-13 11:47:27]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-01-13 19:47:27]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[recursively-remove-svn-directories-from-a-directory]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[onswipe_thumb]]></wp:meta_key>
			<wp:meta_value><![CDATA[SKIP]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>VMWare Fusion 4 - Set static IP address</title>
		<link>http://andrewelkins.com/2012/01/31/vmware-fusion-4-set-static-ip-address/</link>
		<pubDate>Wed, 01 Feb 2012 03:12:30 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=118</guid>
		<description></description>
		<content:encoded><![CDATA[In vmware Fusion 4 there is <a href="kb.vmware.com/selfservice/microsites/search.do?language=en_US&amp;cmd=displayKC&amp;externalId=1004023" target="_blank">no boot.sh </a>that is found in previous versions
<blockquote>sudo "/Library/Application Support/VMware Fusion/boot.sh" --restart</blockquote>
So if you make a change to the network settings like setting a static ip address you'll need to restart your computer for the settings to take effect.

To set a static ip in VMWare Fusion 4 do the following:

First on your vm in terminal run
<blockquote>ifconfig</blockquote>
Then edit the HWaddr
<blockquote>Link encap:Ethernet  HWaddr 00:0c:29:f4:13:e4</blockquote>
Next copy the dhcp.conf file on your mac
<blockquote>sudo vim /Library/Preferences/VMware\ Fusion/vmnet8/dhcpd.conf</blockquote>
After the
<blockquote>####### VMNET DHCP Configuration. End of "DO NOT MODIFY SECTION" #######</blockquote>
Add your new configuration, replace "vmnamehere" with the name of your vm.
<blockquote>host vmnamehere {
hardware ethernet 00:0c:22:f6:11:e8;
fixed-address 192.168.115.50;
}</blockquote>
Now reboot your Mac.

Your vm's ip address should be what you set.

If that doesn't work, you may need to remove the network adapter and then re-add it. Make sure that your network adapter is connected to the virtual machine by removing and re-adding it. <a href="http://kb.vmware.com/selfservice/microsites/search.do?cmd=displayKC&amp;externalId=1016466" target="_blank">See Step 12</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>118</wp:post_id>
		<wp:post_date><![CDATA[2012-01-31 19:12:30]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-02-01 03:12:30]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[vmware-fusion-4-set-static-ip-address]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[onswipe_thumb]]></wp:meta_key>
			<wp:meta_value><![CDATA[SKIP]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>13</wp:comment_id>
			<wp:comment_author><![CDATA[VMWare Fusion 5 Set Static IP Address | Andrew Elkins]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://andrewelkins.com/linux/vmware-fusion-5-set-static-ip-address/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[74.208.59.166]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-02-18 14:50:09]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-02-18 22:50:09]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] previously posted on setting a static ip address in vmware fusion 4. This also still works for VMWare Fusion [...]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1361227809.8027689456939697265625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1361232708.2805259227752685546875;s:7:"message";s:41:"ae changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:2:"ae";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Using the + sign to merge arrays in php</title>
		<link>http://andrewelkins.com/2012/02/13/using-the-sign-to-merge-arrays-in-php/</link>
		<pubDate>Tue, 14 Feb 2012 01:15:02 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=120</guid>
		<description></description>
		<content:encoded><![CDATA[Today came across code that used the + sign to merge two associative php arrays. At first I thought it was broken but turns out you can indeed merge two arrays with the + sign.
<blockquote>$album = array(
'title' =&gt; 'King of Limbs',
'band' =&gt; 'Radiohead',
);
$album_meta_data = array(
'upc' =&gt; '486898161589',
'price' = '11.98'
);

$output = $album + $album_meta_data;

--------OUTPUT--------
array(
'title' =&gt; 'King of Limbs',
'band' =&gt; 'Radiohead',
'upc' =&gt; '486898161589',
'price' = '11.98'
)</blockquote>
Another way to use it would be to add the album meta data directly to the album array.
<blockquote>$album = array(
'title' =&gt; 'King of Limbs',
'band' =&gt; 'Radiohead',
);
$album_meta_data = array(
'upc' =&gt; '486898161589',
'price' = '11.98'
);

$album += $album_meta_data;

--------OUTPUT--------
array(
'title' =&gt; 'King of Limbs',
'band' =&gt; 'Radiohead',
'upc' =&gt; '486898161589',
'price' = '11.98'
)</blockquote>
If the key exists in both arrays then the first if used and the second is discarded, same as with <a href="http://php.net/manual/en/function.array-merge.php" target="_blank">array_merge</a>.
<blockquote>$album = array(
'title' =&gt; 'King of Limbs',
'band' =&gt; 'Radiohead',
);
$album_meta_data = array(
'title' =&gt; 'Coldplay',
'upc' =&gt; '486898161589',
'price' = '11.98'
);

$album += $album_meta_data;

--------OUTPUT--------
array(
'title' =&gt; 'King of Limbs',
'band' =&gt; 'Radiohead',
'upc' =&gt; '486898161589',
'price' = '11.98'
)</blockquote>
the reverse
<blockquote>$album = array(
'title' =&gt; 'King of Limbs',
'band' =&gt; 'Radiohead',
);
$album_meta_data = array(
'title' =&gt; 'Coldplay',
'upc' =&gt; '486898161589',
'price' = '11.98'
);

$album_meta_data += $album;

--------OUTPUT--------
array(
'title' =&gt; 'King of Limbs',
'band' =&gt; 'Coldplay',
'upc' =&gt; '486898161589',
'price' = '11.98'
)</blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>120</wp:post_id>
		<wp:post_date><![CDATA[2012-02-13 17:15:02]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-02-14 01:15:02]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[using-the-sign-to-merge-arrays-in-php]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[onswipe_thumb]]></wp:meta_key>
			<wp:meta_value><![CDATA[SKIP]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Remove empty values from an array.</title>
		<link>http://andrewelkins.com/2012/04/04/remove-empty-values-from-an-array/</link>
		<pubDate>Wed, 04 Apr 2012 16:01:01 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=125</guid>
		<description></description>
		<content:encoded><![CDATA[I developed this little one liner to remove empty values from an array in php.
<blockquote>$tags = array( 'testtag', 'testtag2', ' ' );

$tagsCleaned = array_filter( array_map( 'trim', $tags ),
create_function( '$a', 'return $a!="";' ) );</blockquote>
Breaking that down inside out.
<blockquote>array_map( 'trim', $tags )</blockquote>
<a href="http://www.php.net/manual/en/function.array-map.php" target="_blank">Array map</a> the trim function to all of the values within the array, removing removing pre/post spaces. In this case it removes the space in the third item.
<blockquote>array_filter( array_map( 'trim', $tags ),
create_function( '$a', 'return $a!="";' ) )</blockquote>
<a href="http://php.net/manual/en/function.array-filter.php" target="_blank">Array filter</a> allows us to remove the elements that do not match the function. In this case, I've created a function to test if the value is an empty string. If it is, the function returns true if it is not blank and false if it is. The false return removes the value from the array.

The result will be an array of two items.
<blockquote>$tags = array( 'testtag', 'testtag2', ' ' );
$tagsCleaned = array_filter( array_map( 'trim', $tags ), create_function( '$a', 'return $a!="";' ) );
print_r($tagsCleaned);

&nbsp;

Array
(
[0] =&gt; testtag
[1] =&gt; testtag2
)</blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>125</wp:post_id>
		<wp:post_date><![CDATA[2012-04-04 08:01:01]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-04-04 16:01:01]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[remove-empty-values-from-an-array]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[onswipe_thumb]]></wp:meta_key>
			<wp:meta_value><![CDATA[SKIP]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>JS logging</title>
		<link>http://andrewelkins.com/2012/05/14/js-logging/</link>
		<pubDate>Mon, 14 May 2012 19:27:36 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=127</guid>
		<description></description>
		<content:encoded><![CDATA[I've been doing a fair about of js development lately and console.log has been my friend. However, writing console.log() is a bit heavy. So instead I've been adding this to my files as  a quick way to log in javascipt.
<blockquote>function log() {
if (window.console &amp;&amp; console.log)
console.log('{product or sitename} ::  ' + Array.prototype.join.call(arguments,' '));
}

&nbsp;</blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>127</wp:post_id>
		<wp:post_date><![CDATA[2012-05-14 11:27:36]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-05-14 19:27:36]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[js-logging]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[onswipe_thumb]]></wp:meta_key>
			<wp:meta_value><![CDATA[SKIP]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Using Zend to retrive wikipedia api content</title>
		<link>http://andrewelkins.com/2012/05/22/using-zend-to-retrive-wikipedia-api-content/</link>
		<pubDate>Tue, 22 May 2012 16:15:57 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=133</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>function getWikipediaContent( $wikiUrl )

{

// initialize HTTP client
$client = new Zend_Http_Client();
// Set it for wikipedia
$client-&gt;setUri( $wikiUrl );
// Set url params for get request
$client-&gt;setParameterGet('action','query');
$client-&gt;setParameterGet('prop','revisions');
$client-&gt;setParameterGet('rvprop','content');
$client-&gt;setParameterGet('format','xml');
$client-&gt;setParameterGet('titles', $urlSlug);
// Get the wiki page via a get request
$result = $client-&gt;request('GET');

// Make sure actual data was returned. If not, return false
if( $result-&gt;isError() )
{
return false;
}

// Put response body in to variable
$body = $result-&gt;getBody();

// Transform string in to xml feed so it can be parsed.
$wikiXml = new SimpleXMLElement( $body );
// Get body and transform back to string.
return (string) $wikiXml-&gt;query-&gt;pages-&gt;page-&gt;revisions-&gt;rev;

}</blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>133</wp:post_id>
		<wp:post_date><![CDATA[2012-05-22 08:15:57]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-05-22 16:15:57]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[using-zend-to-retrive-wikipedia-api-content]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[onswipe_thumb]]></wp:meta_key>
			<wp:meta_value><![CDATA[SKIP]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>LessPHP</title>
		<link>http://andrewelkins.com/2012/12/09/lessphp/</link>
		<pubDate>Mon, 10 Dec 2012 03:59:11 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=153</guid>
		<description></description>
		<content:encoded><![CDATA[Why would I want to use the php version of a native node.js project? Well, for starters not all projects are deployed on servers that have node.js installed. Second, well, the first one is pretty much the only reason.

So with that out of the way, I ran in an issue with bootstrap and lessphp. LessPHP doesn't allow the js parsing that less allows. In my case, it was with bootstrap and mixins.less.
<blockquote>parse error: failed at `@props: ~`"@{arguments}".replace(/[\[\]]|\,\sX/g, '')`</blockquote>
Here's the code that is causing the error.
<blockquote>// Drop shadows
.box-shadow(@shadowA, @shadowB:X, ...){
// Multiple shadow solution from http://toekneestuck.com/blog/2012/05/15/less-css-arguments-variable/
@props: ~`"@{arguments}".replace(/[\[\]]|\,\sX/g, '')`;
-webkit-box-shadow: @props;
-moz-box-shadow: @props;
box-shadow: @props;
}</blockquote>
There's a way around it.
<blockquote>.box-shadow(@shadow) {
-webkit-box-shadow: @shadow;
-moz-box-shadow: @shadow;
box-shadow: @shadow;
}
// Aliases for up to 5 shadows to avoid the need for passing in escaped strings
.box-shadow(@a, @b) { @join: @a, @b; .box-shadow(@join); }
.box-shadow(@a, @b, @c) { @join: @a, @b, @c; .box-shadow(@join); }
.box-shadow(@a, @b, @c, @d) { @join: @a, @b, @c, @d; .box-shadow(@join); }
.box-shadow(@a, @b, @c, @d, @e) { @join: @a, @b, @c, @d, @e; .box-shadow(@join); }</blockquote>
Which basically hard codes 5 gradient positions. Which could be bad if your code uses more than that. However, I don't believe bootstrap does so it should be fine.

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>153</wp:post_id>
		<wp:post_date><![CDATA[2012-12-09 19:59:11]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-12-10 03:59:11]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[lessphp]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[onswipe_thumb]]></wp:meta_key>
			<wp:meta_value><![CDATA[SKIP]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Setting up Composer globally for Laravel 4</title>
		<link>http://andrewelkins.com/2013/01/06/setting-up-composer-globally-for-laravel-4/</link>
		<pubDate>Mon, 07 Jan 2013 02:03:38 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=158</guid>
		<description></description>
		<content:encoded><![CDATA[An easy way to set up composer globally is to follow the instructions on getcomposer.org site:

[ps]
$ curl -s http://getcomposer.org/installer | php
$ sudo mv composer.phar /usr/local/bin/composer
[/ps]

Now I can use composer by invoking just the <strong>composer</strong> command.

Optional way to do it, is to set up an alias:

[ps]
alias composer='/location/of/the/composer.phar'
[/ps]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>158</wp:post_id>
		<wp:post_date><![CDATA[2013-01-06 18:03:38]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-01-07 02:03:38]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[setting-up-composer-globally-for-laravel-4]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="composer"><![CDATA[composer]]></category>
		<category domain="post_tag" nicename="laravel"><![CDATA[laravel]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_tag" nicename="php-2"><![CDATA[php]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[seo_noindex]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[seo_follow]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[onswipe_thumb]]></wp:meta_key>
			<wp:meta_value><![CDATA[SKIP]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>10</wp:comment_id>
			<wp:comment_author><![CDATA[Clear Laravel 4 Autoload &raquo; Andrew Elkins]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://andrewelkins.com/programming/php/clear-laravel-4-autoload/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[74.208.59.166]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-01-21 21:02:55]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-01-22 05:02:55]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] That&#8217;s if you have setup composer to be accessed globally. [...]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1358830975.8652019500732421875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1358840333.3980009555816650390625;s:7:"message";s:41:"ae changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:2:"ae";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>11</wp:comment_id>
			<wp:comment_author><![CDATA[Composer&#8217;ı Evrensel Olarak Kuralım &#124; Sinan Eldem]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.sinaneldem.com.tr/composeri-evrensel-olarak-kuralim/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[93.186.115.53]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-02-07 03:35:18]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-02-07 11:35:18]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Kaynak: Andrew Elkins [...]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1360236918.19501590728759765625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1360258960.21582508087158203125;s:7:"message";s:41:"ae changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:2:"ae";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>14</wp:comment_id>
			<wp:comment_author><![CDATA[How to add a helpers or library folder to Laravel 4 - Andrew Elkins]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://andrewelkins.com/programming/php/how-to-add-a-helper-folder-to-laravel-4/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[74.208.59.166]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-02-22 14:46:02]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-02-22 22:46:02]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Let&#8217;s reload the autoload. (Assuming composer is an alias.) [...]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1361573162.5251910686492919921875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1361574505.6385920047760009765625;s:7:"message";s:41:"ae changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:2:"ae";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>122</wp:comment_id>
			<wp:comment_author><![CDATA[laravel init config | victor - note]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://note.kakichung.com/?p=128</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.17.8.20]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-03-09 08:52:58]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-03-09 16:52:58]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] you haven&#039;t already, you might want to make&nbsp;composer be installed globally&nbsp;for future ease of [...]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1394383978.3807681;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1431393144.591825;s:7:"message";s:41:"ae changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:2:"ae";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>136</wp:comment_id>
			<wp:comment_author><![CDATA[Laravel installation &laquo; JaswantBlog]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://jaswantblog.wordpress.com/2014/07/30/laravel-installation/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[76.74.255.5]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-07-30 01:00:34]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-07-30 09:00:34]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] you haven&#8217;t already, you might want to make composer be installed globally for future ease of [...]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1431393100.356046;s:7:"message";s:41:"ae changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:2:"ae";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1406710834.0982239;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Linux Ubuntu 12.04 alt-tab not working</title>
		<link>http://andrewelkins.com/2013/01/09/linux-ubuntu-12-04-alt-tab-not-working/</link>
		<pubDate>Wed, 09 Jan 2013 18:10:36 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=162</guid>
		<description></description>
		<content:encoded><![CDATA[I’ve recently installed Ubuntu 12.04 Prestige Pangolin (I use Gnome Classic), and immediately noticed that the alt+tab shortcut wasn’t working. I tried fixing it within Applications&gt;Systems Tools&gt;System Settings, but that did not work. I have compiz Config Manager already install so I figured I could use that version instead (it looks nicer anyway).
<div>Finally, I’ve found this solution on a forum, by installing Compiz Config Settings Manager:
<ol>
	<li>Go then to Applications&gt;System Tools&gt;Preferences&gt;Compiz Config Manager</li>
	<li>Scroll down to the bottom of the window and where it says <em>Windows Management</em>, click on either Application Switcher (dynamic) or Static Application Switcher, depending on which you prefer.</li>
</ol>
If you need to install Compiz Config Manager:
<ol>
	<li>Click Alt+Ctrl+T, to open the Terminal</li>
	<li>Type this: <code>sudo apt-get install compizconfig-settings-manager</code>,</li>
	<li>Or search for <strong>compizconfig-settings-manager</strong> in the Software Center and install from there.</li>
</ol>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>162</wp:post_id>
		<wp:post_date><![CDATA[2013-01-09 10:10:36]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-01-09 18:10:36]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[linux-ubuntu-12-04-alt-tab-not-working]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[onswipe_thumb]]></wp:meta_key>
			<wp:meta_value><![CDATA[SKIP]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Query to insert all countries into database</title>
		<link>http://andrewelkins.com/2013/01/17/query-to-insert-all-countries-into-database/</link>
		<pubDate>Thu, 17 Jan 2013 19:07:05 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=165</guid>
		<description></description>
		<content:encoded><![CDATA[I needed to insert all of the countries in the world into a database. I couldn't find the query to run, so I created my own. Here it is. 'country' is the table name and 'name' is the column name.
<blockquote>INSERT INTO country

(name)

VALUES

('Afghanistan'),
('Albania'),
('Algeria'),
('Andorra'),
('Angola'),
('Antigua and Barbuda'),
('Argentina'),
('Armenia'),
('Australia'),
('Austria'),
('Azerbaijan'),
('Bahamas, The'),
('Bahrain'),
('Bangladesh'),
('Barbados'),
('Belarus'),
('Belgium'),
('Belize'),
('Benin'),
('Bhutan'),
('Bolivia'),
('Bosnia and Herzegovina'),
('Botswana'),
('Brazil'),
('Brunei'),
('Bulgaria'),
('Burkina Faso'),
('Burma'),
('Burundi'),
('Cambodia'),
('Cameroon'),
('Canada'),
('Cape Verde'),
('Central Africa'),
('Chad'),
('Chile'),
('China'),
('Colombia'),
('Comoros'),
('Congo, Democratic Republic of the'),
('Costa Rica'),
('Cote dIvoire'),
('Crete'),
('Croatia'),
('Cuba'),
('Cyprus'),
('Czech Republic'),
('Denmark'),
('Djibouti'),
('Dominican Republic'),
('East Timor'),
('Ecuador'),
('Egypt'),
('El Salvador'),
('Equatorial Guinea'),
('Eritrea'),
('Estonia'),
('Ethiopia'),
('Fiji'),
('Finland'),
('France'),
('Gabon'),
('Gambia, The'),
('Georgia'),
('Germany'),
('Ghana'),
('Greece'),
('Grenada'),
('Guadeloupe'),
('Guatemala'),
('Guinea'),
('Guinea-Bissau'),
('Guyana'),
('Haiti'),
('Holy See'),
('Honduras'),
('Hong Kong'),
('Hungary'),
('Iceland'),
('India'),
('Indonesia'),
('Iran'),
('Iraq'),
('Ireland'),
('Israel'),
('Italy'),
('Ivory Coast'),
('Jamaica'),
('Japan'),
('Jordan'),
('Kazakhstan'),
('Kenya'),
('Kiribati'),
('Korea, North'),
('Korea, South'),
('Kosovo'),
('Kuwait'),
('Kyrgyzstan'),
('Laos'),
('Latvia'),
('Lebanon'),
('Lesotho'),
('Liberia'),
('Libya'),
('Liechtenstein'),
('Lithuania'),
('Macau'),
('Macedonia'),
('Madagascar'),
('Malawi'),
('Malaysia'),
('Maldives'),
('Mali'),
('Malta'),
('Marshall Islands'),
('Mauritania'),
('Mauritius'),
('Mexico'),
('Micronesia'),
('Moldova'),
('Monaco'),
('Mongolia'),
('Montenegro'),
('Morocco'),
('Mozambique'),
('Namibia'),
('Nauru'),
('Nepal'),
('Netherlands'),
('New Zealand'),
('Nicaragua'),
('Niger'),
('Nigeria'),
('North Korea'),
('Norway'),
('Oman'),
('Pakistan'),
('Palau'),
('Panama'),
('Papua New Guinea'),
('Paraguay'),
('Peru'),
('Philippines'),
('Poland'),
('Portugal'),
('Qatar'),
('Romania'),
('Russia'),
('Rwanda'),
('Saint Lucia'),
('Saint Vincent and the Grenadines'),
('Samoa'),
('San Marino'),
('Sao Tome and Principe'),
('Saudi Arabia'),
('Scotland'),
('Senegal'),
('Serbia'),
('Seychelles'),
('Sierra Leone'),
('Singapore'),
('Slovakia'),
('Slovenia'),
('Solomon Islands'),
('Somalia'),
('South Africa'),
('South Korea'),
('Spain'),
('Sri Lanka'),
('Sudan'),
('Suriname'),
('Swaziland'),
('Sweden'),
('Switzerland'),
('Syria'),
('Taiwan'),
('Tajikistan'),
('Tanzania'),
('Thailand'),
('Tibet'),
('Timor-Leste'),
('Togo'),
('Tonga'),
('Trinidad and Tobago'),
('Tunisia'),
('Turkey'),
('Turkmenistan'),
('Tuvalu'),
('Uganda'),
('Ukraine'),
('United Arab Emirates'),
('United Kingdom'),
('United States'),
('Uruguay'),
('Uzbekistan'),
('Vanuatu'),
('Venezuela'),
('Vietnam'),
('Yemen'),
('Zambia'),
('Zimbabwe');</blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>165</wp:post_id>
		<wp:post_date><![CDATA[2013-01-17 11:07:05]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-01-17 19:07:05]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[query-to-insert-all-countries-into-database]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="mysql"><![CDATA[mysql]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[onswipe_thumb]]></wp:meta_key>
			<wp:meta_value><![CDATA[SKIP]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Linux rename a bunch of file&#039;s extensions</title>
		<link>http://andrewelkins.com/2013/01/20/linux-rename-a-bunch-of-files-extensions/</link>
		<pubDate>Mon, 21 Jan 2013 02:52:12 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=168</guid>
		<description></description>
		<content:encoded><![CDATA[In order to rename a whole folders file extensions from jpeg to jpg I wrote this script called rename.sh in bash.
<blockquote>#!/bin/bash

for filename in *.jpeg
do
echo $filename;
cleaned=`basename $filename .jpeg`;
echo $cleaned;
mv $filename $cleaned.jpg;
done</blockquote>
Then I made is executable from the command line.
<blockquote>chmod +x rename.sh</blockquote>
Then ran it in the directory I needed to rename files in.
<blockquote>./rename.sh</blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>168</wp:post_id>
		<wp:post_date><![CDATA[2013-01-20 18:52:12]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-01-21 02:52:12]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[linux-rename-a-bunch-of-files-extensions]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[onswipe_thumb]]></wp:meta_key>
			<wp:meta_value><![CDATA[SKIP]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Clear Laravel 4 Autoload</title>
		<link>http://andrewelkins.com/2013/01/21/clear-laravel-4-autoload/</link>
		<pubDate>Tue, 22 Jan 2013 05:02:51 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=197</guid>
		<description></description>
		<content:encoded><![CDATA[Laravel 4 currently has a very frustrating issue. If you add a model it will not know of it until you clear the autoload.

[ps]composer dump-autoload[/ps]

Make sure you have <a href="http://andrewelkins.com/programming/php/setting-up-composer-globally-for-laravel-4/">setup composer to be accessed globally</a>. Otherwise you'll need to do this command.

[ps]/usr/local/bin/composer.phar composer dump-autoload[/ps]


Further you may want to optimize your autoload. According to Taylor this can speed up your application by 30%.
[ps]composer dump-autoload --optimize[/ps]

Edit: Another option noted by <a href="http://www.livefyre.com/profile/11398455/" target="_blank" rel="nofollow">luviyo</a> is to do the following.

Open <em>app/starts/global.php</em> and add:

[ps]ClassLoader::addDirectories(array( app_path().'/libraries', ));[/ps]

Thanks for the tip!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>197</wp:post_id>
		<wp:post_date><![CDATA[2013-01-21 21:02:51]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-01-22 05:02:51]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[clear-laravel-4-autoload]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="composer"><![CDATA[composer]]></category>
		<category domain="post_tag" nicename="lavarel"><![CDATA[lavarel]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_tag" nicename="php-2"><![CDATA[php]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[seo_follow]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[seo_noindex]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[onswipe_thumb]]></wp:meta_key>
			<wp:meta_value><![CDATA[SKIP]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>15</wp:comment_id>
			<wp:comment_author><![CDATA[scone_eater]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[skopp888+livefyfre@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://scriptogr.am/skopp</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[41.151.96.56]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-03-02 20:33:20]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-03-03 04:33:20]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for the heads up. Laravel, PHP AND MVC Noob here - never would have guessed/known. In fact, I haven't the slightest why now.... but know someday soon it will click and I'll think about thix post. Maybe.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>16</wp:comment_id>
			<wp:comment_author><![CDATA[luviyo]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[luvbiyo@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[97.77.48.195]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-03-02 22:18:42]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-03-03 06:18:42]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You could just add the models directory to laravel's classloader. This way you don't have to do the autoload dumps.
//app/starts/global.php
ClassLoader::addDirectories(array(     app_path().'/libraries', ));]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>17</wp:comment_id>
			<wp:comment_author><![CDATA[AndrewElkins]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[accounts@andrewelkins.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[68.170.72.231]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-03-03 12:53:20]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-03-03 20:53:20]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@luviyo Thanks for the tip! Added it to the post.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>16</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Change url without a page refresh</title>
		<link>http://andrewelkins.com/2013/01/22/change-url-without-a-page-refresh/</link>
		<pubDate>Tue, 22 Jan 2013 09:33:51 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=229</guid>
		<description></description>
		<content:encoded><![CDATA[I wanted the url to change but there to be no redirect/refresh of the page. I was able to do this by a little js.
<blockquote>
history.pushState('data', '', 'http://' + window.location.host + '/month/' + month );</blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>229</wp:post_id>
		<wp:post_date><![CDATA[2013-01-22 01:33:51]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-01-22 09:33:51]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[change-url-without-a-page-refresh]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="js"><![CDATA[js]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[onswipe_thumb]]></wp:meta_key>
			<wp:meta_value><![CDATA[SKIP]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Laravel 4 Documentation</title>
		<link>http://andrewelkins.com/2013/01/22/laravel-4-documentation/</link>
		<pubDate>Tue, 22 Jan 2013 23:58:26 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=231</guid>
		<description></description>
		<content:encoded><![CDATA[Yesterday I was in search of Laravel 4 documentation. I couldn't figure our where to find Laravel 4 documentation. I found the committed files on GitHub but I couldn't find the actual site that hosted it. Turns out it was in a now obvious place. <a href="http://four.laravel.com/" target="_blank">http://four.laravel.com/</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>231</wp:post_id>
		<wp:post_date><![CDATA[2013-01-22 15:58:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-01-22 23:58:26]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[laravel-4-documentation]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="docs"><![CDATA[docs]]></category>
		<category domain="post_tag" nicename="github-2"><![CDATA[github]]></category>
		<category domain="post_tag" nicename="laravel"><![CDATA[laravel]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_tag" nicename="php-2"><![CDATA[php]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[onswipe_thumb]]></wp:meta_key>
			<wp:meta_value><![CDATA[SKIP]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Create a new ssh key</title>
		<link>http://andrewelkins.com/2013/02/03/create-a-new-ssh-key/</link>
		<pubDate>Sun, 03 Feb 2013 19:18:40 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=244</guid>
		<description></description>
		<content:encoded><![CDATA[I have to do this whenever setting up a new system. Makes the server more secure to disable password based login and only allow ssh keys.

To create an ssh key it's as easy as running one of the two following commands.
<blockquote><b><kbd>ssh-keygen -t dsa</kbd></b></blockquote>
or
<blockquote><b><kbd>ssh-keygen -t rsa</kbd></b></blockquote>
The rsa and dsa refer to different encryption methods. <a href="http://superuser.com/questions/13164/what-is-better-for-gpg-keys-rsa-or-dsa" target="_blank">DSA is the preferred method at the moment.</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>244</wp:post_id>
		<wp:post_date><![CDATA[2013-02-03 11:18:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-02-03 19:18:40]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[create-a-new-ssh-key]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[onswipe_thumb]]></wp:meta_key>
			<wp:meta_value><![CDATA[SKIP]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Setup an alias in Linux</title>
		<link>http://andrewelkins.com/2013/02/07/setup-an-alias-in-linux/</link>
		<pubDate>Thu, 07 Feb 2013 18:55:26 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=247</guid>
		<description></description>
		<content:encoded><![CDATA[Setting up an alias in linux is very easy and very helpful. It allows you to determine a short phrase for running a longer command. Or change a common typo to the command you meant.

Here's an example alias:
<blockquote>$ alias lsl="ls -la"</blockquote>
This maps lsl to the command ls -la which is half the length and since that's a common command that'll help out.

Another example
<blockquote>$ alias h='history'</blockquote>
This shows the history of the terminal session.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>247</wp:post_id>
		<wp:post_date><![CDATA[2013-02-07 10:55:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-02-07 18:55:26]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[setup-an-alias-in-linux]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="alias"><![CDATA[alias]]></category>
		<category domain="post_tag" nicename="cli"><![CDATA[cli]]></category>
		<category domain="post_tag" nicename="command-line"><![CDATA[command line]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[onswipe_thumb]]></wp:meta_key>
			<wp:meta_value><![CDATA[SKIP]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>12</wp:comment_id>
			<wp:comment_author><![CDATA[Setting up Composer globally for Laravel 4 | Andrew Elkins]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://andrewelkins.com/programming/php/setting-up-composer-globally-for-laravel-4/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[74.208.59.166]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-02-07 10:56:04]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-02-07 18:56:04]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Then created an alias: [...]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1360263364.920691013336181640625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1360263486.8545930385589599609375;s:7:"message";s:41:"ae changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:2:"ae";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>VMWare Fusion 5 Set Static IP Address</title>
		<link>http://andrewelkins.com/2013/02/18/vmware-fusion-5-set-static-ip-address/</link>
		<pubDate>Mon, 18 Feb 2013 22:50:05 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=253</guid>
		<description></description>
		<content:encoded><![CDATA[I previously posted on setting a static ip address in <a href="http://andrewelkins.com/linux/vmware-fusion-4-set-static-ip-address/" target="_blank">vmware fusion 4</a>. This also still works for VMWare Fusion 5.

Steps are the same.

First on your linux vm in terminal run the following command
<blockquote>ifconfig</blockquote>
Then copy the HWaddr it varies from vm to vm so you need to get yours
<blockquote>Link encap:Ethernet  HWaddr 00:0c:29:f4:13:e4</blockquote>
Next edit the dhcp.conf file on your mac
<blockquote>sudo vim /Library/Preferences/VMware\ Fusion/vmnet8/dhcpd.conf</blockquote>
After the
<blockquote>####### VMNET DHCP Configuration. End of "DO NOT MODIFY SECTION" #######</blockquote>
Add your new configuration, replace "vmnamehere" with the name of your vm.
<blockquote>host vmnamehere {
hardware ethernet 00:0c:22:f6:11:e8;
fixed-address 192.168.115.50;
}</blockquote>
Now reboot your Mac or, as @splintax mentioned in the comments, restart DHCP.

<blockquote>
cd /Applications/VMware Fusion.app/Contents/Library
sudo ./vmnet-cli --configure
sudo ./vmnet-cli --stop
sudo ./vmnet-cli --start
</blockquote>

Your vm's ip address should be what you set.

If that doesn't work, you may need to remove the network adapter and then re-add it. Make sure that your network adapter is connected to the virtual machine by removing and re-adding it.
<blockquote>
<ol type="a">
	<li>Shut down your virtual machine.</li>
	<li>In Fusion, go to Virtual Machine &gt; Settings &gt; Network Adapter (Fusion 4 and later) / Network (Fusion 3 and earlier).</li>
	<li>Ensure that the network adapter is connected (that is, Enable Network Adapter is ON or the <strong>Connected</strong> box is selected).</li>
	<li>Ensure that the network adapter is configured for NAT or Bridged, and not Host Only or Custom. Make a note of your setting.</li>
	<li>Click triangle beside Advanced options and select Remove Network Adapter (Fusion 4 and later) or click the <strong>- (minus)</strong> button at the bottom of the Network pane (Fusion 3 and earlier) to remove your current network adapter.</li>
	<li>From the Settings pane select Add Device &gt; Network Adapter (Fusion 4 and later) or the <strong>+ (plus)</strong> button at the bottom of the Network pane to re-add your network adapter.</li>
	<li>Verify that your new network adapter settings match your old settings.</li>
	<li>Restart your Mac.</li>
	<li>Turn on your virtual machine.</li>
</ol>
<a href="http://kb.vmware.com/selfservice/microsites/search.do?cmd=displayKC&amp;externalId=1016466" target="_blank">From step 12</a></blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>253</wp:post_id>
		<wp:post_date><![CDATA[2013-02-18 14:50:05]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-02-18 22:50:05]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[vmware-fusion-5-set-static-ip-address]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[onswipe_thumb]]></wp:meta_key>
			<wp:meta_value><![CDATA[SKIP]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>43</wp:comment_id>
			<wp:comment_author><![CDATA[niels_bom]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[niels@nielsbom.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[82.148.215.185]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-07-03 00:39:47]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-07-03 08:39:47]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I took all of the steps and it's not working for me.
I've added the following to /Library/Preferences/VMware Fusion/vmnet8/dhcpd.conf :
host ubuntu_10.04{
    hardware ethernet 00:50:56:36:FB:6E;
    fixed-address 192.168.115.50;
}
But the IP that my VM gets is: 192.168.160.128..

Do you have any clue?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_83965758]]></wp:meta_key>
				<wp:meta_value><![CDATA[83965758]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_406501024]]></wp:meta_key>
				<wp:meta_value><![CDATA[406501024]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_406501030]]></wp:meta_key>
				<wp:meta_value><![CDATA[406501030]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>44</wp:comment_id>
			<wp:comment_author><![CDATA[niels_bom]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[niels@nielsbom.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[82.148.215.185]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-07-03 00:52:06]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-07-03 08:52:06]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The tip about the static IP address you choose given here did the trick for me:
http://socalledgeek.com/blog/2012/8/23/fixed-dhcp-ip-allocation-in-vmware-fusion
I picked an IP address just outside (actually one address before) the range defined in the subnet.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_83966273]]></wp:meta_key>
				<wp:meta_value><![CDATA[83966273]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_406504548]]></wp:meta_key>
				<wp:meta_value><![CDATA[406504548]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_406504552]]></wp:meta_key>
				<wp:meta_value><![CDATA[406504552]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>47</wp:comment_id>
			<wp:comment_author><![CDATA[Ubuntu 12.04 on VMware Fusion | Right Outer Join]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://mdahlman.wordpress.com/2013/07/09/ubuntu-12-04-on-vmware-fusion/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[66.155.8.196]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-07-09 06:21:01]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-07-09 14:21:01]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] incremented its IP address by one each time. Lots of articles already exist describing this issue: this one, that one, another one, and even vmware knowledge base articles. They all say basically the same [...]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1373379661.463975;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1431393140.5963359;s:7:"message";s:41:"ae changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:2:"ae";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>123</wp:comment_id>
			<wp:comment_author><![CDATA[splintax]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[splintax@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.59.130.37]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-03-12 19:19:26]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-03-13 03:19:26]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for this! You can restart the DHCP server without rebooting your Mac by running the following:

cd /Applications/VMware Fusion.app/Contents/Library
sudo ./vmnet-cli --configure
sudo ./vmnet-cli --stop
sudo ./vmnet-cli --start

To get your new static IP address, you probably need to restart the network interface inside your VM as well.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_145312441]]></wp:meta_key>
				<wp:meta_value><![CDATA[145312441]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_839005795]]></wp:meta_key>
				<wp:meta_value><![CDATA[839005795]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_839005808]]></wp:meta_key>
				<wp:meta_value><![CDATA[839005808]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>124</wp:comment_id>
			<wp:comment_author><![CDATA[AndrewElkins]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[accounts@andrewelkins.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[23.240.220.146]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-03-13 08:00:19]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-03-13 16:00:19]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[splintax  Thanks for the tip!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_145429825]]></wp:meta_key>
				<wp:meta_value><![CDATA[145429825]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_839734673]]></wp:meta_key>
				<wp:meta_value><![CDATA[839734673]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_839734693]]></wp:meta_key>
				<wp:meta_value><![CDATA[839734693]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>139</wp:comment_id>
			<wp:comment_author><![CDATA[alex90909]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[amlong222@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[162.17.208.26]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-09-16 05:18:09]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-09-16 13:18:09]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Just one other thing to note, if your VM has a space in it's name (ex: My VM), you should remove the space in the dhcp config file. So in that example it would be "MyVM".]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_213462892]]></wp:meta_key>
				<wp:meta_value><![CDATA[213462892]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_1273567209]]></wp:meta_key>
				<wp:meta_value><![CDATA[1273567209]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_1273567231]]></wp:meta_key>
				<wp:meta_value><![CDATA[1273567231]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>137</wp:comment_id>
			<wp:comment_author><![CDATA[JohnMcGowan]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[john@steakfest.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[75.135.68.184]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-08-12 08:05:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-08-12 16:05:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[niels_bom assuming you figured it out, but since your vmnet8 subnet is 192.168.160.*, you probably need to adjust your fixed-address to be in the same subnet, unless you're going to change everything to be in the same subnet.
In other words you can't use 192.168.115.50 from the example verbatim, you have to adjust it to match what you see in your current configuration.

/John]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_199643282]]></wp:meta_key>
				<wp:meta_value><![CDATA[199643282]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_1178804198]]></wp:meta_key>
				<wp:meta_value><![CDATA[1178804198]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_1178804351]]></wp:meta_key>
				<wp:meta_value><![CDATA[1178804351]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>138</wp:comment_id>
			<wp:comment_author><![CDATA[JohnMcGowan]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[john@steakfest.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[75.135.68.184]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-08-12 08:06:45]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-08-12 16:06:45]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for this post Andrew.  I had been using a vm for local development with records in /etc/hosts so i could connect to it for a couple months with no problems.  But in the last couple of weeks the dhcp ip keeps changing on me.  No idea why, so I wanted to lock it down.  This did the trick.

/John]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_199644008]]></wp:meta_key>
				<wp:meta_value><![CDATA[199644008]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_1178809697]]></wp:meta_key>
				<wp:meta_value><![CDATA[1178809697]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_1178809817]]></wp:meta_key>
				<wp:meta_value><![CDATA[1178809817]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>140</wp:comment_id>
			<wp:comment_author><![CDATA[alex90909]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[amlong222@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[162.17.208.26]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-09-16 06:01:08]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-09-16 14:01:08]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[also seems that you can't leave entries in the dhcp config file for VMs that don't exist, so if you delete a VM, make sure you delete the entry]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_213478708]]></wp:meta_key>
				<wp:meta_value><![CDATA[213478708]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_1273669638]]></wp:meta_key>
				<wp:meta_value><![CDATA[1273669638]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_1273669667]]></wp:meta_key>
				<wp:meta_value><![CDATA[1273669667]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>How to close a linux screen session</title>
		<link>http://andrewelkins.com/2013/02/20/how-to-close-a-linux-screen-session/</link>
		<pubDate>Wed, 20 Feb 2013 22:24:03 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=255</guid>
		<description></description>
		<content:encoded><![CDATA[After working within a screen session on a CentOS server I had forgotten how to close the screen session that I was done with. It's a rather simple command.
<blockquote>exit</blockquote>
Perfect, exit means exit.

Of note if you just want to disconnect use.
<blockquote>ctrl+a

(press) d</blockquote>
That'll disconnect you from the screen session.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>255</wp:post_id>
		<wp:post_date><![CDATA[2013-02-20 14:24:03]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-02-20 22:24:03]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-to-close-a-linux-screen-session]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cli"><![CDATA[cli]]></category>
		<category domain="post_tag" nicename="command"><![CDATA[command]]></category>
		<category domain="post_tag" nicename="command-line"><![CDATA[command line]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="linux-2"><![CDATA[linux]]></category>
		<category domain="post_tag" nicename="screen"><![CDATA[screen]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[onswipe_thumb]]></wp:meta_key>
			<wp:meta_value><![CDATA[SKIP]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How to add a library folder to Laravel 4</title>
		<link>http://andrewelkins.com/2013/02/22/how-to-add-a-helper-folder-to-laravel-4/</link>
		<pubDate>Fri, 22 Feb 2013 22:26:54 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=258</guid>
		<description></description>
		<content:encoded><![CDATA[I typically use a library folder in my projects to group of files that you want to use in different projects but don't want to use <a href="http://getcomposer.org/doc/articles/handling-private-packages-with-satis.md" target="_blank">Satis</a> to manage the contained files. This folder could also be a helper folder for functions that are static and are mainly generic helpers but don't quite fit in a model. So in this example I'll be adding a library folder and have it autoloaded by Laravel. The process for a helpers folder is the same, just replace library with helpers.

First step is to create the folder. (I assume you're already in laravel project.)

[ps]cd app/

mkdir library

cd library[/ps]

Now we need to add the folder to the autoload file. We will return to laravel project root and view the composer file.

[ps]cd ..

vim composer.json[/ps]

Should look something like.

[ps]{
 &quot;require&quot;: {
 &quot;laravel/framework&quot;: &quot;4.0.*&quot;
 },
 &quot;autoload&quot;: {
 &quot;classmap&quot;: [
 &quot;app/commands&quot;,
 &quot;app/controllers&quot;,
 &quot;app/models&quot;,
 &quot;app/database/migrations&quot;,
 &quot;app/tests/TestCase.php&quot;
 ]
 },
 &quot;minimum-stability&quot;: &quot;dev&quot;
 }[/ps]

We're going to add the library directory.

[ps]{
 &quot;require&quot;: {
 &quot;laravel/framework&quot;: &quot;4.0.*&quot;
 },
 &quot;autoload&quot;: {
 &quot;classmap&quot;: [
 &quot;app/commands&quot;,
 &quot;app/controllers&quot;,
 &quot;app/library&quot;, /* Added here */
 &quot;app/models&quot;,
 &quot;app/database/migrations&quot;,
 &quot;app/tests/TestCase.php&quot;
 ]
 },
 &quot;minimum-stability&quot;: &quot;dev&quot;
 }[/ps]

Let's reload the autoload. (Assuming <a title="Setting up Composer globally for Laravel 4" href="http://andrewelkins.com/programming/php/setting-up-composer-globally-for-laravel-4/">composer is an alias.</a>)

[ps]composer dump-autoload[/ps]

Now you can use the library folder.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>258</wp:post_id>
		<wp:post_date><![CDATA[2013-02-22 14:26:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-02-22 22:26:54]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-to-add-a-helper-folder-to-laravel-4]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="framework"><![CDATA[framework]]></category>
		<category domain="post_tag" nicename="helper"><![CDATA[helper]]></category>
		<category domain="post_tag" nicename="laravel"><![CDATA[laravel]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_tag" nicename="php-2"><![CDATA[php]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
			<wp:meta_value><![CDATA[62]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
			<wp:meta_value><![CDATA[add a helpers]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_title]]></wp:meta_key>
			<wp:meta_value><![CDATA[How to add a helpers or library folder to Laravel 4 - Andrew Elkins]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
			<wp:meta_value><![CDATA[How to create and configure a helpers or library folder in Laravel 4]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[onswipe_thumb]]></wp:meta_key>
			<wp:meta_value><![CDATA[SKIP]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>31</wp:comment_id>
			<wp:comment_author><![CDATA[birowsky]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[birowsky@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[79.141.126.105]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-05-30 14:55:27]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-05-30 22:55:27]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Who da man

u da man]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_77598006]]></wp:meta_key>
				<wp:meta_value><![CDATA[77598006]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_373021537]]></wp:meta_key>
				<wp:meta_value><![CDATA[373021537]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_373021555]]></wp:meta_key>
				<wp:meta_value><![CDATA[373021555]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>99</wp:comment_id>
			<wp:comment_author><![CDATA[How to add a library folder to Laravel 4 | tediscript.wordpress.com]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://tediscript.wordpress.com/2013/10/27/how-to-add-a-library-folder-to-laravel-4/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[192.0.80.106]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-10-27 05:35:22]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-10-27 13:35:22]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] http://andrewelkins.com/programming/php/how-to-add-a-helper-folder-to-laravel-4/ [...]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1382880922.5763979;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1431393132.233027;s:7:"message";s:41:"ae changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:2:"ae";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>108</wp:comment_id>
			<wp:comment_author><![CDATA[AndrewElkins]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[accounts@andrewelkins.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[108.23.196.57]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-12-17 15:37:43]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-12-17 23:37:43]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[birowsky Hah, thanks!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_123161963]]></wp:meta_key>
				<wp:meta_value><![CDATA[123161963]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_682186227]]></wp:meta_key>
				<wp:meta_value><![CDATA[682186227]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_682186242]]></wp:meta_key>
				<wp:meta_value><![CDATA[682186242]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_682186248]]></wp:meta_key>
				<wp:meta_value><![CDATA[682186248]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>158</wp:comment_id>
			<wp:comment_author><![CDATA[sem sem]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-06-14 22:37:59]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-06-15 06:37:59]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[How to do that in laravel 5 ?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_328197314]]></wp:meta_key>
				<wp:meta_value><![CDATA[328197314]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_2008481625]]></wp:meta_key>
				<wp:meta_value><![CDATA[2008481625]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_2008481631]]></wp:meta_key>
				<wp:meta_value><![CDATA[2008481631]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>How to set local environment as default in command line (CLI) for Larvel 4 artisan </title>
		<link>http://andrewelkins.com/2013/02/25/how-to-set-local-environment-as-default-in-cli/</link>
		<pubDate>Mon, 25 Feb 2013 18:36:11 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=271</guid>
		<description></description>
		<content:encoded><![CDATA[Typically when Laravel 4 artisan is run from the command line (cli) it uses the production configuration files. This can be changed by using a flag when running the command.

[ps]php artisan migrate --env=local[/ps]

However, adding <em>--env-=local</em> each time while running a script can slow down development. I would recommend adding your development environment hostname to the config file.

To do this Laravel 4 needs the hostname for your <a href="http://four.laravel.com/docs/configuration" target="_blank">development environment</a>. I recommended using a new file called <strong>check.php</strong> with the following contents:

[php]#!/usr/bin/env php
&lt;?php
     var_dump(gethostname());
[/php]

Run it from the command line:

[php]php check.php[/php]

This will output something like:

[ps]string(6) &quot;ubuntu&quot;[/ps]

In this case <em>ubuntu</em> is what is needed. We'll need to add it to the environment array in <strong>bootstrap/start.php</strong>

[php]$env = $app-&gt;detectEnvironment(array(

'local' =&gt; array('*.local','ubuntu'),

));
[/php]

Now artisan should run with the local environment as default when run on that machine.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>271</wp:post_id>
		<wp:post_date><![CDATA[2013-02-25 10:36:11]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-02-25 18:36:11]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-to-set-local-environment-as-default-in-cli]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cli"><![CDATA[cli]]></category>
		<category domain="post_tag" nicename="framework"><![CDATA[framework]]></category>
		<category domain="post_tag" nicename="l4"><![CDATA[l4]]></category>
		<category domain="post_tag" nicename="laravel"><![CDATA[laravel]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
			<wp:meta_value><![CDATA[62]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
			<wp:meta_value><![CDATA[cli]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_title]]></wp:meta_key>
			<wp:meta_value><![CDATA[How to set local environment as default in command line (CLI) for Larvel 4 artisan - Andrew Elkins]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
			<wp:meta_value><![CDATA[How to set local environment as default in command line (CLI) for Larvel 4 artisan - Andrew Elkins]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[onswipe_thumb]]></wp:meta_key>
			<wp:meta_value><![CDATA[SKIP]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>26</wp:comment_id>
			<wp:comment_author><![CDATA[jeremy]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jeremy@jeremyvaught.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://twitter.com/jeremyvaught</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[72.66.105.150]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-05-04 17:22:16]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-05-05 01:22:16]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It's genius! Just what I needed. I was getting tired of adding --env=local and was regretting setting up custom configs even though I know it's the right thing to do. But no more regret. 
Thanks again]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_72174988]]></wp:meta_key>
				<wp:meta_value><![CDATA[72174988]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_346920221]]></wp:meta_key>
				<wp:meta_value><![CDATA[346920221]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_346920230]]></wp:meta_key>
				<wp:meta_value><![CDATA[346920230]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>27</wp:comment_id>
			<wp:comment_author><![CDATA[AndrewElkins]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[accounts@andrewelkins.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[68.170.72.231]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-05-06 21:42:23]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-05-07 05:42:23]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[jeremy You're welcome. Glad it was of use. I was in the same state and shared as soon as I found the answer.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>26</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_72548148]]></wp:meta_key>
				<wp:meta_value><![CDATA[72548148]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_348914629]]></wp:meta_key>
				<wp:meta_value><![CDATA[348914629]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_348914636]]></wp:meta_key>
				<wp:meta_value><![CDATA[348914636]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68</wp:comment_id>
			<wp:comment_author><![CDATA[maxbar]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[serviceaddr@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[94.36.183.63]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-08-16 11:10:59]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-08-16 19:10:59]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello,
tried your advice but with no luck - I am specifically trying to have my laravel installation to "pretend" sending emails when in local (using the pretend switch in mail.php); 
my string is ub32 (I recognize it as one I added for my local machine), and my start.php array looks like this:

$env = $app-&gt;detectEnvironment(array('local' =&gt; array('sandbox', 'ub32'),));the sandbox one works (it's the one my local URLs start by, and mails are correctly "pretended"), but not the ub32. 
Maybe there is something more I need to look into?
thanks for any advice!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_461236813]]></wp:meta_key>
				<wp:meta_value><![CDATA[461236813]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_461236789]]></wp:meta_key>
				<wp:meta_value><![CDATA[461236789]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_93244379]]></wp:meta_key>
				<wp:meta_value><![CDATA[93244379]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>69</wp:comment_id>
			<wp:comment_author><![CDATA[maxbar]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[serviceaddr@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[94.36.183.63]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-08-17 01:40:46]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-08-17 09:40:46]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello,
found the problem. Supervisor was explicitly calling the production environment switch. Now it all works properly!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>68</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_462047344]]></wp:meta_key>
				<wp:meta_value><![CDATA[462047344]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_93375718]]></wp:meta_key>
				<wp:meta_value><![CDATA[93375718]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_462047347]]></wp:meta_key>
				<wp:meta_value><![CDATA[462047347]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Add a command file to Laravel artisan</title>
		<link>http://andrewelkins.com/2013/02/26/add-a-command-file-to-laravel-artisan/</link>
		<pubDate>Tue, 26 Feb 2013 21:15:21 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=277</guid>
		<description></description>
		<content:encoded><![CDATA[In order to run a custom command from the command line utility called artisan you need to do two things:
<ol>
	<li>Create a new CustomCommand file</li>
	<li>Register that command with artisan</li>
</ol>
Here's a sample Command file called <em>FooCommand.php</em> which should be placed in <em>app/commands/ </em>

[php]&lt;?php

use Illuminate\Console\Command;
 use Symfony\Component\Console\Input\InputOption;
 use Symfony\Component\Console\Input\InputArgument;

class FooCommand extends Command {

/**
 * The console command name.
 *
 * @var string
 */
 protected $name = 'foo:migrate';

/**
 * The console command description.
 *
 * @var string
 */
 protected $description = '';

/**
 * Create a new command instance.
 *
 * @return void
 */
 public function __construct()
 {
 parent::__construct();
 }

/**
 * Execute the console command.
 *
 * @return void
 */
 public function fire()
 {
 $this-&gt;info(' Step: 1');
 $this-&gt;info(' Cool Stuff Here');

}

}[/php]

Then you'll need to register that in <em>app/start/artisan.php</em>

[php]

&lt;?php
/*
 |--------------------------------------------------------------------------
 | Register The Artisan Commands
 |--------------------------------------------------------------------------
 |
 | Each available Artisan command must be registered with the console so
 | that it is available to be called. We'll register every command so
 | the console gets access to each of the command object instances.
 |
 */

Artisan::add(new FooCommand);
[/php]

Now you can run your command

[ps]php artisan foo:migrate[/ps]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>277</wp:post_id>
		<wp:post_date><![CDATA[2013-02-26 13:15:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-02-26 21:15:21]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[add-a-command-file-to-laravel-artisan]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="artisan"><![CDATA[artisan]]></category>
		<category domain="post_tag" nicename="cli"><![CDATA[cli]]></category>
		<category domain="post_tag" nicename="command-line"><![CDATA[command line]]></category>
		<category domain="post_tag" nicename="l4"><![CDATA[l4]]></category>
		<category domain="post_tag" nicename="laravel"><![CDATA[laravel]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[onswipe_thumb]]></wp:meta_key>
			<wp:meta_value><![CDATA[SKIP]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Find out what files are owned by apache</title>
		<link>http://andrewelkins.com/2013/03/09/find-out-what-files-are-owned-by-apache/</link>
		<pubDate>Sat, 09 Mar 2013 17:57:54 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=314</guid>
		<description></description>
		<content:encoded><![CDATA[In an audit of my system I needed to find all the files owned by apache.

[ps]
find ./ -name apache
[/ps]



Simple!

Here's the group and user example:

[ps]
find ./ -group apache -name apache
[/ps]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>314</wp:post_id>
		<wp:post_date><![CDATA[2013-03-09 09:57:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-03-09 17:57:54]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[find-out-what-files-are-owned-by-apache]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[livefyre_version]]></wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[onswipe_thumb]]></wp:meta_key>
			<wp:meta_value><![CDATA[SKIP]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Why I don&#039;t use AppFog</title>
		<link>http://andrewelkins.com/2013/03/15/why-i-dont-use-appfog/</link>
		<pubDate>Sat, 16 Mar 2013 04:31:50 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=324</guid>
		<description></description>
		<content:encoded><![CDATA[Simple no persistant storage. Starting up, setting up, etc are all great, but without persistance storage I'm forced to use S3 or the like. If I'm doing a very simple app or a WordPress install it's not worth the effort.

Does AppFog have a persistent file system?

Not yet. We're working on this feature, but in the meantime, the file system is volatile. This means that any changes you make to the file system through a web interface, including any admin changes and content uploads, will be lost on the app's next start, stop, restart, deploy, or resource change. Because of this, you should make any changes to the file system on a local development environment and keep media assets and content uploads on an external storage system like Amazon's S3.

<a href="https://docs.appfog.com/faq#persistentfs" target="_blank">Source</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>324</wp:post_id>
		<wp:post_date><![CDATA[2013-03-15 20:31:50]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-03-16 04:31:50]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[why-i-dont-use-appfog]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="appfog"><![CDATA[appfog]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="linux-2"><![CDATA[linux]]></category>
		<category domain="post_tag" nicename="server"><![CDATA[server]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[livefyre_version]]></wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[onswipe_thumb]]></wp:meta_key>
			<wp:meta_value><![CDATA[SKIP]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How to set Laravel 4 environments</title>
		<link>http://andrewelkins.com/2013/03/17/how-to-set-laravel-4-environments/</link>
		<pubDate>Mon, 18 Mar 2013 04:35:00 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=326</guid>
		<description></description>
		<content:encoded><![CDATA[The environment is based on url matches.

You'll find that configuration in /bootstrap/start.php

[ps]
$env = $app-&gt;detectEnvironment(array(

'local' =&gt; array('your-machine-name'),

));
[/ps]

Now say you are developing locally and use the prefix/postfix local. E.g: my-new-site.local or local.my-new-site

[ps]
$env = $app-&gt;detectEnvironment(array(

'local' =&gt; array('local.*','*.local'),

));
[/ps]

That sets the environment, now to use it you'll need to create a local folder in /app/config/

[ps]
mkdir app/config/local
[/ps]

And so you want to have a different database configuration for local. Just copy the database config file in to the local directory and modify it.

[ps]
cp app/config/database.php app/config/local/database.php
[/ps]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>326</wp:post_id>
		<wp:post_date><![CDATA[2013-03-17 20:35:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-03-18 04:35:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-to-set-laravel-4-environments]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="laravel"><![CDATA[laravel]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
			<wp:meta_value><![CDATA[48]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
			<wp:meta_value><![CDATA[laravel 4 environments]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
			<wp:meta_value><![CDATA[Allows you to set configuration on a per environment basis.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[livefyre_version]]></wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[onswipe_thumb]]></wp:meta_key>
			<wp:meta_value><![CDATA[SKIP]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>40</wp:comment_id>
			<wp:comment_author><![CDATA[dwijonarko]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[d.wijonarko@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.16.0.54]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-06-21 00:22:40]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-06-21 08:22:40]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi andrew, thx for your article. 
I just follow your article to set up my laravel application on my local machine and openshift. But when I access my laravel application on openshift, i got error message "cannot connect /var/lib/mysql/mysql.sock", even when I add unix_socket parameter ini database.php
have you ever tried to put your laravel 4application in openshift?
thanks alot]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_81707627]]></wp:meta_key>
				<wp:meta_value><![CDATA[81707627]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_394590263]]></wp:meta_key>
				<wp:meta_value><![CDATA[394590263]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_394590276]]></wp:meta_key>
				<wp:meta_value><![CDATA[394590276]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>41</wp:comment_id>
			<wp:comment_author><![CDATA[AndrewElkins]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[accounts@andrewelkins.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[68.170.72.231]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-06-21 08:26:26]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-06-21 16:26:26]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[dwijonarko I have not. Cannot connect to the socket? Are you sure mysql is installed and running?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>40</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_81854340]]></wp:meta_key>
				<wp:meta_value><![CDATA[81854340]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_394976392]]></wp:meta_key>
				<wp:meta_value><![CDATA[394976392]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_394976400]]></wp:meta_key>
				<wp:meta_value><![CDATA[394976400]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>42</wp:comment_id>
			<wp:comment_author><![CDATA[dwijonarko]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[d.wijonarko@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[112.215.45.194]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-06-22 04:07:48]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-06-22 12:07:48]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[AndrewElkins my problem has been solved, it's on my configuration database file. thanks for your article]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>41</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_81995641]]></wp:meta_key>
				<wp:meta_value><![CDATA[81995641]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_395713020]]></wp:meta_key>
				<wp:meta_value><![CDATA[395713020]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_395713028]]></wp:meta_key>
				<wp:meta_value><![CDATA[395713028]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>53</wp:comment_id>
			<wp:comment_author><![CDATA[winasph]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[winasph@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[112.209.2.148]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-07-16 00:42:50]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-07-16 08:42:50]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Sir my custom config is not getting replaced by the one in my local environment, is there a way I can include my custom config in there?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_86401985]]></wp:meta_key>
				<wp:meta_value><![CDATA[86401985]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_420385306]]></wp:meta_key>
				<wp:meta_value><![CDATA[420385306]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_420385310]]></wp:meta_key>
				<wp:meta_value><![CDATA[420385310]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>54</wp:comment_id>
			<wp:comment_author><![CDATA[AndrewElkins]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[accounts@andrewelkins.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[68.170.72.231]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-07-16 07:24:43]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-07-16 15:24:43]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[dwijonarko AndrewElkins You're welcome]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>42</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_86439008]]></wp:meta_key>
				<wp:meta_value><![CDATA[86439008]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_420617910]]></wp:meta_key>
				<wp:meta_value><![CDATA[420617910]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_420617913]]></wp:meta_key>
				<wp:meta_value><![CDATA[420617913]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>55</wp:comment_id>
			<wp:comment_author><![CDATA[AndrewElkins]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[accounts@andrewelkins.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[68.170.72.231]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-07-16 07:25:09]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-07-16 15:25:09]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[winasph Are you sure that your local environment is being set correctly?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>53</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_86439083]]></wp:meta_key>
				<wp:meta_value><![CDATA[86439083]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_420618347]]></wp:meta_key>
				<wp:meta_value><![CDATA[420618347]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_420618350]]></wp:meta_key>
				<wp:meta_value><![CDATA[420618350]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>57</wp:comment_id>
			<wp:comment_author><![CDATA[JonHowApped]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[dev@howapped.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[93.157.221.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-07-18 03:02:58]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-07-18 11:02:58]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Andrew. Thanks for the l4 Bootstrap by the way, great work.

How would I change between staging and production config if they're on the same machine. The same string applies to both.

thanks
Jon.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_86806228]]></wp:meta_key>
				<wp:meta_value><![CDATA[86806228]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_422838697]]></wp:meta_key>
				<wp:meta_value><![CDATA[422838697]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_422838713]]></wp:meta_key>
				<wp:meta_value><![CDATA[422838713]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>58</wp:comment_id>
			<wp:comment_author><![CDATA[AndrewElkins]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[accounts@andrewelkins.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[68.170.72.231]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-07-18 07:50:16]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-07-18 15:50:16]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[JonHowApped You'd have to manually change them each time you want to switch in the config file.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>57</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_86852730]]></wp:meta_key>
				<wp:meta_value><![CDATA[86852730]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_423096073]]></wp:meta_key>
				<wp:meta_value><![CDATA[423096073]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_423096075]]></wp:meta_key>
				<wp:meta_value><![CDATA[423096075]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>76</wp:comment_id>
			<wp:comment_author><![CDATA[6ber6ou]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cyber6ou@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[79.87.122.214]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-08-28 10:08:04]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-08-28 18:08:04]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi thank you for this article.
How can I run a artisan migration with the production environnement ?
My local site is in a my_site folder. From this folder I want to run a migration in the production environnement. 
I try php artisan migrate --env=production but it does not work however my database credentials are good.
Thx for help.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_95945008]]></wp:meta_key>
				<wp:meta_value><![CDATA[95945008]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_478048794]]></wp:meta_key>
				<wp:meta_value><![CDATA[478048794]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_478048817]]></wp:meta_key>
				<wp:meta_value><![CDATA[478048817]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>77</wp:comment_id>
			<wp:comment_author><![CDATA[AndrewElkins]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[accounts@andrewelkins.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[68.170.72.231]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-08-28 10:31:44]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-08-28 18:31:44]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[6ber6ou For production you shouldn't need any env declaration.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>76</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_95950390]]></wp:meta_key>
				<wp:meta_value><![CDATA[95950390]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_478085432]]></wp:meta_key>
				<wp:meta_value><![CDATA[478085432]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_478085448]]></wp:meta_key>
				<wp:meta_value><![CDATA[478085448]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>79</wp:comment_id>
			<wp:comment_author><![CDATA[ChrisAustralia]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[chrisd@mindflow.com.au]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.168.106.120]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-08-29 16:08:55]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-08-30 00:08:55]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Does not make sense to detect host name as I can easily set my host ***.dev to point to your server, make a request and run your site in DEV mode... is that right? :-/

Server PC Name, or Server IP Address makes more sense to me.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_96277313]]></wp:meta_key>
				<wp:meta_value><![CDATA[96277313]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_480143279]]></wp:meta_key>
				<wp:meta_value><![CDATA[480143279]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_480143288]]></wp:meta_key>
				<wp:meta_value><![CDATA[480143288]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80</wp:comment_id>
			<wp:comment_author><![CDATA[AndrewElkins]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[accounts@andrewelkins.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[68.170.72.231]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-08-29 23:12:59]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-08-30 07:12:59]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[ChrisAustralia This incorrectly assumes dev is world accessible and the web server is configured to run the .dev site. *If* you run your .dev that is accessible by the world you should restrict it in some way, by ip, htauth, etc]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>79</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_96345985]]></wp:meta_key>
				<wp:meta_value><![CDATA[96345985]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_480630603]]></wp:meta_key>
				<wp:meta_value><![CDATA[480630603]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_480630605]]></wp:meta_key>
				<wp:meta_value><![CDATA[480630605]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>98</wp:comment_id>
			<wp:comment_author><![CDATA[Dongxiong&#039;s blog &raquo; Blog Archive &raquo; Laravel 4环境设置]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://dongxiong.net/2013/05/set-laravel4-environments/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[50.116.6.146]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-10-27 05:00:43]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-10-27 13:00:43]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] 方法来源 [...]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1382878843.899859;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1431393143.02984;s:7:"message";s:41:"ae changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:2:"ae";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>100</wp:comment_id>
			<wp:comment_author><![CDATA[wafgomes]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[wafgomes@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[177.148.182.121]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-10-30 03:48:44]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-10-30 11:48:44]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[you are not setting anything, just configuring.
I wanna know how to SET]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_111897378]]></wp:meta_key>
				<wp:meta_value><![CDATA[111897378]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_587758660]]></wp:meta_key>
				<wp:meta_value><![CDATA[587758660]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_587758670]]></wp:meta_key>
				<wp:meta_value><![CDATA[587758670]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>109</wp:comment_id>
			<wp:comment_author><![CDATA[z1freeride]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[chrispaul.ws@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[75.162.220.201]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-12-27 15:29:15]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-12-27 23:29:15]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[ChrisAustralia The browser doesn't transmit your local computer's hostname.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_125291605]]></wp:meta_key>
				<wp:meta_value><![CDATA[125291605]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_698275779]]></wp:meta_key>
				<wp:meta_value><![CDATA[698275779]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_698275797]]></wp:meta_key>
				<wp:meta_value><![CDATA[698275797]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>111</wp:comment_id>
			<wp:comment_author><![CDATA[Infinitessimal]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[paulbc1@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[23.29.218.114]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-12-30 11:16:12]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-12-30 19:16:12]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Re: Laravel-4-Bootstrap-Starter-Site -- A new local installation

I keep getting the following error when I go to the local URL: 
vendorjasonlewisbassetsrcBassetFactoryAssetFactory.php 
caused at this line: 
return realpath($path) ?: $path; 

I'm on Windows XP, and I have enabled pretty URLs. I have successfully installed another Laravel 4 app, so I know things are basically working. So I'm wondering what I might be doing wrong. 

I have followed all of the instructions without getting any errors. For example, I have done all of this:

php composer.phar install --dev 

I modified the start.php file as follows: 
$env = $app-&gt;detectEnvironment(array(

'local' =&gt; array('http://localhost', '*.local'),
'development' =&gt; array('dev*', '*.dev'),
   #'staging' =&gt; array('your-staging-machine-name'),
    #'production' =&gt; array('your-production-machine-name'),

)); 

I left the mail.php file unchanged, as follows. (I did not install the mail component of xampp)  
'from' =&gt; array('address' =&gt; null, 'name' =&gt; null), 

And I ran these without encountering any errors:
php artisan migrate 
php artisan db:seed 
php artisan basset:build 

Any ideas?

Thanks.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_125813764]]></wp:meta_key>
				<wp:meta_value><![CDATA[125813764]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_702797260]]></wp:meta_key>
				<wp:meta_value><![CDATA[702797260]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_702824685]]></wp:meta_key>
				<wp:meta_value><![CDATA[702824685]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>112</wp:comment_id>
			<wp:comment_author><![CDATA[Infinitessimal]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[paulbc1@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[23.29.218.112]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-01-03 13:22:21]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-01-03 21:22:21]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[To answer my own question, the following modification works on Windows XP:

   public function buildAbsolutePath($path)
    {
        if (is_null($path)) return $path;
        return $path;
        #return realpath($path) ?: $path;
    }

This is relevant to:
Laravel-4-Bootstrap-Starter-Site, 
Error on Line 78 at vendorjasonlewisbassetsrcBassetFactoryAssetFactory.php]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_126673810]]></wp:meta_key>
				<wp:meta_value><![CDATA[126673810]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_710409540]]></wp:meta_key>
				<wp:meta_value><![CDATA[710409540]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_710409555]]></wp:meta_key>
				<wp:meta_value><![CDATA[710409555]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>113</wp:comment_id>
			<wp:comment_author><![CDATA[AndrewElkins]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[accounts@andrewelkins.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[23.240.222.0]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-01-03 13:43:31]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-01-03 21:43:31]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Infinitessimal Thanks!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_126680745]]></wp:meta_key>
				<wp:meta_value><![CDATA[126680745]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_710453505]]></wp:meta_key>
				<wp:meta_value><![CDATA[710453505]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_710453517]]></wp:meta_key>
				<wp:meta_value><![CDATA[710453517]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Rsync over ssh between remote servers</title>
		<link>http://andrewelkins.com/2013/03/20/rsync-over-ssh-between-remote-servers/</link>
		<pubDate>Thu, 21 Mar 2013 02:18:00 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=329</guid>
		<description></description>
		<content:encoded><![CDATA[In order to use rsync with a ssh key I used the -e flag on the rsync command. It will allow rsync over ssh local to a remote server.

[ps]

[$ ~] rsync -avz -e &quot;ssh -i .ssh/id_key.pem&quot; /opt/stuff/here/ user@10.0.0.1:/opt/stuff/here/

[/ps]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>329</wp:post_id>
		<wp:post_date><![CDATA[2013-03-20 18:18:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-03-21 02:18:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[rsync-over-ssh-between-remote-servers]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
			<wp:meta_value><![CDATA[40]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
			<wp:meta_value><![CDATA[rsync over ssh local to remote]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_title]]></wp:meta_key>
			<wp:meta_value><![CDATA[Rsync over ssh local to remote server]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
			<wp:meta_value><![CDATA[How to rsync between servers over an ssh connection. rsync over ssh local to remote]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[livefyre_version]]></wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[onswipe_thumb]]></wp:meta_key>
			<wp:meta_value><![CDATA[SKIP]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Awesome vim setup</title>
		<link>http://andrewelkins.com/2013/03/25/awesome-vim-setup/</link>
		<pubDate>Tue, 26 Mar 2013 04:04:30 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=335</guid>
		<description></description>
		<content:encoded><![CDATA[Among the editors and IDEs that I use the old stand by vim is always there. It's literally the first thing I install on a server. One of the great features of vim is the vast plugin library. This becomes even better when someone wraps a lot of the extremely useful ones in to an installable package.

<strong>Enter <a href="https://github.com/spf13/spf13-vim" target="_blank">SPF13 vim by Steve Francia</a>.</strong>

It has my favorite plugin NERDTree plus a ton of others that I didn't know I loved until I installed this package.

This is an awesome vim setup!

One word of warning vim needs to be 7.4+ for the plugins installed with the installer to work.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>335</wp:post_id>
		<wp:post_date><![CDATA[2013-03-25 20:04:30]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-03-26 04:04:30]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[awesome-vim-setup]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
			<wp:meta_value><![CDATA[58]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
			<wp:meta_value><![CDATA[awesome vim setup]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
			<wp:meta_value><![CDATA[How to make an awesome vim setup is extremely easy.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[livefyre_version]]></wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
			<wp:meta_value><![CDATA[making-vim-awesome]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Under PHP&#039;s Hood</title>
		<link>http://andrewelkins.com/2013/04/10/under-phps-hood/</link>
		<pubDate>Wed, 10 Apr 2013 19:46:45 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=367</guid>
		<description></description>
		<content:encoded><![CDATA[Recently watched/listened to Sebastian Bergmann presentation on PHP interpreter. Very useful way to brush up on how php processes a request.

<a href="http://techportal.inviqa.com/?powerpress_pinw=1439-podcast" target="_blank">Audio</a> From <a href="http://techportal.inviqa.com/2010/02/02/php-compiler-internals/" target="_blank">techportal</a>

Slides:

&nbsp;
<p  style=" margin: 12px auto 6px auto; font-family: Helvetica,Arial,Sans-serif; font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; line-height: normal; font-size-adjust: none; font-stretch: normal; -x-system-font: none; display: block;">   <a title="View PHP Compiler Internals on Scribd" href="http://www.scribd.com/doc/18171982/PHP-Compiler-Internals"  style="text-decoration: underline;" >PHP Compiler Internals</a> by <a title="View kaplumb_aga's profile on Scribd" href="http://www.scribd.com/kaplumb_aga"  style="text-decoration: underline;" >kaplumb_aga</a></p><iframe class="scribd_iframe_embed" src="http://www.scribd.com/embeds/18171982/content?start_page=1&view_mode=scroll&access_key=key-23i6tufb87wwqnn30z7s" data-auto-height="false" data-aspect-ratio="1.33333333333333" scrolling="no" id="doc_30924" width="100%" height="600" frameborder="0"></iframe>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>367</wp:post_id>
		<wp:post_date><![CDATA[2013-04-10 11:46:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-04-10 19:46:45]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[under-phps-hood]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[livefyre_version]]></wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Using xargs to parallel a process in the command line</title>
		<link>http://andrewelkins.com/2013/04/15/using-xargs-to-parallel-a-process-in-the-command-line/</link>
		<pubDate>Mon, 15 Apr 2013 17:38:21 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=373</guid>
		<description></description>
		<content:encoded><![CDATA[Most of us have multiple CPUs in our personal machines. I would also hope that your servers do too. If you're running an intensive command line process, running them in parallel will speed it up by paralleling the process.

Say you need to find a string in all of your log files. On any server that has multiple programs running there's a lot of log files to run though. Here's an example:

&nbsp;
[code]
find /var/logs -type f | xargs -P 4 -n 10 grep -H 'string-to-search'
[/code]

<a href="http://blog.labrat.info/20100429/using-xargs-to-do-parallel-processing/" target="_blank">Read more on xargs</a>
and <a href="http://sidvind.com/wiki/Xargs_by_example" target="_blank">even more examples</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>373</wp:post_id>
		<wp:post_date><![CDATA[2013-04-15 09:38:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-04-15 17:38:21]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[using-xargs-to-parallel-a-process-in-the-command-line]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cli"><![CDATA[cli]]></category>
		<category domain="category" nicename="command-line-linux"><![CDATA[Command Line]]></category>
		<category domain="post_tag" nicename="grep"><![CDATA[grep]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="parallel"><![CDATA[parallel]]></category>
		<category domain="post_tag" nicename="xargs"><![CDATA[xargs]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[livefyre_version]]></wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>23</wp:comment_id>
			<wp:comment_author><![CDATA[oletange]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[livefyre.com@tange.dk]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[87.72.108.245]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-04-19 14:04:47]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-04-19 22:04:47]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You example is deceptive as it will work in many cases. It does, however, suffer from 2 problems: https://en.wikipedia.org/wiki/Xargs#The_separator_problem  https://en.wikipedia.org/wiki/Xargs#The_separator_problemhttps://en.wikipedia.org/wiki/Xargs#The_separator_problem and the race condition that the output from several greps can mix together (See: http://www.gnu.org/software/parallel/man.html#differences_between_xargs_and_gnu_parallel )
You example, however, would work if you used GNU Parallel. It takes literally 10 seconds to install:
   wget pi.dk/3 -qO - | sh -x
Watch the intro videos to learn more: https://www.youtube.com/playlist?list=PL284C9FF2488BC6D1]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_332484065]]></wp:meta_key>
				<wp:meta_value><![CDATA[332484065]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_332484050]]></wp:meta_key>
				<wp:meta_value><![CDATA[332484050]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_69661820]]></wp:meta_key>
				<wp:meta_value><![CDATA[69661820]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>24</wp:comment_id>
			<wp:comment_author><![CDATA[AndrewElkins]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[accounts@andrewelkins.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[216.116.103.158]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-04-19 14:15:29]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-04-19 22:15:29]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[oletange Thanks for the info. The YT playlist was very interesting.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>23</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_332490802]]></wp:meta_key>
				<wp:meta_value><![CDATA[332490802]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_332490809]]></wp:meta_key>
				<wp:meta_value><![CDATA[332490809]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_69662834]]></wp:meta_key>
				<wp:meta_value><![CDATA[69662834]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>How to specify specific engine in Laravel 4 migration</title>
		<link>http://andrewelkins.com/2013/04/24/how-to-specify-specific-engine-in-laravel-4-migration/</link>
		<pubDate>Thu, 25 Apr 2013 04:54:25 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=379</guid>
		<description></description>
		<content:encoded><![CDATA[Earlier today I needed to set up a specific database engine for a mysql table that wasn't the databases's default. In this instance, the default was INNODB and I needed it to be MyISAM. We could discuss the reasons why I shouldn't use MyISAM but in this instance that's what I needed.

It's fairly straight forward. Take the following example migration block.
[code]

'mysql' =&gt; array(
 'driver' =&gt; 'mysql',
 'host' =&gt; 'hostname',
 'database' =&gt; 'database_name',
 'username' =&gt; 'username',
 'password' =&gt; 'password_here',
 'charset' =&gt; 'utf8',
 'collation' =&gt; 'utf8_unicode_ci',
 'prefix' =&gt; '',
 ),

[/code]

Then just add the engine configuration.

[code]

'mysql' =&gt; array(
 'engine' =&gt; 'MYISAM',
 'driver' =&gt; 'mysql',
 'host' =&gt; 'hostname',
 'database' =&gt; 'database_name',
 'username' =&gt; 'username',
 'password' =&gt; 'password_here',
 'charset' =&gt; 'utf8',
 'collation' =&gt; 'utf8_unicode_ci',
 'prefix' =&gt; '',
 ),

[/code]

**UPDATE**
Thanks @unisys12 for the comment. This needed to be updated for the Blueprint code in Laravel.
Your "up" method might look like:
[code]

	public function up()
	{
		// Create the `Posts` table
		Schema::create('posts', function($table)
		{
			$table-&gt;increments('id')-&gt;unsigned();
			$table-&gt;integer('user_id')-&gt;unsigned();
			$table-&gt;string('title');
			$table-&gt;string('slug');
			$table-&gt;text('content');
			$table-&gt;timestamps();
		});
	}
[/code]

In order to add the table type, you'll need to do this:
[code]

	public function up()
	{
		// Create the `Posts` table
		Schema::create('posts', function($table)
		{
			$table-&gt;engine = 'MYISAM';
			$table-&gt;increments('id')-&gt;unsigned();
			$table-&gt;integer('user_id')-&gt;unsigned();
			$table-&gt;string('title');
			$table-&gt;string('slug');
			$table-&gt;text('content');
			$table-&gt;timestamps();
		});
	}
[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>379</wp:post_id>
		<wp:post_date><![CDATA[2013-04-24 20:54:25]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-04-25 04:54:25]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-to-specify-specific-engine-in-laravel-4-migration]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[livefyre_version]]></wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>45</wp:comment_id>
			<wp:comment_author><![CDATA[unisys12]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[unisys12@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[76.8.229.114]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-07-07 05:19:38]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-07-07 13:19:38]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I have a similar issue. Although my host is currently performing maintenance (of course) and I cannot test this on a live site but, I have played with this in my local environment.  
Adding 'engine' =&gt; 'MYISAM' to the config array found in 'app/config/database.php' does not seem to have any affect whatsoever. But placing '$table-&gt;engine = 'MYISAM' to the top of your Schema::create() method does assign the specified engine to the table being created from the migration. 
Found this by performing a project wide search for 'storage engine', which lead me to 'vendorlaravelframeworksrcIlluminateDatabaseSchemaBlueprint.php'. On line 443 is the method, 'buildTableOptions' and on line 465 is where it looks for a specified engine assignment. If no assignment found, INNODB will be assigned by default. 
At this point, I took a step back and took a deep breath. Did a Google search on this topic and found your article. Upon giving it a shot, it didn't seem to work for me. Went back to the docs, for a third time and found the above mentioned method in - http://four.laravel.com/docs/schema - at the very bottom of the page.
By the way, my build of Laravel 4 is 4.0.5, so... it's possible that a good number of things have changed, which is why your method did not work for me. Thanks for the good resource, which keep me on the path.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_84620680]]></wp:meta_key>
				<wp:meta_value><![CDATA[84620680]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_410383250]]></wp:meta_key>
				<wp:meta_value><![CDATA[410383250]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_410383261]]></wp:meta_key>
				<wp:meta_value><![CDATA[410383261]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Laravel 4 release date</title>
		<link>http://andrewelkins.com/2013/04/25/laravel-4-release-date/</link>
		<pubDate>Fri, 26 Apr 2013 05:59:58 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=386</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>When will Laravel 4 be released?</h3>
Per Taylor's announcement at Laracon it will be released in May of 2013. Further on the <a href="http://wiki.laravel.io/Laravel_4" target="_blank">wiki</a> there is a time table for the next 4 releases.
<h3>Is Laravel 4 stable enough to use in production?</h3>
I would say yes. At this point in development there are a lot less items up for change. In the previous months I have seen major things change and break existing sites that I have running Laravel 4. These types of events have calmed down lately. I feel comfortable launching a site in Laravel 4 today. In fact, if you need a start in Laravel 4, check out the<a href="https://github.com/andrew13/Laravel-4-Bootstrap-Starter-Site" target="_blank"> starter site on github</a>.

<strong>*Update*</strong>

Release date is May 27th 2013!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>386</wp:post_id>
		<wp:post_date><![CDATA[2013-04-25 21:59:58]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-04-26 05:59:58]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[laravel-4-release-date]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[livefyre_version]]></wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How to find mysql variables with a query, specifically data directory</title>
		<link>http://andrewelkins.com/2013/04/28/how-to-find-mysql-variables-with-a-query-data-directory/</link>
		<pubDate>Sun, 28 Apr 2013 21:34:56 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=390</guid>
		<description></description>
		<content:encoded><![CDATA[I needed to find out the data directory for mysql. A quick way to do this within mysql is to use the <em>show variables</em> command.

[code]

mysql&gt; show variables;

[/code]

Which will output something like:

[code]

+-----------------------------------------+-------------------------------------------------------------------------------------------+
| Variable_name | Value |
+-----------------------------------------+-------------------------------------------------------------------------------------------+
| auto_increment_increment | 1 |
| auto_increment_offset | 1 |
| autocommit | ON |
| automatic_sp_privileges | ON |
| back_log | 50 |
| basedir | /usr/ |
| big_tables | OFF |
| binlog_cache_size | 32768 |
| binlog_direct_non_transactional_updates | OFF |
| binlog_format | STATEMENT |
| bulk_insert_buffer_size | 8388608 |
| character_set_client | latin1 |
| character_set_connection | latin1 |
| character_set_database | latin1 |
| character_set_filesystem | binary |
| character_set_results | latin1 |
| character_set_server | latin1 |
| character_set_system | utf8 |
| character_sets_dir | /usr/share/mysql/charsets/ |
| collation_connection | latin1_swedish_ci |
| collation_database | latin1_swedish_ci |
| collation_server | latin1_swedish_ci |
| completion_type | 0 |
| concurrent_insert | 1 |
| connect_timeout | 10 |
| datadir | /var/lib/mysql/ |
| date_format | %Y-%m-%d |
| datetime_format | %Y-%m-%d %H:%i:%s |
| default_week_format | 0 |
| delay_key_write | ON |
| delayed_insert_limit | 100 |
| delayed_insert_timeout | 300 |
| delayed_queue_size | 1000 |

[ .......]

| version_comment | (Ubuntu) |
| version_compile_machine | i686 |
| version_compile_os | debian-linux-gnu |
| wait_timeout | 28800 |
| warning_count | 0 |
+-----------------------------------------+-------------------------------------------------------------------------------------------+

[/code]

You'll see on this development server the data directory was in <em>/var/lib/mysql/</em>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>390</wp:post_id>
		<wp:post_date><![CDATA[2013-04-28 13:34:56]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-04-28 21:34:56]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-to-find-mysql-variables-with-a-query-data-directory]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="command-line-linux"><![CDATA[Command Line]]></category>
		<category domain="category" nicename="mysql"><![CDATA[mysql]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
			<wp:meta_value><![CDATA[62]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
			<wp:meta_value><![CDATA[data directory]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[livefyre_version]]></wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Find the collation of all tables within a mysql database</title>
		<link>http://andrewelkins.com/2013/04/29/find-the-collation-all-tables-mysql/</link>
		<pubDate>Mon, 29 Apr 2013 18:32:48 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=394</guid>
		<description></description>
		<content:encoded><![CDATA[Needing to find a collation of a mysql database for a migration I went to google. Found several options, but the best was one from <a href="http://stackoverflow.com/questions/4948356/query-to-show-all-tables-and-their-collation" target="_blank">stack overflow</a>.

[code]

SELECT TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, COLLATION_NAME

FROM INFORMATION_SCHEMA.COLUMNS;

[/code]

This will output something like:

[code]

mysql&gt; SELECT TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, COLLATION_NAME
 -&gt; FROM INFORMATION_SCHEMA.COLUMNS;
+---------------+--------------------+---------------------------------------+-------------------------------+-------------------+
| TABLE_CATALOG | TABLE_SCHEMA | TABLE_NAME | COLUMN_NAME | COLLATION_NAME |
+---------------+--------------------+---------------------------------------+-------------------------------+-------------------+
| NULL | information_schema | CHARACTER_SETS | CHARACTER_SET_NAME | utf8_general_ci |
| NULL | information_schema | CHARACTER_SETS | DEFAULT_COLLATE_NAME | utf8_general_ci |
| NULL | information_schema | CHARACTER_SETS | DESCRIPTION | utf8_general_ci |
| NULL | information_schema | CHARACTER_SETS | MAXLEN | NULL |
| NULL | information_schema | COLLATIONS | COLLATION_NAME | utf8_general_ci |
| NULL | information_schema | COLLATIONS | CHARACTER_SET_NAME | utf8_general_ci |
| NULL | information_schema | COLLATIONS | ID | NULL |
| NULL | information_schema | COLLATIONS | IS_DEFAULT | utf8_general_ci |
| NULL | information_schema | COLLATIONS | IS_COMPILED | utf8_general_ci |
| NULL | information_schema | COLLATIONS | SORTLEN | NULL |
| NULL | information_schema | COLLATION_CHARACTER_SET_APPLICABILITY | COLLATION_NAME | utf8_general_ci |
| NULL | information_schema | COLLATION_CHARACTER_SET_APPLICABILITY | CHARACTER_SET_NAME | utf8_general_ci |
| NULL | information_schema | COLUMNS | TABLE_CATALOG | utf8_general_ci |
| NULL | information_schema | COLUMNS | TABLE_SCHEMA | utf8_general_ci |

[...]

| NULL | information_schema | VIEWS | SECURITY_TYPE | utf8_general_ci |
| NULL | information_schema | VIEWS | CHARACTER_SET_CLIENT | utf8_general_ci |
| NULL | information_schema | VIEWS | COLLATION_CONNECTION | utf8_general_ci |
| NULL | test_db_wp | wp_commentmeta | meta_id | NULL |
| NULL | test_db_wp | wp_commentmeta | comment_id | NULL |
| NULL | test_db_wp | wp_commentmeta | meta_key | utf8_general_ci |
| NULL | test_db_wp | wp_commentmeta | meta_value | utf8_general_ci |
| NULL | test_db_wp | wp_comments | comment_ID | NULL |
| NULL | test_db_wp | wp_comments | comment_post_ID | NULL |
| NULL | test_db_wp | wp_comments | comment_author | utf8_general_ci |
| NULL | test_db_wp | wp_comments | comment_author_email | utf8_general_ci |
| NULL | test_db_wp | wp_comments | comment_author_url | utf8_general_ci |
| NULL | test_db_wp | wp_comments | comment_author_IP | utf8_general_ci |
| NULL | test_db_wp | wp_comments | comment_date | NULL |
| NULL | test_db_wp | wp_comments | comment_date_gmt | NULL |
| NULL | test_db_wp | wp_comments | comment_content | utf8_general_ci |
| NULL | test_db_wp | wp_comments | comment_karma | NULL |
| NULL | test_db_wp | wp_comments | comment_approved | utf8_general_ci |
| NULL | test_db_wp | wp_comments | comment_agent | utf8_general_ci |
| NULL | test_db_wp | wp_comments | comment_type | utf8_general_ci |
| NULL | test_db_wp | wp_comments | comment_parent | NULL |
| NULL | test_db_wp | wp_comments | user_id | NULL |
| NULL | test_db_wp | wp_links | link_id | NULL |
| NULL | test_db_wp | wp_links | link_url | utf8_general_ci |
| NULL | test_db_wp | wp_links | link_name | utf8_general_ci |
| NULL | test_db_wp | wp_links | link_image | utf8_general_ci |
| NULL | test_db_wp | wp_links | link_target | utf8_general_ci |
| NULL | test_db_wp | wp_links | link_category | NULL |
| NULL | test_db_wp | wp_links | link_description | utf8_general_ci |
| NULL | test_db_wp | wp_links | link_visible | utf8_general_ci |
| NULL | test_db_wp | wp_links | link_owner | NULL |
| NULL | test_db_wp | wp_links | link_rating | NULL |
| NULL | test_db_wp | wp_links | link_updated | NULL |
| NULL | test_db_wp | wp_links | link_rel | utf8_general_ci |
| NULL | test_db_wp | wp_links | link_notes | utf8_general_ci |
| NULL | test_db_wp | wp_links | link_rss | utf8_general_ci |
| NULL | test_db_wp | wp_options | option_id | NULL |
| NULL | test_db_wp | wp_options | option_name | utf8_general_ci |
| NULL | test_db_wp | wp_options | option_value | utf8_general_ci |

[/code]

The first part of this shows the overall database collation. In this case, it is utf8_general_ci.

Then the second part shows the collation per column with each table within the database. In this case they are all the same as the default. However, it should be noted that this isn't always the case. It can be different then the default.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>394</wp:post_id>
		<wp:post_date><![CDATA[2013-04-29 10:32:48]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-04-29 18:32:48]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[find-the-collation-all-tables-mysql]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="mysql"><![CDATA[mysql]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
			<wp:meta_value><![CDATA[68]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
			<wp:meta_value><![CDATA[mysql]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[livefyre_version]]></wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How to get logitech m705 working in linux mint</title>
		<link>http://andrewelkins.com/2013/05/28/how-to-get-logitech-m705-working-in-linux-mint/</link>
		<pubDate>Wed, 29 May 2013 01:29:47 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=403</guid>
		<description></description>
		<content:encoded><![CDATA[I am using a new laptop, ASUS Zenbook, running linux mint cinnamon. My preferred mouse is a logitech m705 for use on the go. I needed to get it working since it wasn't out of the box. There's several ways to get the unifying receiver working. The easiest for me was using a project on github, <a href="https://github.com/treeder/logitech_unifier" target="_blank">logitech unifier</a>.

Simple to do.

[code]

cd ~

wget https://github.com/treeder/logitech_unifier/archive/master.zip

unzip master.zip

cd logitech_unifier-master

./autopair.sh

[/code]

Then followed the prompts, turned it on and it worked. Much simpler than the other options I considered.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>403</wp:post_id>
		<wp:post_date><![CDATA[2013-05-28 17:29:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-05-29 01:29:47]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-to-get-logitech-m705-working-in-linux-mint]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="command-line-linux"><![CDATA[Command Line]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[livefyre_version]]></wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>88</wp:comment_id>
			<wp:comment_author><![CDATA[Webbyra Stockholm]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[czdxc@yahoo.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.esdatorservice.se/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[39.47.118.73]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-09-19 14:50:08]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-09-19 22:50:08]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I really enjoy the article.Really looking forward to read more. Much obliged.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_102125367]]></wp:meta_key>
				<wp:meta_value><![CDATA[102125367]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_512663601]]></wp:meta_key>
				<wp:meta_value><![CDATA[512663601]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_512663615]]></wp:meta_key>
				<wp:meta_value><![CDATA[512663615]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>How to get the base directory of a laravel 4 installation.</title>
		<link>http://andrewelkins.com/2013/06/01/how-to-get-the-base-directory-of-a-laravel-4-installation/</link>
		<pubDate>Sun, 02 Jun 2013 01:33:03 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=405</guid>
		<description></description>
		<content:encoded><![CDATA[In order to get the base directory of a laravel 4 install you'll just need to do one command. It's fairly simple.

&nbsp;

[code]

app()-&gt;make('path.base')

[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>405</wp:post_id>
		<wp:post_date><![CDATA[2013-06-01 17:33:03]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-06-02 01:33:03]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-to-get-the-base-directory-of-a-laravel-4-installation]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="laravel"><![CDATA[laravel]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[livefyre_version]]></wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How to get laravel database prefix</title>
		<link>http://andrewelkins.com/2013/06/14/how-to-get-laravel-database-prefix/</link>
		<pubDate>Fri, 14 Jun 2013 20:39:52 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=407</guid>
		<description></description>
		<content:encoded><![CDATA[I needed to get the db prefix for a raw insert query I was running. It's an easy function call to get the current database prefix.

[code]

DB::getTablePrefix();

[/code]

Will output the prefix for the current database. This will work in laravel 4.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>407</wp:post_id>
		<wp:post_date><![CDATA[2013-06-14 12:39:52]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-06-14 20:39:52]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-to-get-laravel-database-prefix]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="db"><![CDATA[db]]></category>
		<category domain="post_tag" nicename="laravel"><![CDATA[laravel]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_tag" nicename="php-2"><![CDATA[php]]></category>
		<category domain="post_tag" nicename="prefix"><![CDATA[prefix]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[livefyre_version]]></wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How to checkout a remote branch in git</title>
		<link>http://andrewelkins.com/2013/07/02/how-to-checkout-a-remote-branch-in-git/</link>
		<pubDate>Tue, 02 Jul 2013 15:58:05 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=415</guid>
		<description></description>
		<content:encoded><![CDATA[In order to avoid conflicts when checking out a branch from a remote repo you need to check it out directly.

[code]
git fetch origin
git branch -f remote_branch_name origin/remote_branch_name
git checkout remote_branch name
[/code]

[code]
git checkout -b production origin/production
[/code]

Simple. ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>415</wp:post_id>
		<wp:post_date><![CDATA[2013-07-02 07:58:05]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-07-02 15:58:05]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-to-checkout-a-remote-branch-in-git]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="command-line-linux"><![CDATA[Command Line]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[livefyre_version]]></wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Depends: libssl0.9.8 (&gt;= 0.9.8m-1) but it is not installable</title>
		<link>http://andrewelkins.com/2013/07/03/depends-libssl0-9-8-0-9-8m-1-but-it-is-not-installable/</link>
		<pubDate>Wed, 03 Jul 2013 16:48:45 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=418</guid>
		<description></description>
		<content:encoded><![CDATA[I was setting up a webserver on Debian 7 but ran in to a dependency issue for nginx. It said I needed libssl0.9.8. Well I had libssl1.0.x which left me wondering was it in compatible. Yes it is. I needed to download the deb and install it.

[code]
root@web1:~# apt-get install nginx nginx-light php5-fpm php5-gd php5-curl php5-mysql libssl-dev
Reading package lists... Done
Building dependency tree       
Reading state information... Done
libssl-dev is already the newest version.
Some packages could not be installed. This may mean that you have
requested an impossible situation or if you are using the unstable
distribution that some required packages have not yet been created
or been moved out of Incoming.
The following information may help to resolve the situation:

The following packages have unmet dependencies:
 nginx-light : Depends: libssl0.9.8 (&gt;= 0.9.8m-1) but it is not installable
E: Unable to correct problems, you have held broken packages.

[/code]

wget the correct deb http://snapshot.debian.org/package/openssl098/0.9.8o-7/#libssl0.9.8_0.9.8o-7

[code]
wget http://snapshot.debian.org/archive/debian/20110406T213352Z/pool/main/o/openssl098/libssl0.9.8_0.9.8o-7_i386.deb
[/code]

Then install it.

[code]
sudo dpkg -i libssl0.9.8_0.9.8o-7_i386.deb
[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>418</wp:post_id>
		<wp:post_date><![CDATA[2013-07-03 08:48:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-07-03 16:48:45]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[depends-libssl0-9-8-0-9-8m-1-but-it-is-not-installable]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="command-line-linux"><![CDATA[Command Line]]></category>
		<category domain="post_tag" nicename="debian"><![CDATA[debian]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="server"><![CDATA[server]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[livefyre_version]]></wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>155</wp:comment_id>
			<wp:comment_author><![CDATA[fyberoptik]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-06-04 01:38:06]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-06-04 09:38:06]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Before installing old packages I would check you have added the relevant repo for Debian 7 Wheezy. I nearly slipped up working from an old nginx guide which specified squeeze in the source list. Should be the following:


deb http://nginx.org/packages/debian/ wheezy nginxdeb-src http://nginx.org/packages/debian/ wheezy nginx]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_320656652]]></wp:meta_key>
				<wp:meta_value><![CDATA[320656652]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_1974436380]]></wp:meta_key>
				<wp:meta_value><![CDATA[1974436380]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_1974436395]]></wp:meta_key>
				<wp:meta_value><![CDATA[1974436395]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>BaseRepositoryInterface Base Eloquent Repository</title>
		<link>http://andrewelkins.com/2013/07/04/baserepositoryinterface/</link>
		<pubDate>Thu, 04 Jul 2013 18:54:43 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=420</guid>
		<description></description>
		<content:encoded><![CDATA[Here's a base Eloquent Repository.
[code]
interface BaseRepositoryInterface
{
    /**
     * Execute the query and get the first result.
     *
     * @param array  $columns
     * @return \Illuminate\Database\Eloquent\Model|null|static
     * @static
     */
    public function first($columns);

    /**
     * Execute the query and get the first result or throw an exception.
     *
     * @param array  $columns
     * @return \Illuminate\Database\Eloquent\Model
     * @static
     */
    public function firstOrFail($columns);

    /**
     * Execute the query as a &quot;select&quot; statement.
     *
     * @param array  $columns
     * @return \Illuminate\Database\Eloquent\Collection|\Eloquent[]|static[]
     * @static
     */
    public function get($columns);

    /**
     * Pluck a single column from the database.
     *
     * @param string  $column
     * @return mixed|static
     * @static
     */
    public function pluck($column);

    /**
     * Get an array with the values of a given column.
     *
     * @param string  $column
     * @param string  $key
     * @return array
     * @static
     */
    public function lists($column, $key = null);

    /**
     * Get a paginator for the &quot;select&quot; statement.
     *
     * @param int    $perPage
     * @param array  $columns
     * @return \Illuminate\Pagination\Paginator
     * @static
     */
    public function paginate($perPage = null, $columns = array());

    /**
     * Get the hydrated models without eager loading.
     *
     * @param array  $columns
     * @return array
     * @static
     */
    public function getModels($columns = array());

    /**
     * Eager load the relationships for the models.
     *
     * @param array  $models
     * @return array
     * @static
     */
    public function eagerLoadRelations($models);

    /**
     * Add a relationship count condition to the query.
     *
     * @param string  $relation
     * @param string  $operator
     * @param int     $count
     * @param string  $boolean
     * @return \Illuminate\Database\Eloquent\Builder
     * @static
     */
    public function has($relation, $operator = '&gt;=', $count = 1, $boolean = 'and');

    /**
     * Add a relationship count condition to the query with an &quot;or&quot;.
     *
     * @param string  $relation
     * @param string  $operator
     * @param int     $count
     * @return \Illuminate\Database\Eloquent\Builder
     * @static
     */
    public function orHas($relation, $operator = '&gt;=', $count = 1);

    /**
     * Get the underlying query builder instance.
     *
     * @return \Illuminate\Database\Query\Builder|static
     * @static
     */
    public function getQuery();
    

    /**
     * Set the underlying query builder instance.
     *
     * @param \Illuminate\Database\Query\Builder  $query
     * @return void
     * @static
     */
    public function setQuery($query);
    

    /**
     * Get the relationships being eagerly loaded.
     *
     * @return array
     * @static
     */
    public function getEagerLoads();
    

    /**
     * Set the relationships being eagerly loaded.
     *
     * @param array  $eagerLoad
     * @return void
     * @static
     */
    public function setEagerLoads($eagerLoad);
    

    /**
     * Get the model instance being queried.
     *
     * @return \Illuminate\Database\Eloquent\Model
     * @static
     */
    public function getModel();
    

    /**
     * Set a model instance for the model being queried.
     *
     * @param \Illuminate\Database\Eloquent\Model  $model
     * @return \Illuminate\Database\Eloquent\Builder
     * @static
     */
    public function setModel($model);
    

    /**
     * Set the columns to be selected.
     *
     * @param array  $columns
     * @return \Illuminate\Database\Query\Builder|static
     * @static
     */
    public function select($columns = array());
    

    /**
     * Add a new select column to the query.
     *
     * @param mixed  $column
     * @return \Illuminate\Database\Query\Builder|static
     * @static
     */
    public function addSelect($column);
    

    /**
     * Force the query to only return distinct results.
     *
     * @return \Illuminate\Database\Query\Builder|static
     * @static
     */
    public function distinct();
    

    /**
     * Set the table which the query is targeting.
     *
     * @param string  $table
     * @return \Illuminate\Database\Query\Builder|static
     * @static
     */
    public function from($table);
    

    /**
     * Add a join clause to the query.
     *
     * @param string  $table
     * @param string  $first
     * @param string  $operator
     * @param string  $second
     * @param string  $type
     * @return \Illuminate\Database\Query\Builder|static
     * @static
     */
    public function join($table, $first, $operator = null, $second = null, $type = 'inner');
    

    /**
     * Add a left join to the query.
     *
     * @param string  $table
     * @param string  $first
     * @param string  $operator
     * @param string  $second
     * @return \Illuminate\Database\Query\Builder|static
     * @static
     */
    public function leftJoin($table, $first, $operator = null, $second = null);
    

    /**
     * Add a basic where clause to the query.
     *
     * @param string  $column
     * @param string  $operator
     * @param mixed   $value
     * @param string  $boolean
     * @return \Illuminate\Database\Query\Builder|static
     * @static
     */
    public function where($column, $operator = null, $value = null, $boolean = 'and');
    

    /**
     * Add an &quot;or where&quot; clause to the query.
     *
     * @param string  $column
     * @param string  $operator
     * @param mixed   $value
     * @return \Illuminate\Database\Query\Builder|static
     * @static
     */
    public function orWhere($column, $operator = null, $value = null);
    

    /**
     * Add a raw where clause to the query.
     *
     * @param string  $sql
     * @param array   $bindings
     * @param string  $boolean
     * @return \Illuminate\Database\Query\Builder|static
     * @static
     */
    public function whereRaw($sql, $bindings = array(), $boolean = 'and');
    

    /**
     * Add a raw or where clause to the query.
     *
     * @param string  $sql
     * @param array   $bindings
     * @return \Illuminate\Database\Query\Builder|static
     * @static
     */
    public function orWhereRaw($sql, $bindings = array());
    

    /**
     * Add a where between statement to the query.
     *
     * @param string  $column
     * @param array   $values
     * @param string  $boolean
     * @return \Illuminate\Database\Query\Builder|static
     * @static
     */
    public function whereBetween($column, $values, $boolean = 'and');
    

    /**
     * Add an or where between statement to the query.
     *
     * @param string  $column
     * @param array   $values
     * @return \Illuminate\Database\Query\Builder|static
     * @static
     */
    public function orWhereBetween($column, $values);
    

    /**
     * Add a nested where statement to the query.
     *
     * @param Closure  $callback
     * @param string   $boolean
     * @return \Illuminate\Database\Query\Builder|static
     * @static
     */
    public function whereNested($callback, $boolean = 'and');
    

    /**
     * Add an exists clause to the query.
     *
     * @param Closure  $callback
     * @param string   $boolean
     * @param bool     $not
     * @return \Illuminate\Database\Query\Builder|static
     * @static
     */
    public function whereExists($callback, $boolean = 'and', $not = false);
    

    /**
     * Add an or exists clause to the query.
     *
     * @param Closure  $callback
     * @param bool     $not
     * @return \Illuminate\Database\Query\Builder|static
     * @static
     */
    public function orWhereExists($callback, $not = false);
    

    /**
     * Add a where not exists clause to the query.
     *
     * @param Closure  $calback
     * @param string   $boolean
     * @return \Illuminate\Database\Query\Builder|static
     * @static
     */
    public function whereNotExists($callback, $boolean = 'and');
    

    /**
     * Add a where not exists clause to the query.
     *
     * @param Closure  $calback
     * @return \Illuminate\Database\Query\Builder|static
     * @static
     */
    public function orWhereNotExists($callback);
    

    /**
     * Add a &quot;where in&quot; clause to the query.
     *
     * @param string  $column
     * @param mixed   $values
     * @param string  $boolean
     * @param bool    $not
     * @return \Illuminate\Database\Query\Builder|static
     * @static
     */
    public function whereIn($column, $values, $boolean = 'and', $not = false);
    

    /**
     * Add an &quot;or where in&quot; clause to the query.
     *
     * @param string  $column
     * @param mixed   $values
     * @return \Illuminate\Database\Query\Builder|static
     * @static
     */
    public function orWhereIn($column, $values);
    

    /**
     * Add a &quot;where not in&quot; clause to the query.
     *
     * @param string  $column
     * @param mixed   $values
     * @param string  $boolean
     * @return \Illuminate\Database\Query\Builder|static
     * @static
     */
    public function whereNotIn($column, $values, $boolean = 'and');
    

    /**
     * Add an &quot;or where not in&quot; clause to the query.
     *
     * @param string  $column
     * @param mixed   $values
     * @return \Illuminate\Database\Query\Builder|static
     * @static
     */
    public function orWhereNotIn($column, $values);
    

    /**
     * Add a &quot;where null&quot; clause to the query.
     *
     * @param string  $column
     * @param string  $boolean
     * @param bool    $not
     * @return \Illuminate\Database\Query\Builder|static
     * @static
     */
    public function whereNull($column, $boolean = 'and', $not = false);
    

    /**
     * Add an &quot;or where null&quot; clause to the query.
     *
     * @param string  $column
     * @return \Illuminate\Database\Query\Builder|static
     * @static
     */
    public function orWhereNull($column);
    

    /**
     * Add a &quot;where not null&quot; clause to the query.
     *
     * @param string  $column
     * @param string  $boolean
     * @return \Illuminate\Database\Query\Builder|static
     * @static
     */
    public function whereNotNull($column, $boolean = 'and');
    

    /**
     * Add an &quot;or where not null&quot; clause to the query.
     *
     * @param string  $column
     * @return \Illuminate\Database\Query\Builder|static
     * @static
     */
    public function orWhereNotNull($column);
    

    /**
     * Handles dynamic &quot;where&quot; clauses to the query.
     *
     * @param string  $method
     * @param string  $parameters
     * @return \Illuminate\Database\Query\Builder|static
     * @static
     */
    public function dynamicWhere($method, $parameters);
    

    /**
     * Add a &quot;group by&quot; clause to the query.
     *
     * @param dynamic  $columns
     * @return \Illuminate\Database\Query\Builder|static
     * @static
     */
    public function groupBy();
    

    /**
     * Add a &quot;having&quot; clause to the query.
     *
     * @param string  $column
     * @param string  $operator
     * @param string  $value
     * @return \Illuminate\Database\Query\Builder|static
     * @static
     */
    public function having($column, $operator = null, $value = null);
    

    /**
     * Add a raw having clause to the query.
     *
     * @param string  $sql
     * @param array   $bindings
     * @param string  $boolean
     * @return \Illuminate\Database\Query\Builder|static
     * @static
     */
    public function havingRaw($sql, $bindings = array(), $boolean = 'and');
    

    /**
     * Add a raw or having clause to the query.
     *
     * @param string  $sql
     * @param array   $bindings
     * @return \Illuminate\Database\Query\Builder|static
     * @static
     */
    public function orHavingRaw($sql, $bindings = array());
    

    /**
     * Add an &quot;order by&quot; clause to the query.
     *
     * @param string  $column
     * @param string  $direction
     * @return \Illuminate\Database\Query\Builder|static
     * @static
     */
    public function orderBy($column, $direction = 'asc');
    

    /**
     * Set the &quot;offset&quot; value of the query.
     *
     * @param int  $value
     * @return \Illuminate\Database\Query\Builder|static
     * @static
     */
    public function skip($value);
    

    /**
     * Set the &quot;limit&quot; value of the query.
     *
     * @param int  $value
     * @return \Illuminate\Database\Query\Builder|static
     * @static
     */
    public function take($value);
    

    /**
     * Set the limit and offset for a given page.
     *
     * @param int  $page
     * @param int  $perPage
     * @return \Illuminate\Database\Query\Builder|static
     * @static
     */
    public function forPage($page, $perPage = 15);
    

    /**
     * Add a union statement to the query.
     *
     * @param \Illuminate\Database\Query\Builder|\Closure  $query
     * @param bool $all
     * @return \Illuminate\Database\Query\Builder|static
     * @static
     */
    public function union($query, $all = false);
    

    /**
     * Add a union all statement to the query.
     *
     * @param \Illuminate\Database\Query\Builder|\Closure  $query
     * @return \Illuminate\Database\Query\Builder|static
     * @static
     */
    public function unionAll($query);
    

    /**
     * Get the SQL representation of the query.
     *
     * @return string
     * @static
     */
    public function toSql();
    

    /**
     * Indicate that the query results should be cached.
     *
     * @param int  $minutes
     * @param string  $key
     * @return \Illuminate\Database\Query\Builder|static
     * @static
     */
    public function remember($minutes, $key = null);
    

    /**
     * Execute the query as a fresh &quot;select&quot; statement.
     *
     * @param array  $columns
     * @return array
     * @static
     */
    public function getFresh($columns = array());
    

    /**
     * Execute the query as a cached &quot;select&quot; statement.
     *
     * @param array  $columns
     * @return array
     * @static
     */
    public function getCached($columns = array());
    

    /**
     * Get a unique cache key for the complete query.
     *
     * @return string
     * @static
     */
    public function getCacheKey();
    

    /**
     * Generate the unique cache key for the query.
     *
     * @return string
     * @static
     */
    public function generateCacheKey();
    

    /**
     * Concatenate values of a given column as a string.
     *
     * @param string  $column
     * @param string  $glue
     * @return string
     * @static
     */
    public function implode($column, $glue = null);
    

    /**
     * Build a paginator instance from a raw result array.
     *
     * @param \Illuminate\Pagination\Environment  $paginator
     * @param array  $results
     * @param int    $perPage
     * @return \Illuminate\Pagination\Paginator
     * @static
     */
    public function buildRawPaginator($paginator, $results, $perPage);
    

    /**
     * Get the count of the total records for pagination.
     *
     * @return int
     * @static
     */
    public function getPaginationCount();
    

    /**
     * Determine if any rows exist for the current query.
     *
     * @return bool
     * @static
     */
    public function exists();
    

    /**
     * Retrieve the &quot;count&quot; result of the query.
     *
     * @param string  $column
     * @return int
     * @static
     */
    public function count($column = '*');
    

    /**
     * Retrieve the minimum value of a given column.
     *
     * @param string  $column
     * @return mixed
     * @static
     */
    public function min($column);
    

    /**
     * Retrieve the maximum value of a given column.
     *
     * @param string  $column
     * @return mixed
     * @static
     */
    public function max($column);
    

    /**
     * Retrieve the sum of the values of a given column.
     *
     * @param string  $column
     * @return mixed
     * @static
     */
    public function sum($column);
    

    /**
     * Retrieve the average of the values of a given column.
     *
     * @param string  $column
     * @return mixed
     * @static
     */
    public function avg($column);
    

    /**
     * Execute an aggregate function on the database.
     *
     * @param string  $function
     * @param array   $columns
     * @return mixed
     * @static
     */
    public function aggregate($function, $columns = array());
    

    /**
     * Insert a new record into the database.
     *
     * @param array  $values
     * @return bool
     * @static
     */
    public function insert($values);
    

    /**
     * Insert a new record and get the value of the primary key.
     *
     * @param array   $values
     * @param string  $sequence
     * @return int
     * @static
     */
    public function insertGetId($values, $sequence = null);
    

    /**
     * Run a truncate statement on the table.
     *
     * @return void
     * @static
     */
    public function truncate();
    

    /**
     * Merge an array of where clauses and bindings.
     *
     * @param array  $wheres
     * @param array  $bindings
     * @return void
     * @static
     */
    public function mergeWheres($wheres, $bindings);
    

    /**
     * Get a copy of the where clauses and bindings in an array.
     *
     * @return array
     * @static
     */
    public function getAndResetWheres();
    

    /**
     * Create a raw database expression.
     *
     * @param mixed  $value
     * @return \Illuminate\Database\Query\Expression
     * @static
     */
    public function raw($value);
    

    /**
     * Get the current query value bindings.
     *
     * @return array
     * @static
     */
    public function getBindings();
    

    /**
     * Set the bindings on the query builder.
     *
     * @param array  $bindings
     * @return void
     * @static
     */
    public function setBindings($bindings);
    

    /**
     * Merge an array of bindings into our bindings.
     *
     * @param \Illuminate\Database\Query\Builder  $query
     * @return \Illuminate\Database\Query\Builder|static
     * @static
     */
    public function mergeBindings($query);
    

    /**
     * Get the database query processor instance.
     *
     * @return \Illuminate\Database\Query\Processors\Processor
     * @static
     */
    public function getProcessor();
    

    /**
     * Get the query grammar instance.
     *
     * @return \Illuminate\Database\Grammar
     * @static
     */
    public function getGrammar();
}
[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>420</wp:post_id>
		<wp:post_date><![CDATA[2013-07-04 10:54:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-07-04 18:54:43]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[baserepositoryinterface]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="laravel"><![CDATA[laravel]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[livefyre_version]]></wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Install Jenkins on Debian 7</title>
		<link>http://andrewelkins.com/2013/07/29/install-jenkins-on-debian-7/</link>
		<pubDate>Tue, 30 Jul 2013 05:42:15 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=429</guid>
		<description></description>
		<content:encoded><![CDATA[Here's how I installed Jenkins on Debian 7.
[code]
$ wget -q -O - http://pkg.jenkins-ci.org/debian/jenkins-ci.org.key | sudo apt-key add -
$ sudo echo 'deb http://pkg.jenkins-ci.org/debian binary/' &gt;&gt; /etc/apt/sources.list
$ sudo apt-get update
$ sudo apt-get install jenkins
[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>429</wp:post_id>
		<wp:post_date><![CDATA[2013-07-29 21:42:15]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-07-30 05:42:15]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[install-jenkins-on-debian-7]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="command-line-linux"><![CDATA[Command Line]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[livefyre_version]]></wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How to install cacti on Debian 7</title>
		<link>http://andrewelkins.com/2013/07/30/how-to-install-cacti-on-debian-7/</link>
		<pubDate>Tue, 30 Jul 2013 18:10:27 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=431</guid>
		<description></description>
		<content:encoded><![CDATA[Installing cacti on Debian 7 is very easy.

Issue an apt-get install cacti

[code]
apt-get install cacti
[/code]

Then follow the prompts for mysql root password and cacti db password (which it creates).

Then go to http://localhost/cacti

Click next and confirm a few options.

Login with admin/admin
It will then ask you to change the default password.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>431</wp:post_id>
		<wp:post_date><![CDATA[2013-07-30 10:10:27]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-07-30 18:10:27]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-to-install-cacti-on-debian-7]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="command-line-linux"><![CDATA[Command Line]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[livefyre_version]]></wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How to install java 7 on debian</title>
		<link>http://andrewelkins.com/2013/08/26/how-to-install-java-7-on-debian-oracle-sucks/</link>
		<pubDate>Tue, 27 Aug 2013 00:55:50 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=436</guid>
		<description></description>
		<content:encoded><![CDATA[HOW TO INSTALL JAVA 7 ON DEBIAN 7

Debian is my distro of choice for servers, but due to licencing issues it cannot provide Oracle Java 7+ in the repos. Personally Oracle needs to undo their restrictive licensing on a VERY popular language.

Need to add an older repository that has the stuff we need:

[code]
sudo su -
echo &quot;deb http://ppa.launchpad.net/webupd8team/java/ubuntu precise main&quot; | tee -a /etc/apt/sources.list
echo &quot;deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu precise main&quot; | tee -a /etc/apt/sources.list
apt-key adv --keyserver keyserver.ubuntu.com --recv-keys EEA14886
apt-get update
[/code]

This adds the packages that contain java7 by oracle.

Install:

[code]
sudo apt-get install oracle-java7-installer
[/code]

Then you'll see a couple of screens asking you to accept their license. It's fine, just accept both screens and it will now install.

Now you'll want to make sure java 7 is default.

[code]
sudo apt-get install oracle-java7-set-default
[/code]

Verification

[code]
$ java -version
java version &quot;1.7.0_17&quot;
Java(TM) SE Runtime Environment (build 1.7.0_17-b02)
Java HotSpot(TM) 64-Bit Server VM (build 23.7-b01, mixed mode)
[/code]
Thanks to the <a href="http://blog.retep.org/2013/04/13/installing-java-7-on-debian-squeeze/" target="_blank">blog</a> that had this information originally. Please visit them and give them a little link juice. <a href="http://blog.retep.org/2013/04/13/installing-java-7-on-debian-squeeze/" target="_blank">SOURCE</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>436</wp:post_id>
		<wp:post_date><![CDATA[2013-08-26 16:55:50]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-08-27 00:55:50]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-to-install-java-7-on-debian-oracle-sucks]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="command-line-linux"><![CDATA[Command Line]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[java]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="nginx"><![CDATA[nginx]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="server"><![CDATA[server]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[livefyre_version]]></wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>106</wp:comment_id>
			<wp:comment_author><![CDATA[davidpintos]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[davidpintos@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[190.15.201.172]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-12-04 04:35:37]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-12-04 12:35:37]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks Andrew!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_120091936]]></wp:meta_key>
				<wp:meta_value><![CDATA[120091936]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_655335495]]></wp:meta_key>
				<wp:meta_value><![CDATA[655335495]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_655335500]]></wp:meta_key>
				<wp:meta_value><![CDATA[655335500]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>107</wp:comment_id>
			<wp:comment_author><![CDATA[xZero]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[xzero@elite7hackers.us]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.elite7hackers.us/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[78.0.46.100]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-12-08 05:43:51]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-12-08 13:43:51]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You saved my day. Thank you! :)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_120998110]]></wp:meta_key>
				<wp:meta_value><![CDATA[120998110]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_663280665]]></wp:meta_key>
				<wp:meta_value><![CDATA[663280665]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_663280673]]></wp:meta_key>
				<wp:meta_value><![CDATA[663280673]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>110</wp:comment_id>
			<wp:comment_author><![CDATA[smagikern]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[smagikern@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[178.215.98.50]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-12-28 11:48:12]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-12-28 19:48:12]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Cheer]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_699475320]]></wp:meta_key>
				<wp:meta_value><![CDATA[699475320]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_125417081]]></wp:meta_key>
				<wp:meta_value><![CDATA[125417081]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_699475308]]></wp:meta_key>
				<wp:meta_value><![CDATA[699475308]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>121</wp:comment_id>
			<wp:comment_author><![CDATA[tibistibi]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[tibistibi@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[37.153.206.12]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-03-04 05:50:40]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-03-04 13:50:40]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[nice
you can remove the sudo after this 'sudo su -']]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_823902101]]></wp:meta_key>
				<wp:meta_value><![CDATA[823902101]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_823902061]]></wp:meta_key>
				<wp:meta_value><![CDATA[823902061]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_142850874]]></wp:meta_key>
				<wp:meta_value><![CDATA[142850874]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>133</wp:comment_id>
			<wp:comment_author><![CDATA[anupamak]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[aaa@test.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[135.10.193.3]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-07-08 06:47:40]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-07-08 14:47:40]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,
i tried above steps for installing java on debian linux. after steps: sudo apt-get install oracle-java7-installer
i am geting error as- 'E: unable to locate package oracle-java7-installer']]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_185809970]]></wp:meta_key>
				<wp:meta_value><![CDATA[185809970]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_1085871102]]></wp:meta_key>
				<wp:meta_value><![CDATA[1085871102]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_1085871162]]></wp:meta_key>
				<wp:meta_value><![CDATA[1085871162]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>119</wp:comment_id>
			<wp:comment_author><![CDATA[I cannot run java in chromium or iceweasel]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.linuxquestions.org/questions/linux-software-2/i-cannot-run-java-in-chromium-or-iceweasel-4175494316/#post5114939</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[74.86.156.59]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-02-10 05:55:43]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-02-10 13:55:43]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] that is used all over the world. In windows and some other distro&#039;s there is no problem.   http://andrewelkins.com/linux/how-to...-oracle-sucks/  Thx EVO for [...]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1431393122.3866839;s:7:"message";s:41:"ae changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:2:"ae";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>131</wp:comment_id>
			<wp:comment_author><![CDATA[[转载] Debian通过APT安装Oracle Java7 | 三天时空]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://threedays.duapp.com/?p=83</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[61.135.168.22]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-05-20 17:58:14]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-05-21 01:58:14]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] 原文地址：http://andrewelkins.com/linux/how-to-install-java-7-on-debian-oracle-sucks/ [...]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1400637494.594197;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1431393146.0300901;s:7:"message";s:41:"ae changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:2:"ae";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>125</wp:comment_id>
			<wp:comment_author><![CDATA[OliveiraAndrePS]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[andrepsol@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[177.98.16.16]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-03-13 19:11:20]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-03-14 03:11:20]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks!!!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_145601121]]></wp:meta_key>
				<wp:meta_value><![CDATA[145601121]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_840851169]]></wp:meta_key>
				<wp:meta_value><![CDATA[840851169]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_840851184]]></wp:meta_key>
				<wp:meta_value><![CDATA[840851184]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>126</wp:comment_id>
			<wp:comment_author><![CDATA[AndrewElkins]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[accounts@andrewelkins.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[23.240.220.146]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-03-14 07:29:58]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-03-14 15:29:58]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[OliveiraAndrePS  You're welcome]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_145687553]]></wp:meta_key>
				<wp:meta_value><![CDATA[145687553]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_841454913]]></wp:meta_key>
				<wp:meta_value><![CDATA[841454913]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_841454941]]></wp:meta_key>
				<wp:meta_value><![CDATA[841454941]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>127</wp:comment_id>
			<wp:comment_author><![CDATA[AndrewElkins]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[accounts@andrewelkins.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[23.240.220.146]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-03-14 07:30:35]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-03-14 15:30:35]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[tibistibi  I have it just for people that some how leave root after the first part of the instructions.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_145687707]]></wp:meta_key>
				<wp:meta_value><![CDATA[145687707]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_841456036]]></wp:meta_key>
				<wp:meta_value><![CDATA[841456036]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_841456053]]></wp:meta_key>
				<wp:meta_value><![CDATA[841456053]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>128</wp:comment_id>
			<wp:comment_author><![CDATA[olauzirika]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[olauzirika@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[83.213.29.28]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-03-16 01:14:01]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-03-16 09:14:01]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I have this problem:

This is the return:

E: Sub-process /usr/bin/dpkg returned an error code (1)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_146216558]]></wp:meta_key>
				<wp:meta_value><![CDATA[146216558]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_844223155]]></wp:meta_key>
				<wp:meta_value><![CDATA[844223155]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_844223162]]></wp:meta_key>
				<wp:meta_value><![CDATA[844223162]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>129</wp:comment_id>
			<wp:comment_author><![CDATA[AndrewElkins]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[accounts@andrewelkins.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[23.240.220.146]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-03-16 08:36:29]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-03-16 16:36:29]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[olauzirika  Are you on WIndows?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_146301304]]></wp:meta_key>
				<wp:meta_value><![CDATA[146301304]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_844623092]]></wp:meta_key>
				<wp:meta_value><![CDATA[844623092]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_844623106]]></wp:meta_key>
				<wp:meta_value><![CDATA[844623106]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>130</wp:comment_id>
			<wp:comment_author><![CDATA[griadooss]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[griadooss@zimpics.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[123.243.35.205]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-03-17 00:01:03]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-03-17 08:01:03]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[this does not work ... did you try it before re-posting from SOURCE??

######################
sha256sum mismatch jdk-7u51-linux-x64.tar.gz
Oracle JDK 7 is NOT installed.
dpkg: error processing oracle-java7-installer (--configure):
subprocess installed post-installation script returned error exit status 1
Errors were encountered while processing:
 oracle-java7-installer
E: Sub-process /usr/bin/dpkg returned an error code (1)######################]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_146584160]]></wp:meta_key>
				<wp:meta_value><![CDATA[146584160]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_845853909]]></wp:meta_key>
				<wp:meta_value><![CDATA[845853909]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_845853920]]></wp:meta_key>
				<wp:meta_value><![CDATA[845853920]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>144</wp:comment_id>
			<wp:comment_author><![CDATA[NicolasZapata]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nick628@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[190.157.118.150]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-10-14 04:21:58]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-10-14 12:21:58]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_224422202]]></wp:meta_key>
				<wp:meta_value><![CDATA[224422202]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_1345921824]]></wp:meta_key>
				<wp:meta_value><![CDATA[1345921824]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_1345921862]]></wp:meta_key>
				<wp:meta_value><![CDATA[1345921862]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Error starting Tomcat7 “no JDK found – please set JAVA_HOME”</title>
		<link>http://andrewelkins.com/2013/08/26/error-starting-tomcat7-no-jdk-found-please-set-java_home/</link>
		<pubDate>Tue, 27 Aug 2013 01:30:42 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=442</guid>
		<description></description>
		<content:encoded><![CDATA[After I had set JAVA_HOME in the /etc/profile

[code]
export JAVA_HOME=/usr/lib/jvm/java-7-oracle/bin/java
[/code]

But Tomcat wasn't happy with that. So I went to Tomcat configuration directly. File: /etc/default/tomcat7

[code]
$ vim /etc/default/tomcat7
[/code]

[code]
...

# The home directory of the Java development kit (JDK). You need at least
# JDK version 1.5. If JAVA_HOME is not set, some common directories for
# OpenJDK, the Sun JDK, and various J2SE 1.5 versions are tried.
#JAVA_HOME=/usr/lib/jvm/openjdk-6-jdk
JAVA_HOME=/usr/lib/jvm/java-7-oracle

...
[/code]
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>442</wp:post_id>
		<wp:post_date><![CDATA[2013-08-26 17:30:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-08-27 01:30:42]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[error-starting-tomcat7-no-jdk-found-please-set-java_home]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="command-line-linux"><![CDATA[Command Line]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[livefyre_version]]></wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Nagios ping fails</title>
		<link>http://andrewelkins.com/2013/08/28/nagios-ping-fails/</link>
		<pubDate>Wed, 28 Aug 2013 15:59:17 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=445</guid>
		<description></description>
		<content:encoded><![CDATA[I recently setup NagiosXI with their provided amazon ami. It was very simple to setup and everything looked good. Added a couple servers and they all could not be pinged from Nagios. I couldn't ping them from Nagios' ping tool. I could ping them from the command line so I knew it was a configuration error.

First I tried:
[code]
$ /usr/local/nagios/libexec/check_ping -H www.google.com -c 100,90% -w 100,90%
CRITICAL - Network Unreachable (www.google.com)
[/code]

Then I <a href="http://serverfault.com/questions/278196/nagios-bizare-ping-behaviour" target="_blank">saw I needed to add the -4</a> to the command.

[code]
$ sudo vim /usr/local/nagios/etc/commands.cfg
[/code]

Go to line 221 and add the "-4"

[code]
define command {
       command_name                             check_ping
       command_line                             $USER1$/check_ping -4 -H $HOSTADDRESS$ -w $ARG1$ -c $ARG2$ -p 5
}
[/code]

Then you'll need to restart Nagios.

[code]
$ sudo service nagios restart
[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>445</wp:post_id>
		<wp:post_date><![CDATA[2013-08-28 07:59:17]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-08-28 15:59:17]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[nagios-ping-fails]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="command-line-linux"><![CDATA[Command Line]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="category" nicename="nagios"><![CDATA[nagios]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[livefyre_version]]></wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How to install Tomcat7 on Linux Mint</title>
		<link>http://andrewelkins.com/2013/10/24/how-to-install-tomcat7-on-linux-mint/</link>
		<pubDate>Fri, 25 Oct 2013 01:36:13 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=447</guid>
		<description></description>
		<content:encoded><![CDATA[How to install tomcat7 on linux mint is simple.

Run:

[code]
sudo apt-get install tomcat7 tomcat7-admin tomcat7-common
[/code]

That's it.

Now to configure the users for the mangers.

Open the user file.

[code]
sudo vim /etc/tomcat7/tomcat-users.xml
[/code]

Make it look like this:
[code]
&lt;?xml version='1.0' encoding='utf-8'?&gt;
&lt;tomcat-users&gt;

&lt;role rolename=&quot;manager-gui&quot;/&gt;
&lt;role rolename=&quot;manager-script&quot;/&gt;
&lt;role rolename=&quot;manager&quot;/&gt;
&lt;role rolename=&quot;admin-gui&quot;/&gt;
&lt;role rolename=&quot;admin-script&quot;/&gt;
&lt;role rolename=&quot;admin&quot;/&gt;

&lt;user username=&quot;admin&quot; password=&quot;admin&quot; roles=&quot;manager-gui,admin-gui,manager,admin,manager-script,admin-script&quot;/&gt;

&lt;/tomcat-users&gt;

[/code]

Then restart tomcat

[code]
sudo service tomcat7 restart
[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>447</wp:post_id>
		<wp:post_date><![CDATA[2013-10-24 17:36:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-10-25 01:36:13]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-to-install-tomcat7-on-linux-mint]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="command-line-linux"><![CDATA[Command Line]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[livefyre_version]]></wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>159</wp:comment_id>
			<wp:comment_author><![CDATA[moisesAlc]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-07-19 17:29:45]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-07-20 01:29:45]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You're the Man!!!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_2122111452]]></wp:meta_key>
				<wp:meta_value><![CDATA[2122111452]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_2122111431]]></wp:meta_key>
				<wp:meta_value><![CDATA[2122111431]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_348800858]]></wp:meta_key>
				<wp:meta_value><![CDATA[348800858]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Array list of all timezones</title>
		<link>http://andrewelkins.com/2013/11/07/array-list-of-all-timezones/</link>
		<pubDate>Fri, 08 Nov 2013 03:33:30 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=453</guid>
		<description></description>
		<content:encoded><![CDATA[I needed an array of all the timezones so I could insert it in to a database seeder. So I created one off a list from <a href="http://en.wikipedia.org/wiki/List_of_time_zone_abbreviations" target="_blank">wikipedia</a>.

[code]
$timezones = array(
array('abbr'=&gt;'BIT', 'name'=&gt;'Baker Island Time', 'utc'=&gt;'UTC-12'),
array('abbr'=&gt;'NUT', 'name'=&gt;'Niue Time', 'utc'=&gt;'UTC-11'),
array('abbr'=&gt;'SST', 'name'=&gt;'Samoa Standard Time', 'utc'=&gt;'UTC-11'),
array('abbr'=&gt;'CKT', 'name'=&gt;'Cook Island Time', 'utc'=&gt;'UTC-10'),
array('abbr'=&gt;'HAST', 'name'=&gt;'Hawaii-Aleutian Standard Time', 'utc'=&gt;'UTC-10'),
array('abbr'=&gt;'HST', 'name'=&gt;'Hawaii Standard Time', 'utc'=&gt;'UTC-10'),
array('abbr'=&gt;'TAHT', 'name'=&gt;'Tahiti Time', 'utc'=&gt;'UTC-10'),
array('abbr'=&gt;'MART', 'name'=&gt;'Marquesas Islands Time', 'utc'=&gt;'UTC-09:30'),
array('abbr'=&gt;'MIT', 'name'=&gt;'Marquesas Islands Time', 'utc'=&gt;'UTC-09:30'),
array('abbr'=&gt;'AKST', 'name'=&gt;'Alaska Standard Time', 'utc'=&gt;'UTC-09'),
array('abbr'=&gt;'GAMT', 'name'=&gt;'Gambier Islands', 'utc'=&gt;'UTC-09'),
array('abbr'=&gt;'GIT', 'name'=&gt;'Gambier Island Time', 'utc'=&gt;'UTC-09'),
array('abbr'=&gt;'HADT', 'name'=&gt;'Hawaii-Aleutian Daylight Time', 'utc'=&gt;'UTC-09'),
array('abbr'=&gt;'AKDT', 'name'=&gt;'Alaska Daylight Time', 'utc'=&gt;'UTC-08'),
array('abbr'=&gt;'CIST', 'name'=&gt;'Clipperton Island Standard Time', 'utc'=&gt;'UTC-08'),
array('abbr'=&gt;'PST', 'name'=&gt;'Pacific Standard Time (North America)', 'utc'=&gt;'UTC-08'),
array('abbr'=&gt;'MST', 'name'=&gt;'Mountain Standard Time (North America)', 'utc'=&gt;'UTC-07'),
array('abbr'=&gt;'PDT', 'name'=&gt;'Pacific Daylight Time (North America)', 'utc'=&gt;'UTC-07'),
array('abbr'=&gt;'CST', 'name'=&gt;'Central Standard Time (North America)', 'utc'=&gt;'UTC-06'),
array('abbr'=&gt;'EAST', 'name'=&gt;'Easter Island Standard Time', 'utc'=&gt;'UTC-06'),
array('abbr'=&gt;'GALT', 'name'=&gt;'Galapagos Time', 'utc'=&gt;'UTC-06'),
array('abbr'=&gt;'MDT', 'name'=&gt;'Mountain Daylight Time (North America)', 'utc'=&gt;'UTC-06'),
array('abbr'=&gt;'CDT', 'name'=&gt;'Central Daylight Time (North America)', 'utc'=&gt;'UTC-05'),
array('abbr'=&gt;'COT', 'name'=&gt;'Colombia Time', 'utc'=&gt;'UTC-05'),
array('abbr'=&gt;'CST', 'name'=&gt;'Cuba Standard Time', 'utc'=&gt;'UTC-05'),
array('abbr'=&gt;'EASST', 'name'=&gt;'Easter Island Standard Summer Time', 'utc'=&gt;'UTC-05'),
array('abbr'=&gt;'ECT', 'name'=&gt;'Ecuador Time', 'utc'=&gt;'UTC-05'),
array('abbr'=&gt;'EST', 'name'=&gt;'Eastern Standard Time (North America)', 'utc'=&gt;'UTC-05'),
array('abbr'=&gt;'PET', 'name'=&gt;'Peru Time', 'utc'=&gt;'UTC-05'),
array('abbr'=&gt;'VET', 'name'=&gt;'Venezuelan Standard Time', 'utc'=&gt;'UTC-04:30'),
array('abbr'=&gt;'AMT', 'name'=&gt;'Amazon Time (Brazil)[2]', 'utc'=&gt;'UTC-04'),
array('abbr'=&gt;'AST', 'name'=&gt;'Atlantic Standard Time', 'utc'=&gt;'UTC-04'),
array('abbr'=&gt;'BOT', 'name'=&gt;'Bolivia Time', 'utc'=&gt;'UTC-04'),
array('abbr'=&gt;'CDT', 'name'=&gt;'Cuba Daylight Time[3]', 'utc'=&gt;'UTC-04'),
array('abbr'=&gt;'CLT', 'name'=&gt;'Chile Standard Time', 'utc'=&gt;'UTC-04'),
array('abbr'=&gt;'COST', 'name'=&gt;'Colombia Summer Time', 'utc'=&gt;'UTC-04'),
array('abbr'=&gt;'ECT', 'name'=&gt;'Eastern Caribbean Time (does not recognise DST)', 'utc'=&gt;'UTC-04'),
array('abbr'=&gt;'EDT', 'name'=&gt;'Eastern Daylight Time (North America)', 'utc'=&gt;'UTC-04'),
array('abbr'=&gt;'FKT', 'name'=&gt;'Falkland Islands Time', 'utc'=&gt;'UTC-04'),
array('abbr'=&gt;'GYT', 'name'=&gt;'Guyana Time', 'utc'=&gt;'UTC-04'),
array('abbr'=&gt;'PYT', 'name'=&gt;'Paraguay Time (Brazil)[7]', 'utc'=&gt;'UTC-04'),
array('abbr'=&gt;'NST', 'name'=&gt;'Newfoundland Standard Time', 'utc'=&gt;'UTC-03:30'),
array('abbr'=&gt;'NT', 'name'=&gt;'Newfoundland Time', 'utc'=&gt;'UTC-03:30'),
array('abbr'=&gt;'ADT', 'name'=&gt;'Atlantic Daylight Time', 'utc'=&gt;'UTC-03'),
array('abbr'=&gt;'AMST', 'name'=&gt;'Amazon Summer Time (Brazil)[1]', 'utc'=&gt;'UTC-03'),
array('abbr'=&gt;'ART', 'name'=&gt;'Argentina Time', 'utc'=&gt;'UTC-03'),
array('abbr'=&gt;'BRT', 'name'=&gt;'Brasilia Time', 'utc'=&gt;'UTC-03'),
array('abbr'=&gt;'CLST', 'name'=&gt;'Chile Summer Time', 'utc'=&gt;'UTC-03'),
array('abbr'=&gt;'FKST', 'name'=&gt;'Falkland Islands Standard Time', 'utc'=&gt;'UTC-03'),
array('abbr'=&gt;'FKST', 'name'=&gt;'Falkland Islands Summer Time', 'utc'=&gt;'UTC-03'),
array('abbr'=&gt;'GFT', 'name'=&gt;'French Guiana Time', 'utc'=&gt;'UTC-03'),
array('abbr'=&gt;'PMST', 'name'=&gt;'Saint Pierre and Miquelon Standard Time', 'utc'=&gt;'UTC-03'),
array('abbr'=&gt;'PYST', 'name'=&gt;'Paraguay Summer Time (Brazil)', 'utc'=&gt;'UTC-03'),
array('abbr'=&gt;'ROTT', 'name'=&gt;'Rothera Research Station Time', 'utc'=&gt;'UTC-03'),
array('abbr'=&gt;'SRT', 'name'=&gt;'Suriname Time', 'utc'=&gt;'UTC-03'),
array('abbr'=&gt;'UYT', 'name'=&gt;'Uruguay Standard Time', 'utc'=&gt;'UTC-03'),
array('abbr'=&gt;'NDT', 'name'=&gt;'Newfoundland Daylight Time', 'utc'=&gt;'UTC-02:30'),
array('abbr'=&gt;'FNT', 'name'=&gt;'Fernando de Noronha Time', 'utc'=&gt;'UTC-02'),
array('abbr'=&gt;'GST', 'name'=&gt;'South Georgia and the South Sandwich Islands', 'utc'=&gt;'UTC-02'),
array('abbr'=&gt;'PMDT', 'name'=&gt;'Saint Pierre and Miquelon Daylight time', 'utc'=&gt;'UTC-02'),
array('abbr'=&gt;'UYST', 'name'=&gt;'Uruguay Summer Time', 'utc'=&gt;'UTC-02'),
array('abbr'=&gt;'AZOST', 'name'=&gt;'Azores Standard Time', 'utc'=&gt;'UTC-01'),
array('abbr'=&gt;'CVT', 'name'=&gt;'Cape Verde Time', 'utc'=&gt;'UTC-01'),
array('abbr'=&gt;'EGT', 'name'=&gt;'Eastern Greenland Time', 'utc'=&gt;'UTC-01'),
array('abbr'=&gt;'GMT', 'name'=&gt;'Greenwich Mean Time', 'utc'=&gt;'UTC'),
array('abbr'=&gt;'UCT', 'name'=&gt;'Coordinated Universal Time', 'utc'=&gt;'UTC'),
array('abbr'=&gt;'UTC', 'name'=&gt;'Coordinated Universal Time', 'utc'=&gt;'UTC'),
array('abbr'=&gt;'WET', 'name'=&gt;'Western European Time', 'utc'=&gt;'UTC'),
array('abbr'=&gt;'Z', 'name'=&gt;'Zulu Time (Coordinated Universal Time)', 'utc'=&gt;'UTC'),
array('abbr'=&gt;'EGST', 'name'=&gt;'Eastern Greenland Summer Time', 'utc'=&gt;'UTC+00'),
array('abbr'=&gt;'BST', 'name'=&gt;'British Summer Time (British Standard Time from Feb 1968 to Oct 1971)', 'utc'=&gt;'UTC+01'),
array('abbr'=&gt;'CET', 'name'=&gt;'Central European Time', 'utc'=&gt;'UTC+01'),
array('abbr'=&gt;'DFT', 'name'=&gt;'AIX specific equivalent of Central European Time', 'utc'=&gt;'UTC+01'),
array('abbr'=&gt;'IST', 'name'=&gt;'Irish Standard Time', 'utc'=&gt;'UTC+01'),
array('abbr'=&gt;'MET', 'name'=&gt;'Middle European Time Same zone as CET', 'utc'=&gt;'UTC+01'),
array('abbr'=&gt;'WAT', 'name'=&gt;'West Africa Time', 'utc'=&gt;'UTC+01'),
array('abbr'=&gt;'WEDT', 'name'=&gt;'Western European Daylight Time', 'utc'=&gt;'UTC+01'),
array('abbr'=&gt;'WEST', 'name'=&gt;'Western European Summer Time', 'utc'=&gt;'UTC+01'),
array('abbr'=&gt;'CAT', 'name'=&gt;'Central Africa Time', 'utc'=&gt;'UTC+02'),
array('abbr'=&gt;'CEDT', 'name'=&gt;'Central European Daylight Time', 'utc'=&gt;'UTC+02'),
array('abbr'=&gt;'CEST', 'name'=&gt;'Central European Summer Time (Cf. HAEC)', 'utc'=&gt;'UTC+02'),
array('abbr'=&gt;'EET', 'name'=&gt;'Eastern European Time', 'utc'=&gt;'UTC+02'),
array('abbr'=&gt;'HAEC', 'name'=&gt;'Heure Avancée d'Europe Centrale francised name for CEST', 'utc'=&gt;'UTC+02'),
array('abbr'=&gt;'IST', 'name'=&gt;'Israel Standard Time', 'utc'=&gt;'UTC+02'),
array('abbr'=&gt;'MEST', 'name'=&gt;'Middle European Saving Time Same zone as CEST', 'utc'=&gt;'UTC+02'),
array('abbr'=&gt;'SAST', 'name'=&gt;'South African Standard Time', 'utc'=&gt;'UTC+02'),
array('abbr'=&gt;'WAST', 'name'=&gt;'West Africa Summer Time', 'utc'=&gt;'UTC+02'),
array('abbr'=&gt;'AST', 'name'=&gt;'Arabia Standard Time', 'utc'=&gt;'UTC+03'),
array('abbr'=&gt;'EAT', 'name'=&gt;'East Africa Time', 'utc'=&gt;'UTC+03'),
array('abbr'=&gt;'EEDT', 'name'=&gt;'Eastern European Daylight Time', 'utc'=&gt;'UTC+03'),
array('abbr'=&gt;'EEST', 'name'=&gt;'Eastern European Summer Time', 'utc'=&gt;'UTC+03'),
array('abbr'=&gt;'FET', 'name'=&gt;'Further-eastern European Time', 'utc'=&gt;'UTC+03'),
array('abbr'=&gt;'IDT', 'name'=&gt;'Israel Daylight Time', 'utc'=&gt;'UTC+03'),
array('abbr'=&gt;'IOT', 'name'=&gt;'Indian Ocean Time', 'utc'=&gt;'UTC+03'),
array('abbr'=&gt;'SYOT', 'name'=&gt;'Showa Station Time', 'utc'=&gt;'UTC+03'),
array('abbr'=&gt;'IRST', 'name'=&gt;'Iran Standard Time', 'utc'=&gt;'UTC+03:30'),
array('abbr'=&gt;'AMT', 'name'=&gt;'Armenia Time', 'utc'=&gt;'UTC+04'),
array('abbr'=&gt;'AZT', 'name'=&gt;'Azerbaijan Time', 'utc'=&gt;'UTC+04'),
array('abbr'=&gt;'GET', 'name'=&gt;'Georgia Standard Time', 'utc'=&gt;'UTC+04'),
array('abbr'=&gt;'GST', 'name'=&gt;'Gulf Standard Time', 'utc'=&gt;'UTC+04'),
array('abbr'=&gt;'MSK', 'name'=&gt;'Moscow Time', 'utc'=&gt;'UTC+04'),
array('abbr'=&gt;'MUT', 'name'=&gt;'Mauritius Time', 'utc'=&gt;'UTC+04'),
array('abbr'=&gt;'RET', 'name'=&gt;'Réunion Time', 'utc'=&gt;'UTC+04'),
array('abbr'=&gt;'SAMT', 'name'=&gt;'Samara Time', 'utc'=&gt;'UTC+04'),
array('abbr'=&gt;'SCT', 'name'=&gt;'Seychelles Time', 'utc'=&gt;'UTC+04'),
array('abbr'=&gt;'VOLT', 'name'=&gt;'Volgograd Time', 'utc'=&gt;'UTC+04'),
array('abbr'=&gt;'AFT', 'name'=&gt;'Afghanistan Time', 'utc'=&gt;'UTC+04:30'),
array('abbr'=&gt;'AMST', 'name'=&gt;'Armenia Summer Time', 'utc'=&gt;'UTC+05'),
array('abbr'=&gt;'HMT', 'name'=&gt;'Heard and McDonald Islands Time', 'utc'=&gt;'UTC+05'),
array('abbr'=&gt;'MAWT', 'name'=&gt;'Mawson Station Time', 'utc'=&gt;'UTC+05'),
array('abbr'=&gt;'MVT', 'name'=&gt;'Maldives Time', 'utc'=&gt;'UTC+05'),
array('abbr'=&gt;'ORAT', 'name'=&gt;'Oral Time', 'utc'=&gt;'UTC+05'),
array('abbr'=&gt;'PKT', 'name'=&gt;'Pakistan Standard Time', 'utc'=&gt;'UTC+05'),
array('abbr'=&gt;'TFT', 'name'=&gt;'Indian/Kerguelen', 'utc'=&gt;'UTC+05'),
array('abbr'=&gt;'TJT', 'name'=&gt;'Tajikistan Time', 'utc'=&gt;'UTC+05'),
array('abbr'=&gt;'TMT', 'name'=&gt;'Turkmenistan Time', 'utc'=&gt;'UTC+05'),
array('abbr'=&gt;'UZT', 'name'=&gt;'Uzbekistan Time', 'utc'=&gt;'UTC+05'),
array('abbr'=&gt;'IST', 'name'=&gt;'Indian Standard Time', 'utc'=&gt;'UTC+05:30'),
array('abbr'=&gt;'SLST', 'name'=&gt;'Sri Lanka Time', 'utc'=&gt;'UTC+05:30'),
array('abbr'=&gt;'NPT', 'name'=&gt;'Nepal Time', 'utc'=&gt;'UTC+05:45'),
array('abbr'=&gt;'BIOT', 'name'=&gt;'British Indian Ocean Time', 'utc'=&gt;'UTC+06'),
array('abbr'=&gt;'BST', 'name'=&gt;'Bangladesh Standard Time', 'utc'=&gt;'UTC+06'),
array('abbr'=&gt;'BTT', 'name'=&gt;'Bhutan Time', 'utc'=&gt;'UTC+06'),
array('abbr'=&gt;'KGT', 'name'=&gt;'Kyrgyzstan time', 'utc'=&gt;'UTC+06'),
array('abbr'=&gt;'VOST', 'name'=&gt;'Vostok Station Time', 'utc'=&gt;'UTC+06'),
array('abbr'=&gt;'YEKT', 'name'=&gt;'Yekaterinburg Time', 'utc'=&gt;'UTC+06'),
array('abbr'=&gt;'CCT', 'name'=&gt;'Cocos Islands Time', 'utc'=&gt;'UTC+06:30'),
array('abbr'=&gt;'MMT', 'name'=&gt;'Myanmar Time', 'utc'=&gt;'UTC+06:30'),
array('abbr'=&gt;'MST', 'name'=&gt;'Myanmar Standard Time', 'utc'=&gt;'UTC+06:30'),
array('abbr'=&gt;'CXT', 'name'=&gt;'Christmas Island Time', 'utc'=&gt;'UTC+07'),
array('abbr'=&gt;'DAVT', 'name'=&gt;'Davis Time', 'utc'=&gt;'UTC+07'),
array('abbr'=&gt;'HOVT', 'name'=&gt;'Khovd Time', 'utc'=&gt;'UTC+07'),
array('abbr'=&gt;'ICT', 'name'=&gt;'Indochina Time', 'utc'=&gt;'UTC+07'),
array('abbr'=&gt;'KRAT', 'name'=&gt;'Krasnoyarsk Time', 'utc'=&gt;'UTC+07'),
array('abbr'=&gt;'OMST', 'name'=&gt;'Omsk Time', 'utc'=&gt;'UTC+07'),
array('abbr'=&gt;'THA', 'name'=&gt;'Thailand Standard Time', 'utc'=&gt;'UTC+07'),
array('abbr'=&gt;'ACT', 'name'=&gt;'ASEAN Common Time', 'utc'=&gt;'UTC+08'),
array('abbr'=&gt;'AWST', 'name'=&gt;'Australian Western Standard Time', 'utc'=&gt;'UTC+08'),
array('abbr'=&gt;'BDT', 'name'=&gt;'Brunei Time', 'utc'=&gt;'UTC+08'),
array('abbr'=&gt;'CHOT', 'name'=&gt;'Choibalsan', 'utc'=&gt;'UTC+08'),
array('abbr'=&gt;'CIT', 'name'=&gt;'Central Indonesia Time', 'utc'=&gt;'UTC+08'),
array('abbr'=&gt;'CST', 'name'=&gt;'China Standard Time', 'utc'=&gt;'UTC+08'),
array('abbr'=&gt;'CT', 'name'=&gt;'China time', 'utc'=&gt;'UTC+08'),
array('abbr'=&gt;'HKT', 'name'=&gt;'Hong Kong Time', 'utc'=&gt;'UTC+08'),
array('abbr'=&gt;'IRDT', 'name'=&gt;'Iran Daylight Time', 'utc'=&gt;'UTC+08'),
array('abbr'=&gt;'MST', 'name'=&gt;'Malaysia Standard Time', 'utc'=&gt;'UTC+08'),
array('abbr'=&gt;'MYT', 'name'=&gt;'Malaysia Time', 'utc'=&gt;'UTC+08'),
array('abbr'=&gt;'PHT', 'name'=&gt;'Philippine Time', 'utc'=&gt;'UTC+08'),
array('abbr'=&gt;'SGT', 'name'=&gt;'Singapore Time', 'utc'=&gt;'UTC+08'),
array('abbr'=&gt;'SST', 'name'=&gt;'Singapore Standard Time', 'utc'=&gt;'UTC+08'),
array('abbr'=&gt;'ULAT', 'name'=&gt;'Ulaanbaatar Time', 'utc'=&gt;'UTC+08'),
array('abbr'=&gt;'WST', 'name'=&gt;'Western Standard Time', 'utc'=&gt;'UTC+08'),
array('abbr'=&gt;'CWST', 'name'=&gt;'Central Western Standard Time (Australia)', 'utc'=&gt;'UTC+08:45'),
array('abbr'=&gt;'AWDT', 'name'=&gt;'Australian Western Daylight Time', 'utc'=&gt;'UTC+09'),
array('abbr'=&gt;'EIT', 'name'=&gt;'Eastern Indonesian Time', 'utc'=&gt;'UTC+09'),
array('abbr'=&gt;'IRKT', 'name'=&gt;'Irkutsk Time', 'utc'=&gt;'UTC+09'),
array('abbr'=&gt;'JST', 'name'=&gt;'Japan Standard Time', 'utc'=&gt;'UTC+09'),
array('abbr'=&gt;'KST', 'name'=&gt;'Korea Standard Time', 'utc'=&gt;'UTC+09'),
array('abbr'=&gt;'TLT', 'name'=&gt;'Timor Leste Time', 'utc'=&gt;'UTC+09'),
array('abbr'=&gt;'ACST', 'name'=&gt;'Australian Central Standard Time', 'utc'=&gt;'UTC+09:30'),
array('abbr'=&gt;'CST', 'name'=&gt;'Central Standard Time (Australia)', 'utc'=&gt;'UTC+09:30'),
array('abbr'=&gt;'AEST', 'name'=&gt;'Australian Eastern Standard Time', 'utc'=&gt;'UTC+10'),
array('abbr'=&gt;'ChST', 'name'=&gt;'Chamorro Standard Time', 'utc'=&gt;'UTC+10'),
array('abbr'=&gt;'CHUT', 'name'=&gt;'Chuuk Time', 'utc'=&gt;'UTC+10'),
array('abbr'=&gt;'DDUT', 'name'=&gt;'Dumont d'Urville Time', 'utc'=&gt;'UTC+10'),
array('abbr'=&gt;'EST', 'name'=&gt;'Eastern Standard Time (Australia)', 'utc'=&gt;'UTC+10'),
array('abbr'=&gt;'PGT', 'name'=&gt;'Papua New Guinea Time', 'utc'=&gt;'UTC+10'),
array('abbr'=&gt;'VLAT', 'name'=&gt;'Vladivostok Time', 'utc'=&gt;'UTC+10'),
array('abbr'=&gt;'YAKT', 'name'=&gt;'Yakutsk Time', 'utc'=&gt;'UTC+10'),
array('abbr'=&gt;'ACDT', 'name'=&gt;'Australian Central Daylight Time', 'utc'=&gt;'UTC+10:30'),
array('abbr'=&gt;'CST', 'name'=&gt;'Central Summer Time (Australia)', 'utc'=&gt;'UTC+10:30'),
array('abbr'=&gt;'LHST', 'name'=&gt;'Lord Howe Standard Time', 'utc'=&gt;'UTC+10:30'),
array('abbr'=&gt;'AEDT', 'name'=&gt;'Australian Eastern Daylight Time', 'utc'=&gt;'UTC+11'),
array('abbr'=&gt;'KOST', 'name'=&gt;'Kosrae Time', 'utc'=&gt;'UTC+11'),
array('abbr'=&gt;'LHST', 'name'=&gt;'Lord Howe Summer Time', 'utc'=&gt;'UTC+11'),
array('abbr'=&gt;'MIST', 'name'=&gt;'Macquarie Island Station Time', 'utc'=&gt;'UTC+11'),
array('abbr'=&gt;'NCT', 'name'=&gt;'New Caledonia Time', 'utc'=&gt;'UTC+11'),
array('abbr'=&gt;'PONT', 'name'=&gt;'Pohnpei Standard Time', 'utc'=&gt;'UTC+11'),
array('abbr'=&gt;'SAKT', 'name'=&gt;'Sakhalin Island time', 'utc'=&gt;'UTC+11'),
array('abbr'=&gt;'SBT', 'name'=&gt;'Solomon Islands Time', 'utc'=&gt;'UTC+11'),
array('abbr'=&gt;'VUT', 'name'=&gt;'Vanuatu Time', 'utc'=&gt;'UTC+11'),
array('abbr'=&gt;'NFT', 'name'=&gt;'Norfolk Time', 'utc'=&gt;'UTC+11:30'),
array('abbr'=&gt;'FJT', 'name'=&gt;'Fiji Time', 'utc'=&gt;'UTC+12'),
array('abbr'=&gt;'GILT', 'name'=&gt;'Gilbert Island Time', 'utc'=&gt;'UTC+12'),
array('abbr'=&gt;'MAGT', 'name'=&gt;'Magadan Time', 'utc'=&gt;'UTC+12'),
array('abbr'=&gt;'MHT', 'name'=&gt;'Marshall Islands', 'utc'=&gt;'UTC+12'),
array('abbr'=&gt;'NZST', 'name'=&gt;'New Zealand Standard Time', 'utc'=&gt;'UTC+12'),
array('abbr'=&gt;'PETT', 'name'=&gt;'Kamchatka Time', 'utc'=&gt;'UTC+12'),
array('abbr'=&gt;'TVT', 'name'=&gt;'Tuvalu Time', 'utc'=&gt;'UTC+12'),
array('abbr'=&gt;'WAKT', 'name'=&gt;'Wake Island Time', 'utc'=&gt;'UTC+12'),
array('abbr'=&gt;'CHAST', 'name'=&gt;'Chatham Standard Time', 'utc'=&gt;'UTC+12:45'),
array('abbr'=&gt;'NZDT', 'name'=&gt;'New Zealand Daylight Time', 'utc'=&gt;'UTC+13'),
array('abbr'=&gt;'PHOT', 'name'=&gt;'Phoenix Island Time', 'utc'=&gt;'UTC+13'),
array('abbr'=&gt;'TOT', 'name'=&gt;'Tonga Time', 'utc'=&gt;'UTC+13'),
array('abbr'=&gt;'CHADT', 'name'=&gt;'Chatham Daylight Time', 'utc'=&gt;'UTC+13:45'),
array('abbr'=&gt;'LINT', 'name'=&gt;'Line Islands Time', 'utc'=&gt;'UTC+14'),
array('abbr'=&gt;'TKT', 'name'=&gt;'Tokelau Time', 'utc'=&gt;'UTC+14'),
);
[/code]


Excel: <a href="http://andrewelkins.com/wp-content/uploads/2013/11/Timezone.xlsx">(Download)</a>
TXT Flat File: <a href="http://andrewelkins.com/wp-content/uploads/2013/11/timezones.txt">(Download)</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>453</wp:post_id>
		<wp:post_date><![CDATA[2013-11-07 19:33:30]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-11-08 03:33:30]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[array-list-of-all-timezones]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="array"><![CDATA[array]]></category>
		<category domain="post_tag" nicename="laravel"><![CDATA[laravel]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_tag" nicename="php-2"><![CDATA[php]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="timezones"><![CDATA[timezones]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Design and Implementation of a Flexible Application Architecture</title>
		<link>http://andrewelkins.com/2013/12/11/design-and-implementation-of-a-flexible-application-architecture/</link>
		<pubDate>Wed, 11 Dec 2013 19:20:50 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=466</guid>
		<description></description>
		<content:encoded><![CDATA[Here's a link to the talk I gave at LAPHP meetup on creating a flexible application architecture using Laravel 4.

The talk was based around principles of a SOLID architecture. Then going through how it might be applied to a Laravel 4 application.

&nbsp;
<iframe src="http://prezi.com/embed/mfcjjrngoi8h/?bgcolor=ffffff&amp;lock_to_path=1&amp;autoplay=0&amp;autohide_ctrls=0&amp;features=undefined&amp;disabled_features=undefined" width="550" height="400" frameBorder="0"></iframe>

<a href="http://prezi.com/mfcjjrngoi8h/?utm_campaign=share&amp;utm_medium=copy" target="_blank">Here's the talk</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>466</wp:post_id>
		<wp:post_date><![CDATA[2013-12-11 11:20:50]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-12-11 19:20:50]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[design-and-implementation-of-a-flexible-application-architecture]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How to specify a different git port</title>
		<link>http://andrewelkins.com/2014/01/03/how-to-specify-a-different-git-port/</link>
		<pubDate>Fri, 03 Jan 2014 19:09:48 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=471</guid>
		<description></description>
		<content:encoded><![CDATA[I needed to figure out how to specify a different ssh port for git. Turns out it's very easy.

Open up your ssh config file.

[code]
vim /home/your-user-name/.ssh/config
[/code] 

Add a new configuration declaration


[code]
Host git.example.org
     User your-user-name
     Port 22222
[/code] 

Save the new config and try that git clone again. It should work this time.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>471</wp:post_id>
		<wp:post_date><![CDATA[2014-01-03 11:09:48]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-01-03 19:09:48]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-to-specify-a-different-git-port]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="command-line-linux"><![CDATA[Command Line]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Install VirtualBox Guest Additions Command Line</title>
		<link>http://andrewelkins.com/2014/03/08/install-virtualbox-guest-additions-command-line/</link>
		<pubDate>Sat, 08 Mar 2014 21:46:46 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=473</guid>
		<description></description>
		<content:encoded><![CDATA[I was digging around searching on how to install the VirtualBox Guest additions without the GUI using the command line. Most of the tutorials out there were of no help. Either with bad or outdated information. I found one article on <a href="http://xmodulo.com/2013/07/how-to-install-virtualbox-guest-additions-for-linux.html" target="_blank">xmodulo</a> that worked for me.

Here's the steps I followed for my Ubuntu Server VM.

First downloaded the vbox guest addition. Replace X.X.X with your version. You can find that by going to the about within your virtual box install.

[code]wget http://download.virtualbox.org/virtualbox/X.X.X/VBoxGuestAdditions_X.X.X.iso[/code]

Then install the packages that is requires.

[code]sudo apt-get install dkms gcc [/code]

Then mount.

[code]sudo mount -o loop VBoxGuestAdditions_4.2.16.iso /mnt
cd /mnt 
[/code]

and Install

[code]sudo ./VBoxLinuxAdditions.run [/code]

Visit the <a href="http://xmodulo.com/2013/07/how-to-install-virtualbox-guest-additions-for-linux.html" target="_blank">Source</a> for additional information and how to on other distros.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>473</wp:post_id>
		<wp:post_date><![CDATA[2014-03-08 13:46:46]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-03-08 21:46:46]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[install-virtualbox-guest-additions-command-line]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="command-line-linux"><![CDATA[Command Line]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How to mount an additional Elastic Block Store Linux</title>
		<link>http://andrewelkins.com/2014/03/10/how-to-mount-an-additional-elastic-block-store-linux/</link>
		<pubDate>Mon, 10 Mar 2014 18:58:13 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=477</guid>
		<description></description>
		<content:encoded><![CDATA[I needed to add an elastic block store to a Ubuntu Linux Server. I created the instance from with the <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-creating-volume.html" target="_blank">AWS admin console</a>. What was missing was how to have the Ubuntu instance recognize it. Turns out it is fairly simple. Format, and mount.

<strong>Mount</strong>

SSH into the instance and become root.

[code]
$ ssh ubuntu@my-server
$ sudo su
[/code]

Find the new volume's name
[code]
$ fdisk -l

Disk /dev/xvda1: 8589 MB, 8589934592 bytes
255 heads, 63 sectors/track, 1044 cylinders, total 16777216 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x00000000

Disk /dev/xvda1 doesn't contain a valid partition table

Disk /dev/xvdf: 107.4 GB, 107374182400 bytes
255 heads, 63 sectors/track, 13054 cylinders, total 209715200 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x00000000

Disk /dev/xvdf doesn't contain a valid partition table

[/code]

In my case it's "/dev/xvdf"

We'll need to format the volume.

[code]
$ mkfs -t ext3 /dev/xvdf

mke2fs 1.42 (29-Nov-2011)
Filesystem label=
OS type: Linux
Block size=4096 (log=2)
Fragment size=4096 (log=2)
Stride=0 blocks, Stripe width=0 blocks
6553600 inodes, 26214400 blocks
1310720 blocks (5.00%) reserved for the super user
First data block=0
Maximum filesystem blocks=4294967296
800 block groups
32768 blocks per group, 32768 fragments per group
8192 inodes per group
Superblock backups stored on blocks: 
	32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208, 
	4096000, 7962624, 11239424, 20480000, 23887872

Allocating group tables: done                            
Writing inode tables: done                            
Creating journal (32768 blocks): done
Writing superblocks and filesystem accounting information: done  
[/code]

Now to mount it

[code]
$ mkdir /mnt/ebs-volume-1
$ mount /dev/xvdf /mnt/ebs-volume-1/
[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>477</wp:post_id>
		<wp:post_date><![CDATA[2014-03-10 10:58:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-03-10 18:58:13]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-to-mount-an-additional-elastic-block-store-linux]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="aws"><![CDATA[AWS]]></category>
		<category domain="category" nicename="command-line-linux"><![CDATA[Command Line]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Add swap file in linux on debian</title>
		<link>http://andrewelkins.com/2014/03/11/add-swap-file-in-linux-on-debian/</link>
		<pubDate>Tue, 11 Mar 2014 17:02:38 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=480</guid>
		<description></description>
		<content:encoded><![CDATA[How to add a swap file to an existing file system is almost trivial.

First decide how big you want it. I choose 1GB w/ a 1GB RAM machine.

Second create the file.
[code]
dd if=/dev/zero of=/swapfile bs=1024 count=1048576
[/code]

Next make it a swap.
[code]
mkswap /swapfile
[/code]

Add it as a swap.
[code]
swapon /swapfile
[/code]

Edit fstab.
[code]
vim /etc/fstab
[/code]

Add

[code]
/swapfile       none    swap    sw      0       0
[/code]

Save and verify output
[code]
/swapfile       none    swap    sw      0       0
[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>480</wp:post_id>
		<wp:post_date><![CDATA[2014-03-11 09:02:38]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-03-11 17:02:38]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[add-swap-file-in-linux-on-debian]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="command-line-linux"><![CDATA[Command Line]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How to change a users shell to bash</title>
		<link>http://andrewelkins.com/2014/03/29/how-to-change-a-users-shell-to-bash/</link>
		<pubDate>Sun, 30 Mar 2014 04:42:40 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=487</guid>
		<description></description>
		<content:encoded><![CDATA[How to change a user's shell to bash is a simple one liner. This is how you can do it in debian or ubuntu.

[code]
chsh -s /bin/bash username
[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>487</wp:post_id>
		<wp:post_date><![CDATA[2014-03-29 20:42:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-03-30 04:42:40]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-to-change-a-users-shell-to-bash]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="command-line-linux"><![CDATA[Command Line]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How to run ghost in the background</title>
		<link>http://andrewelkins.com/2014/04/03/how-to-run-ghost-in-the-background/</link>
		<pubDate>Fri, 04 Apr 2014 01:21:17 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=492</guid>
		<description></description>
		<content:encoded><![CDATA[For running ghost blog in the background manually, execute the following within your blog directory.

[code]
cd /path/to/your/install/
nohup npm start &lt;/dev/null 1&gt;/path/to/your/install/logs/stdout.log 2&gt;/path/to/your/install/logs/stderr.log &amp;
[/code]

I perfer to run ghost in the background by using Supervisor.

First install supervisor
[code]
apt-get install supervisor
[/code]

Make sure it's running
[code]
sudo service supervisor start
[/code]

Create the config file
[code]
vim /etc/supervisor/conf.d/ghost.conf
[/code]

[code]
[program:ghost]
command = node /path/to/ghost/index.js
directory = /path/to/ghost
user = ghost
autostart = true
autorestart = true
stdout_logfile = /var/log/supervisor/ghost.log
stderr_logfile = /var/log/supervisor/ghost_err.log
environment = NODE_ENV=&quot;production&quot;
[/code]

Start Ghost
[code]
supervisorctl start ghost
[/code]

*EDIT*

I've switched to use the npm package Forever.

To install forever type 
[code]npm install forever -g[/code]
To start Ghost using forever from the Ghost installation directory type 
[code]NODE_ENV=production forever start index.js[/code]
To stop Ghost type 
[code]forever stop index.js[/code]
To check if Ghost is currently running type 
[code]forever list[/code]

Sources:
Supervisor information from <a href="http://docs.ghost.org/installation/deploy/" target="_blank">ghost documentation</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>492</wp:post_id>
		<wp:post_date><![CDATA[2014-04-03 17:21:17]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-04-04 01:21:17]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-to-run-ghost-in-the-background]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="command-line-linux"><![CDATA[Command Line]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Asus boot usb </title>
		<link>http://andrewelkins.com/2014/04/10/asus-boot-usb/</link>
		<pubDate>Thu, 10 Apr 2014 17:50:40 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=496</guid>
		<description></description>
		<content:encoded><![CDATA[I needed to reinstall Lint Mint on my Asus Laptop. I couldn't figure out how to boot to usb. Turns out it's a tricky procedure. 

<ul>
	<li>Have your USB drive plugged in</li>
	<li>Turn the Zenbook on</li>
	<li>Enter UEFI by pounding on the esc key</li>
	<li>Arrow to the right to the "Boot" tab</li>
	<li>Press F10, choose "save & exit"</li>
	<li>I'll reboot. Once it begins, immediately pound on esc again</li>
	<li>Arrow over to the "Boot" tab. USB drive should be listed. Switch order if needed.</li>
	<li>Press F10, choose "save & exit"</li>
</ul>

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>496</wp:post_id>
		<wp:post_date><![CDATA[2014-04-10 09:50:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-04-10 17:50:40]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[asus-boot-usb]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="command-line-linux"><![CDATA[Command Line]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How to check number of mysql connections on linux</title>
		<link>http://andrewelkins.com/2014/04/14/how-to-check-number-of-mysql-connections-on-linux/</link>
		<pubDate>Mon, 14 Apr 2014 16:54:20 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=498</guid>
		<description></description>
		<content:encoded><![CDATA[I needed to check how many mysql connections my application currently had. Not from the mysql side but from the application linux server. To do so I checked how many connections where on the mysql port (3306).

[code]
netstat -antp | grep :3306 | wc -l
[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>498</wp:post_id>
		<wp:post_date><![CDATA[2014-04-14 08:54:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-04-14 16:54:20]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-to-check-number-of-mysql-connections-on-linux]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="command-line-linux"><![CDATA[Command Line]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How to create a PGP key on linux</title>
		<link>http://andrewelkins.com/2014/04/23/how-to-create-a-pgp-key-on-linux/</link>
		<pubDate>Wed, 23 Apr 2014 16:26:04 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=500</guid>
		<description></description>
		<content:encoded><![CDATA[First you'll want to create your key.

[code]
gpg --gen-key
[/code]

Then ascii armor it for sharing.

[code]
gpg --armor --export user@example.com
[/code]

You can view your keys by using the list command.

[code]
gpg --list-keys
[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>500</wp:post_id>
		<wp:post_date><![CDATA[2014-04-23 08:26:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-04-23 16:26:04]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-to-create-a-pgp-key-on-linux]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="command-line-linux"><![CDATA[Command Line]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How to do decrypt a pgp message</title>
		<link>http://andrewelkins.com/2014/04/25/how-to-do-decrypt-a-pgp-message/</link>
		<pubDate>Fri, 25 Apr 2014 16:59:10 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=502</guid>
		<description></description>
		<content:encoded><![CDATA[After sending my public pgp key and getting an encoded message back. I need to decrypt a pgp message.

I made a pgp file by opening a text editor and saving it as "mypgpfile.pgp"

[code]
gpg -o output.txt mypgpfile.pgp
[/code]

The breakdown:
gpg - the command to encode/decode pgp on linux. Package may need to be installed.
-o - specifies the output file
output.txt - the output filename
mypgpfile.pgp - the input encoded message]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>502</wp:post_id>
		<wp:post_date><![CDATA[2014-04-25 08:59:10]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-04-25 16:59:10]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-to-do-decrypt-a-pgp-message]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="command-line-linux"><![CDATA[Command Line]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How to watch nbc extra live on linux</title>
		<link>http://andrewelkins.com/2014/04/27/how-to-watch-nbc-extra-live-on-linux/</link>
		<pubDate>Sun, 27 Apr 2014 20:48:04 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=504</guid>
		<description></description>
		<content:encoded><![CDATA[How to watch nbc extra live on linux is simple. It just requires adding a flash plugin.

[code]
apt-get install adobe-flash
[/code]

This can also be installed via the software manager. Just search for "flash".]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>504</wp:post_id>
		<wp:post_date><![CDATA[2014-04-27 12:48:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-04-27 20:48:04]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-to-watch-nbc-extra-live-on-linux]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How to use load data from s3 in to elastic map reduce</title>
		<link>http://andrewelkins.com/2014/05/14/how-to-use-load-data-from-s3-in-to-elastic-map-reduce/</link>
		<pubDate>Thu, 15 May 2014 01:48:47 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=506</guid>
		<description></description>
		<content:encoded><![CDATA[How to load data from s3 in to Amazon Elastic Map Reduce is fairly easy. The trick is to use s3n or s3 at the data source.

[code]
A = LOAD 's3n://AWSKEY:AWSTOKEN@your-s3-bucket/file-name*' as (col1:chararray, col12:chararray, col3:chararray, [...]);
[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>506</wp:post_id>
		<wp:post_date><![CDATA[2014-05-14 17:48:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-05-15 01:48:47]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-to-use-load-data-from-s3-in-to-elastic-map-reduce]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="command-line-linux"><![CDATA[Command Line]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="category" nicename="pig"><![CDATA[pig]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How to format hdfs in AWS Elastic Map Reduce</title>
		<link>http://andrewelkins.com/2014/07/08/how-to-format-hdfs-in-aws-elastic-map-reduce/</link>
		<pubDate>Tue, 08 Jul 2014 15:57:12 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=508</guid>
		<description></description>
		<content:encoded><![CDATA[It's insanely simple. Connect to your master node within AWS Elastic Map Reduce. Then you'll want to connect to the hadoop cluster and reset the NameNode file handlers.

[code]
hadoop namenode -format
[/code]

That's it. That's how you format the hdfs file system.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>508</wp:post_id>
		<wp:post_date><![CDATA[2014-07-08 07:57:12]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-07-08 15:57:12]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-to-format-hdfs-in-aws-elastic-map-reduce]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="command-line-linux"><![CDATA[Command Line]]></category>
		<category domain="category" nicename="hadoop"><![CDATA[hadoop]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>October CMS set preview post length</title>
		<link>http://andrewelkins.com/2014/10/07/october-cms-set-preview-post-length/</link>
		<pubDate>Tue, 07 Oct 2014 17:05:56 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=515</guid>
		<description></description>
		<content:encoded><![CDATA[October CMS is a brilliant new developer focused CMS. It reminds me of working on XenForo in it's ease of creating add-ons. A very nice system.

After configuring the blog I needed to limit the post except size for post that didn't have an except. This meant shrinking the normal content on category list view and post list view. It turned out to be simple.

First open both the blog list template and category list template. Find the code tab and click it.

Then add this:

[code]
function onEnd()
{
    if (isset($this['posts']))
        foreach($this['posts'] as &amp;$post) {
            $post-&gt;content_html = wordwrap($post-&gt;content_html, 250);
            $post-&gt;content_html = explode(&quot;\n&quot;, $post-&gt;content_html);
            $post-&gt;content_html = $post-&gt;content_html[0] . '...';
        }
}
[/code] 

Before is display it'll be parsed and limited. The code is a bit of code that I modified from SO. I'd link back but can't find the source thread anymore.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>515</wp:post_id>
		<wp:post_date><![CDATA[2014-10-07 09:05:56]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-10-07 17:05:56]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[october-cms-set-preview-post-length]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="octobercms"><![CDATA[octobercms]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>October CMS How to replace component templates from plugins</title>
		<link>http://andrewelkins.com/2014/10/07/october-cms-how-to-replace-component-templates-from-plugins/</link>
		<pubDate>Tue, 07 Oct 2014 18:34:00 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=517</guid>
		<description></description>
		<content:encoded><![CDATA[How can you replace component templates from plugins? IE I want to replace the posts default template in the blog plugin with my own markup. <a href="https://github.com/rainlab/blog-plugin/blob/master/components/posts/default.htm" target="_blank">Post List from the blog plugin</a>

-- Edit --

Use the override of a template instead. <a href="https://octobercms.com/docs/cms/components#overriding-partials" target="_blank">https://octobercms.com/docs/cms/components#overriding-partials</a>

-- Old way --

Turns out it is easy, just copy and paste in to your own partial. I typically name mine prefixed with the plug-in. "blog-plugin/post-list.htm"

Then just modify to your specs and insert in the page.

Originally:
[code]
{% component 'blogPosts' %}
[/code]
Becomes:
[code]
{% partial 'blog-plugin/posts-list.htm' %}
[/code]

See the comments below for other solutions. In the <a href="https://octobercms.com/docs/cms/components#overriding-partials" target="_blank">docs</a> it notes that you can override the partial that is used.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>517</wp:post_id>
		<wp:post_date><![CDATA[2014-10-07 10:34:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-10-07 18:34:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[october-cms-how-to-replace-component-templates-from-plugins]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="octobercms"><![CDATA[octobercms]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>141</wp:comment_id>
			<wp:comment_author><![CDATA[polson]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[polson@oncalladvisors.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[98.172.143.243]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-10-07 12:58:39]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-10-07 20:58:39]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You can also do it in your theme like so: https://github.com/octobercms/docs/issues/18]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_221977278]]></wp:meta_key>
				<wp:meta_value><![CDATA[221977278]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_1329955262]]></wp:meta_key>
				<wp:meta_value><![CDATA[1329955262]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_1329955293]]></wp:meta_key>
				<wp:meta_value><![CDATA[1329955293]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>142</wp:comment_id>
			<wp:comment_author><![CDATA[AndrewElkins]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[accounts@andrewelkins.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[108.185.175.189]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-10-07 17:15:44]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-10-08 01:15:44]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[polson Very nice. Thanks for that link. 

Interestingly I thought I had tried that method and it didn't work as expected. I'll give it another go next time.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_222066550]]></wp:meta_key>
				<wp:meta_value><![CDATA[222066550]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_1330549916]]></wp:meta_key>
				<wp:meta_value><![CDATA[1330549916]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_1330549925]]></wp:meta_key>
				<wp:meta_value><![CDATA[1330549925]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_1330556343]]></wp:meta_key>
				<wp:meta_value><![CDATA[1330556343]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>143</wp:comment_id>
			<wp:comment_author><![CDATA[polson]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[polson@oncalladvisors.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[98.172.143.243]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-10-08 05:09:58]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-10-08 13:09:58]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[AndrewElkins Also, you can inject the html/twig right into your page.  See minute 28 of: https://octobercms.com/blog/post/mastering-components]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_cmap_222198090]]></wp:meta_key>
				<wp:meta_value><![CDATA[222198090]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_1331458953]]></wp:meta_key>
				<wp:meta_value><![CDATA[1331458953]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[livefyre_amap_1331458963]]></wp:meta_key>
				<wp:meta_value><![CDATA[1331458963]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Convert pdf to png easily</title>
		<link>http://andrewelkins.com/2014/11/23/convert-pdf-to-png-easily/</link>
		<pubDate>Sun, 23 Nov 2014 20:29:08 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=523</guid>
		<description></description>
		<content:encoded><![CDATA[I need to quickly convert odfs to image for both online processing and one off processing. Luckily imagemagick had me covered for both.

First install imagemagick:

[code]
sudo apt-get install imagemagick
[/code]

Then use the convert function to do the work:

[code]
convert example.pdf example.png
[/code]

This will append ## to the file name if the pdf is multiple pages. convert also has a few options that effect the quality, size, trimming, etc.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>523</wp:post_id>
		<wp:post_date><![CDATA[2014-11-23 12:29:08]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-11-23 20:29:08]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[convert-pdf-to-png-easily]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="command-line-linux"><![CDATA[Command Line]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Mozilla Developer Edition</title>
		<link>http://andrewelkins.com/2014/11/23/mozilla-developer-edition/</link>
		<pubDate>Sun, 23 Nov 2014 20:31:06 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=525</guid>
		<description></description>
		<content:encoded><![CDATA[I recently discovered <a href="https://www.mozilla.org/en-US/firefox/developer/?utm_source=firefox-com&utm_medium=referral&utm_campaign=FX10&utm_content=fxdev-stackoverflow" target="_blank">Mozilla Developer Edition</a>. 

<img src="https://mozorg.cdn.mozilla.net/media/img/firefox/developer/screenshot.jpg" width="832" height="456" class="alignnone" />

So far I've love it's inline ability to edit css. It's an entirely natural way to tweak the css on the fly.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>525</wp:post_id>
		<wp:post_date><![CDATA[2014-11-23 12:31:06]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-11-23 20:31:06]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[mozilla-developer-edition]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How to call a python function by using a variable python</title>
		<link>http://andrewelkins.com/2015/01/23/how-to-call-a-python-function-by-using-a-variable-python/</link>
		<pubDate>Fri, 23 Jan 2015 19:07:44 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=529</guid>
		<description></description>
		<content:encoded><![CDATA[I needed to, in a programmatic way, determine the function name and then call the function.

Here's an example use case. I have a bunch of functions called, ["function1", "function2", "function3", "function4", etc] Then I have a function that takes a number as a param. Then should return the proper function.

[code]
class my_awesome_class():
    def function1(self, number):
        # do something cool
        pass

    def function2(self, number):
        # do something cool
        pass

[...]

    def test_function(self, number, data):
        function_string = ''.join(['function',str(number)])
        try:
            t = getattr(my_awesome_class(), function_string)
            return t
        except AttributeError:
            print 'function not found &quot;%s&quot; (%s)' % (function_string, data)
[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>529</wp:post_id>
		<wp:post_date><![CDATA[2015-01-23 11:07:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-01-23 19:07:44]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-to-call-a-python-function-by-using-a-variable-python]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="category" nicename="python"><![CDATA[python]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Move files while preserving timestamps</title>
		<link>http://andrewelkins.com/2015/04/02/move-files-while-preserving-timestamps/</link>
		<pubDate>Fri, 03 Apr 2015 00:30:32 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=532</guid>
		<description></description>
		<content:encoded><![CDATA[A quick way to move files in linux while keeping their timestamps. In short mv doesn't support this. The work around is to copy instead.

[code]
cp -p -r -l source/date target/
rm -rf source/data
[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>532</wp:post_id>
		<wp:post_date><![CDATA[2015-04-02 16:30:32]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-04-03 00:30:32]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[move-files-while-preserving-timestamps]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="command-line-linux"><![CDATA[Command Line]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How to set a password on pdf in Ubuntu</title>
		<link>http://andrewelkins.com/2015/04/10/how-to-set-a-password-on-pdf-in-ubuntu/</link>
		<pubDate>Fri, 10 Apr 2015 22:32:07 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=535</guid>
		<description></description>
		<content:encoded><![CDATA[This one is super simple.

[code]
sudo apt-get install pdftk
pdftk input-file.pdf output output-file.pdf userpw mysupersecretpassword
[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>535</wp:post_id>
		<wp:post_date><![CDATA[2015-04-10 14:32:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-04-10 22:32:07]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-to-set-a-password-on-pdf-in-ubuntu]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="command-line-linux"><![CDATA[Command Line]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Password protect a zip file</title>
		<link>http://andrewelkins.com/2015/04/19/password-protect-a-zip-file/</link>
		<pubDate>Mon, 20 Apr 2015 00:42:54 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=538</guid>
		<description></description>
		<content:encoded><![CDATA[Sometime a simple encrypt with a password is needed. This isn't the <a href="http://andrewelkins.com/linux/7z-file-encryption-with-password/" title="7z file encryption with password">most secure method (7z provides more secure methods)</a>, but is better than nothing. I simple way to do it is to create a zip password protected with all the files.

[code]
zip --password yourpassword filename.zip file.doc file1.doc file2.doc
[/code]

Often it's easier to just zip a whole directory.

[code]
zip --password yourpassword -r filename.zip files-to-be-zipped/
[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>538</wp:post_id>
		<wp:post_date><![CDATA[2015-04-19 16:42:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-04-20 00:42:54]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[password-protect-a-zip-file]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="command-line-linux"><![CDATA[Command Line]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>7z file encryption with password</title>
		<link>http://andrewelkins.com/2015/04/19/7z-file-encryption-with-password/</link>
		<pubDate>Mon, 20 Apr 2015 00:47:27 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=541</guid>
		<description></description>
		<content:encoded><![CDATA[Previously I've transferred file with a pgp key, but this is an ok alternative. 

[code]
7za a -tzip -psuperSecurePassword -mem=AES256 filename.zip file.doc file1.doc file2.doc
[/code]

You can also checkout the easier and more supported <a href="http://andrewelkins.com/linux/password-protect-a-zip-file/" title="Password protect a zip file">zip method</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>541</wp:post_id>
		<wp:post_date><![CDATA[2015-04-19 16:47:27]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-04-20 00:47:27]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[7z-file-encryption-with-password]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="command-line-linux"><![CDATA[Command Line]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How to find large volumes on linux</title>
		<link>http://andrewelkins.com/2015/04/26/how-to-find-large-volumes-on-linux/</link>
		<pubDate>Sun, 26 Apr 2015 20:16:16 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=544</guid>
		<description></description>
		<content:encoded><![CDATA[Running linux machines sometimes it's needed to figure out what is taking up a large amount of room on a server. Here's an easy way to investigate large directories.

[code]
du -h &lt;dir&gt; | grep '[0-9\.]\+G'
[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>544</wp:post_id>
		<wp:post_date><![CDATA[2015-04-26 12:16:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-04-26 20:16:16]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-to-find-large-volumes-on-linux]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="command-line-linux"><![CDATA[Command Line]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[image]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Linux add user</title>
		<link>http://andrewelkins.com/2015/07/14/linux-add-user/</link>
		<pubDate>Tue, 14 Jul 2015 21:48:43 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=567</guid>
		<description></description>
		<content:encoded><![CDATA[The simple way to add a user is to use the linux interactive mode.
<blockquote>sudo adduser {username}</blockquote>
Then let it guide you through the setup.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>567</wp:post_id>
		<wp:post_date><![CDATA[2015-07-14 13:48:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-07-14 21:48:43]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[linux-add-user]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_format" nicename="post-format-aside"><![CDATA[Aside]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Add user to existing group</title>
		<link>http://andrewelkins.com/2015/07/14/add-user-to-existing-group/</link>
		<pubDate>Tue, 14 Jul 2015 21:50:40 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=569</guid>
		<description></description>
		<content:encoded><![CDATA[This is dead simple. I often need to add a new user to the sudoer group, "sudo" by default.
<blockquote>sudo usermod -a -G groupName userName</blockquote>
So for adding a user to the sudoers group.
<blockquote>sudo usermod -a -G sudo {username}</blockquote>
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>569</wp:post_id>
		<wp:post_date><![CDATA[2015-07-14 13:50:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-07-14 21:50:40]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[add-user-to-existing-group]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_format" nicename="post-format-aside"><![CDATA[Aside]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bash test if file exists</title>
		<link>http://andrewelkins.com/2015/10/14/bash-test-if-file-exists/</link>
		<pubDate>Wed, 14 Oct 2015 18:58:24 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=574</guid>
		<description></description>
		<content:encoded><![CDATA[Using bash I needed to check that a file exists, then do something. This one turns out to be super simple. I wanted to conditionally load a db file if it existed in this case.

What I needed was, a check for the file in bash. Then execute the command. In this instance it was to load a postgres restore file.
<blockquote>
<pre class="bash">db_dump="/home/vagrant/files/db.dump"</pre>
<pre class="bash">[ -f $db_dump ] &amp;&amp; printf "Loading DB...\n";sudo su postgres -c "pg_restore -d db_name_here $db_dump;" || printf "No db dump to load\n"</pre>
</blockquote>
Another way to write this is to use a full if/else conditional. Admittedly this is a little cleaner.
<blockquote>
<pre class="bash">db_dump="/home/vagrant/files/db.dump"
if [ -f "$db_dump" ]
then
	printf "Loading DB...\n";
        sudo su postgres -c "pg_restore -d db_name_here $db_dump;"
else
	printf "No DB file found.\n";
fi</pre>
</blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>574</wp:post_id>
		<wp:post_date><![CDATA[2015-10-14 10:58:24]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-14 18:58:24]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[bash-test-if-file-exists]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bash"><![CDATA[Bash]]></category>
		<category domain="category" nicename="command-line-linux"><![CDATA[Command Line]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
			<wp:meta_value><![CDATA[bash]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
			<wp:meta_value><![CDATA[64]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>GIT push from one repo to another</title>
		<link>http://andrewelkins.com/2015/10/15/git-push-from-one-repo-to-another/</link>
		<pubDate>Thu, 15 Oct 2015 19:05:21 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=579</guid>
		<description></description>
		<content:encoded><![CDATA[Splitting off from a branch to another git repo seems like it would suck. In reality it's simple. Two lines and you're set.

Things you'll need:
<ul>
	<li>Source repo pulled down locally</li>
	<li>Target repo created on your git server (GitHub, BitBucket, GitLab, etc)</li>
	<li>Url for target git repo</li>
	<li>Branches</li>
</ul>
<blockquote>$ cd /path/to/source
$ git remote add targetrepo git@bitbucket.org:my_team/my_awesome_target_repo.git
$ git push targetrepo my_branch_to_create_off_of:master</blockquote>
That'll create the master branch off of the branch "my_branch_to_create_off_of" from your local repo.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>579</wp:post_id>
		<wp:post_date><![CDATA[2015-10-15 11:05:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-15 19:05:21]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[git-push-from-one-repo-to-another]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Failed to spawn command gulp</title>
		<link>http://andrewelkins.com/2015/10/20/failed-to-spawn-command-gulp/</link>
		<pubDate>Wed, 21 Oct 2015 05:00:24 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=582</guid>
		<description></description>
		<content:encoded><![CDATA[I ran in to the error with Atom, Failed to spawn command gulp. The solution for me was to install the module globally.
<pre class="lang-js prettyprint prettyprinted"><code><span class="pln">$ sudo npm install -g gulp
/usr/bin/gulp -&gt; /usr/lib/node_modules/gulp/bin/gulp.js
gulp@3.9.0 /usr/lib/node_modules/gulp
├── interpret@0.6.6
├── pretty-hrtime@1.0.1
├── deprecated@0.0.1
├── archy@1.0.0
├── minimist@1.2.0
├── tildify@1.1.2 (os-homedir@1.0.1)
├── v8flags@2.0.10 (user-home@1.1.1)
├── semver@4.3.6
├── chalk@1.1.1 (escape-string-regexp@1.0.3, supports-color@2.0.0, ansi-styles@2.1.0, has-ansi@2.0.0, strip-ansi@3.0.0)
├── orchestrator@0.3.7 (sequencify@0.0.7, stream-consume@0.1.0, end-of-stream@0.1.5)
├── liftoff@2.2.0 (extend@2.0.1, rechoir@0.6.2, flagged-respawn@0.3.1, resolve@1.1.6, findup-sync@0.3.0)
├── vinyl-fs@0.3.14 (graceful-fs@3.0.8, strip-bom@1.0.0, vinyl@0.4.6, defaults@1.0.3, mkdirp@0.5.1, through2@0.6.5, glob-stream@3.1.18, glob-watcher@0.0.6)
└── gulp-util@3.0.7 (object-assign@3.0.0, array-differ@1.0.0, array-uniq@1.0.2, lodash._reinterpolate@3.0.0, lodash._reescape@3.0.0, lodash._reevaluate@3.0.0, beeper@1.1.0, fancy-log@1.1.0, replace-ext@0.0.1, has-gulplog@0.1.0, vinyl@0.5.3, gulplog@1.0.0, lodash.template@3.6.2, multipipe@0.1.2, through2@2.0.0, dateformat@1.0.11)</span></code></pre>
Easy and done.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>582</wp:post_id>
		<wp:post_date><![CDATA[2015-10-20 21:00:24]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-21 05:00:24]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[failed-to-spawn-command-gulp]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="category" nicename="software"><![CDATA[Software]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
			<wp:meta_value><![CDATA[gulp]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
			<wp:meta_value><![CDATA[61]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Ubuntu Command line Display Driver Change</title>
		<link>http://andrewelkins.com/2015/10/30/ubuntu-command-line-display-driver-change/</link>
		<pubDate>Fri, 30 Oct 2015 16:24:47 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=585</guid>
		<description></description>
		<content:encoded><![CDATA[Recently upgraded to 15.10 and that looked okay at first. However, the displa driver that it installed, NVIDIA, was causing issues. So I defaulted back to the open source driver and reboot. MISTAKE! Ended up causing the system to crash and couldn't do anything about it.

I rebooted into root terminal. Then ran a command to display the available drivers.
<blockquote>ubuntu-drivers devices</blockquote>
The spit out a list of drivers. Then I reinstalled the latest available nvidia driver.
<blockquote>apt-get install nvidia-352-updates</blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>585</wp:post_id>
		<wp:post_date><![CDATA[2015-10-30 08:24:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-30 16:24:47]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ubuntu-command-line-display-driver-change]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="command-line-linux"><![CDATA[Command Line]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How to check cp progress after cp has started</title>
		<link>http://andrewelkins.com/2015/11/02/how-to-check-cp-progress-after-cp-has-started/</link>
		<pubDate>Mon, 02 Nov 2015 19:02:33 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=587</guid>
		<description></description>
		<content:encoded><![CDATA[First, the easier way to do this is to use rsync in the first place.
<blockquote>rsync -avh --progress sourceDirectory destinationDirectory</blockquote>
However, sometime you think cp will be quick and you already kicked it off. Here is a quick way to check the progress of a copy command after you've already started.
<blockquote>watch lsof -p`pgrep -x cp`</blockquote>
This will let you know what it is transferring and how much it has left to do. In a way it provides a way to check the progress of the cp, copy comand.

To find out more check out these two SO links:

<a href="http://unix.stackexchange.com/questions/66795/how-to-check-progress-of-running-cp" target="_blank">Check progress</a>

<a href="http://unix.stackexchange.com/questions/65077/is-it-possible-to-see-cp-speed-and-copied" target="_blank">CP Command Help</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>587</wp:post_id>
		<wp:post_date><![CDATA[2015-11-02 11:02:33]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-11-02 19:02:33]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-to-check-cp-progress-after-cp-has-started]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="command-line-linux"><![CDATA[Command Line]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
			<wp:meta_value><![CDATA[cp]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
			<wp:meta_value><![CDATA[70]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
			<wp:meta_value><![CDATA[How to check the status of the cp command in Linux when copying]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Simple Python Web Scraper</title>
		<link>http://andrewelkins.com/2016/02/22/simple-python-web-scraper/</link>
		<pubDate>Mon, 22 Feb 2016 18:52:48 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=596</guid>
		<description></description>
		<content:encoded><![CDATA[I needed a simple html only scraper. (This doesn't use js, won't pull down data via AJAX). I found an example on another site, <a href="http://www.thetaranights.com/web-mining-login-to-any-website-using-mechanize-module-in-python/" target="_blank">thetaranights.com</a>, but it wasn't exactly what I needed. It only pulled the data and printed it to screen. I added a list to loop through and auto saving by url name to a html file.

[code]
import mechanize  #pip install mechanize

br = mechanize.Browser()
br.set_handle_robots(False)
br.addheaders = [(&amp;quot;User-agent&amp;quot;,&amp;quot;Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.2.13) Gecko/20101206 Ubuntu/10.10 (maverick) Firefox/3.6.13&amp;quot;)]

sign_in = br.open(&amp;quot;https://this.example.com/login&amp;quot;)  #the login url

br.select_form(nr = 0) #accessing form by their index. Since we have only one form in this example, nr =0.
#br.select_form(name = &amp;quot;form name&amp;quot;) Alternatively you may use this instead of the above line if your form has name attribute available.

br[&amp;quot;email&amp;quot;] = &amp;quot;email or username&amp;quot; #the key &amp;quot;username&amp;quot; is the variable that takes the username/email value

br[&amp;quot;password&amp;quot;] = &amp;quot;password&amp;quot;    #the key &amp;quot;password&amp;quot; is the variable that takes the password value

logged_in = br.submit()   #submitting the login credentials

logincheck = logged_in.read()  #reading the page body that is redirected after successful login

urls = [&amp;quot;https://this.example.com/some/page&amp;quot;,&amp;quot;https://this.example.com/some/page2&amp;quot;]

for url in urls:
	req = br.open(url).read()
	filename = url.split('/')[-1] + &amp;quot;.html&amp;quot;
	f = open(filename, 'w')
	f.write(req)
	f.close()

[/code]

Which produces 2 files:
page.html
page2.html]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>596</wp:post_id>
		<wp:post_date><![CDATA[2016-02-22 10:52:48]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-02-22 18:52:48]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[simple-python-web-scraper]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="category" nicename="python"><![CDATA[python]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Head all files in directory</title>
		<link>http://andrewelkins.com/2016/06/06/head-all-files-in-directory/</link>
		<pubDate>Mon, 06 Jun 2016 21:30:20 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=601</guid>
		<description></description>
		<content:encoded><![CDATA[Needed to head all files in a directory.

[code]
#!/usr/bin/env bash
DEST=/tmp
for i in /files/to/head/*
do
   head -10 &quot;${i}&quot; &gt; ${DEST}/$(basename $i)
done
[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>601</wp:post_id>
		<wp:post_date><![CDATA[2016-06-06 13:30:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-06-06 21:30:20]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[head-all-files-in-directory]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bash"><![CDATA[Bash]]></category>
		<category domain="post_tag" nicename="bash"><![CDATA[bash]]></category>
		<category domain="category" nicename="command-line-linux"><![CDATA[Command Line]]></category>
		<category domain="post_tag" nicename="head"><![CDATA[head]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="loop"><![CDATA[loop]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Vagrant error on up</title>
		<link>http://andrewelkins.com/2016/09/27/vagrant-error-on-up/</link>
		<pubDate>Tue, 27 Sep 2016 17:16:40 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=603</guid>
		<description></description>
		<content:encoded><![CDATA[I was executing a vagrant up on my machine. It was giving an nfs error. 

[code]
mount -o 'vers=3,udp' 192.168.10.1:'/opt/&lt;snip&gt;/mozilla/kuma' /home/vagrant/src

Stdout from the command:



Stderr from the command:

stdin: is not a tty
mount.nfs: requested NFS version or transport protocol is not supported
[/code]

I went hunting for a resolution. I need to install nfs libs.

[code]
sudo apt-get install nfs-common nfs-kernel-server
[/code]

Then it would boot.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>603</wp:post_id>
		<wp:post_date><![CDATA[2016-09-27 09:16:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-09-27 17:16:40]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[vagrant-error-on-up]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>grep without filenames</title>
		<link>http://andrewelkins.com/2016/11/01/grep-without-filenames/</link>
		<pubDate>Tue, 01 Nov 2016 19:26:16 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=605</guid>
		<description></description>
		<content:encoded><![CDATA[I needed to grep a directory, and sub directories, and not displaying the filenames in the output. This is when the man page came to the rescue.

[code]
man grep | grep filename
[/code]

Output

[code]
       -H, --with-filename
       -h, --no-filename
[/code]

There we go, <strong>-h, --no-filename</strong>, is what I needed.

Example with output to a file:

[code]
grep -r &quot;searching-for-this&quot; . --no-filename &gt; /tmp/test.txt
[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>605</wp:post_id>
		<wp:post_date><![CDATA[2016-11-01 11:26:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-11-01 19:26:16]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[grep-without-filenames]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cli"><![CDATA[cli]]></category>
		<category domain="post_tag" nicename="command"><![CDATA[command]]></category>
		<category domain="category" nicename="command-line-linux"><![CDATA[Command Line]]></category>
		<category domain="post_tag" nicename="file"><![CDATA[file]]></category>
		<category domain="post_tag" nicename="grep"><![CDATA[grep]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="linux-2"><![CDATA[linux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
			<wp:meta_value><![CDATA[grep filenames linux]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
			<wp:meta_value><![CDATA[I needed to grep a directory, and sub directories, and not displaying the filenames in the output. This is when the man page came to the rescue.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
			<wp:meta_value><![CDATA[34]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Docker remove ALL volumes not attached</title>
		<link>http://andrewelkins.com/2016/11/15/docker-remove-volumes-not-attached/</link>
		<pubDate>Tue, 15 Nov 2016 20:51:25 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=609</guid>
		<description></description>
		<content:encoded><![CDATA[Docker can be tricky to debug. There's instances where after upgrading a container the volume that was previously attached fails to work.

In this case it was a dev image and the quickest, and dirtiest, option was to clear out and rebuild. I could go one by one to delete the specific volumes.

[code]
docker volume ls
docker volume rm {specific_docker_container}
[/code]

Instead I chose to delete all volumes not currently in use. This worked for my use case as I only have two dockers setups, left the one I wanted to keep running while executing the following commands.

[code]
docker volume rm `docker volume ls -q -f dangling=true`
[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>609</wp:post_id>
		<wp:post_date><![CDATA[2016-11-15 12:51:25]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-11-15 20:51:25]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[docker-remove-volumes-not-attached]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="command-line-linux"><![CDATA[Command Line]]></category>
		<category domain="category" nicename="docker"><![CDATA[Docker]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
			<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
			<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Laravel queue environment</title>
		<link>http://andrewelkins.com/2017/03/23/laravel-queue-environment/</link>
		<pubDate>Thu, 23 Mar 2017 15:30:36 +0000</pubDate>
		<dc:creator><![CDATA[ae]]></dc:creator>
		<guid isPermaLink="false">http://andrewelkins.com/?p=611</guid>
		<description></description>
		<content:encoded><![CDATA[Ran in to an issue running queue through supervisor. I'll give a quick rundown of my setup, the issue and solution.

I have supervisor running the queue daemon.
[code]
[program:laravel_queue]
command=php /var/www/example.com/artisan queue:listen
autostart=true
autorestart=true
stderr_logfile=/var/log/laraqueue.err.log
stdout_logfile=/var/log/laraqueue.out.log
[/code]

The key part check on is the env variable isn't set automatically for the queue. You'll need to set it via the ---env flag.

[code]
[program:laravel_queue]
command=php /var/www/example.com/artisan queue:listen --env=prod
autostart=true
autorestart=true
stderr_logfile=/var/log/laraqueue.err.log
stdout_logfile=/var/log/laraqueue.out.log
[/code]

That's what I was missing. Once I `sudo supervisorctl restart laravel_queue` all was well with the queue.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>611</wp:post_id>
		<wp:post_date><![CDATA[2017-03-23 07:30:36]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-03-23 15:30:36]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[laravel-queue-environment]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
			<wp:meta_value><![CDATA[30]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
